(** This file has been generated by the Catala compiler, do not edit! *)

open Runtime_ocaml.Runtime

[@@@ocaml.warning "-4-26-27-32-41-42"]

module TypeBailleur = struct
  type t = BailleurSocial of unit | BailleurPrive of unit
end

let embed_type_bailleur (x : TypeBailleur.t) : runtime_value =
  Enum
    ( ["TypeBailleur"],
      match x with
      | BailleurSocial x -> "BailleurSocial", embed_unit x
      | BailleurPrive x -> "BailleurPrivé", embed_unit x )

module TypePret = struct
  type t =
    | D331_32 of unit
    | D331_63_64 of unit
    | D331_59_8 of unit
    | D331_76_1 of unit
    | Autre of unit
end

let embed_type_pret (x : TypePret.t) : runtime_value =
  Enum
    ( ["TypePrêt"],
      match x with
      | D331_32 x -> "D331_32", embed_unit x
      | D331_63_64 x -> "D331_63_64", embed_unit x
      | D331_59_8 x -> "D331_59_8", embed_unit x
      | D331_76_1 x -> "D331_76_1", embed_unit x
      | Autre x -> "Autre", embed_unit x )

module TitulairePret = struct
  type t =
    | Demandeur of unit
    | VendeurQuandDemandeurAContratLocationAccession of unit
end

let embed_titulaire_pret (x : TitulairePret.t) : runtime_value =
  Enum
    ( ["TitulairePrêt"],
      match x with
      | Demandeur x -> "Demandeur", embed_unit x
      | VendeurQuandDemandeurAContratLocationAccession x ->
        "VendeurQuandDemandeurAContratLocationAccession", embed_unit x )

module TypeTravauxLogementD83215 = struct
  type t =
    | TravauxPourAcquisitionD832_15_1 of unit
    | TravauxSurLogementDejaAcquisD832_15_2 of unit
    | PasDeTravaux of unit
end

let embed_type_travaux_logement_d832_15 (x : TypeTravauxLogementD83215.t) :
    runtime_value =
  Enum
    ( ["TypeTravauxLogementD832_15"],
      match x with
      | TravauxPourAcquisitionD832_15_1 x ->
        "TravauxPourAcquisitionD832_15_1", embed_unit x
      | TravauxSurLogementDejaAcquisD832_15_2 x ->
        "TravauxSurLogementDéjàAcquisD832_15_2", embed_unit x
      | PasDeTravaux x -> "PasDeTravaux", embed_unit x )

module TypeTravauxLogementR8425 = struct
  type t =
    | ObjectifDecenceLogement of unit
    | PrevuDansListeR321_15 of unit
    | AgrandirOuRendreHabitableD331_63 of unit
    | PasDeTravaux of unit
end

let embed_type_travaux_logement_r842_5 (x : TypeTravauxLogementR8425.t) :
    runtime_value =
  Enum
    ( ["TypeTravauxLogementR842_5"],
      match x with
      | ObjectifDecenceLogement x -> "ObjectifDécenceLogement", embed_unit x
      | PrevuDansListeR321_15 x -> "PrévuDansListeR321_15", embed_unit x
      | AgrandirOuRendreHabitableD331_63 x ->
        "AgrandirOuRendreHabitableD331_63", embed_unit x
      | PasDeTravaux x -> "PasDeTravaux", embed_unit x )

module AmelioreParOccupant = struct
  type t = Oui of unit | Non of unit
end

let embed_ameliore_par_occupant (x : AmelioreParOccupant.t) : runtime_value =
  Enum
    ( ["AmélioréParOccupant"],
      match x with Oui x -> "Oui", embed_unit x | Non x -> "Non", embed_unit x
    )

module LimiteTranche = struct
  type t = Revenu of money | Infini of unit
end

let embed_limite_tranche (x : LimiteTranche.t) : runtime_value =
  Enum
    ( ["LimiteTranche"],
      match x with
      | Revenu x -> "Revenu", embed_money x
      | Infini x -> "Infini", embed_unit x )

module LimiteTrancheDecimal = struct
  type t = Revenu of decimal | Infini of unit
end

let embed_limite_tranche_decimal (x : LimiteTrancheDecimal.t) : runtime_value =
  Enum
    ( ["LimiteTrancheDécimal"],
      match x with
      | Revenu x -> "Revenu", embed_decimal x
      | Infini x -> "Infini", embed_unit x )

module PrestationRecue = struct
  type t =
    | AllocationsFamiliales of unit
    | ComplementFamilial of unit
    | AllocationJeuneEnfant of unit
    | AllocationSoutienFamilial of unit
    | AllocationSoutienEnfantHandicape of unit
    | AllocationAdulteHandicape of unit
end

let embed_prestation_recue (x : PrestationRecue.t) : runtime_value =
  Enum
    ( ["PrestationReçue"],
      match x with
      | AllocationsFamiliales x -> "AllocationsFamiliales", embed_unit x
      | ComplementFamilial x -> "ComplémentFamilial", embed_unit x
      | AllocationJeuneEnfant x -> "AllocationJeuneEnfant", embed_unit x
      | AllocationSoutienFamilial x -> "AllocationSoutienFamilial", embed_unit x
      | AllocationSoutienEnfantHandicape x ->
        "AllocationSoutienEnfantHandicapé", embed_unit x
      | AllocationAdulteHandicape x -> "AllocationAdulteHandicapé", embed_unit x
    )

module TypeContratTravail = struct
  type t = CDI of unit | Autres of unit
end

let embed_type_contrat_travail (x : TypeContratTravail.t) : runtime_value =
  Enum
    ( ["TypeContratTravail"],
      match x with
      | CDI x -> "CDI", embed_unit x
      | Autres x -> "Autres", embed_unit x )

module ParentOuAutre = struct
  type t =
    | DemandeurOuConjointOuParentOuViaPartsSocietes of decimal
    | Autre of unit
end

let embed_parent_ou_autre (x : ParentOuAutre.t) : runtime_value =
  Enum
    ( ["ParentOuAutre"],
      match x with
      | DemandeurOuConjointOuParentOuViaPartsSocietes x ->
        "DemandeurOuConjointOuParentOuViaPartsSociétés", embed_decimal x
      | Autre x -> "Autre", embed_unit x )

module SituationGardeAlternee = struct
  type t =
    | PasDeGardeAlternee of unit
    | GardeAlterneeCoefficientPriseEnCharge of decimal
end

let embed_situation_garde_alternee (x : SituationGardeAlternee.t) :
    runtime_value =
  Enum
    ( ["SituationGardeAlternée"],
      match x with
      | PasDeGardeAlternee x -> "PasDeGardeAlternée", embed_unit x
      | GardeAlterneeCoefficientPriseEnCharge x ->
        "GardeAlternéeCoefficientPriseEnCharge", embed_decimal x )

module Parente = struct
  type t =
    | Ascendant of unit
    | Descendant of unit
    | CollateralDeuxiemeTroisiemeDegre of unit
end

let embed_parente (x : Parente.t) : runtime_value =
  Enum
    ( ["Parenté"],
      match x with
      | Ascendant x -> "Ascendant", embed_unit x
      | Descendant x -> "Descendant", embed_unit x
      | CollateralDeuxiemeTroisiemeDegre x ->
        "CollatéralDeuxièmeTroisièmeDegré", embed_unit x )

module DateDeNaissanceOuMoisDeGrossesse = struct
  type t =
    | DateDeNaissance of date
    | AvantPremierJourMoisCivilTroisiemeMoisDeGrossesse of unit
    | ApresPremierJourMoisCivilTroisiemeMoisDeGrossesse of unit
end

let embed_date_de_naissance_ou_mois_de_grossesse
    (x : DateDeNaissanceOuMoisDeGrossesse.t) : runtime_value =
  Enum
    ( ["DateDeNaissanceOuMoisDeGrossesse"],
      match x with
      | DateDeNaissance x -> "DateDeNaissance", embed_date x
      | AvantPremierJourMoisCivilTroisiemeMoisDeGrossesse x ->
        "AvantPremierJourMoisCivilTroisièmeMoisDeGrossesse", embed_unit x
      | ApresPremierJourMoisCivilTroisiemeMoisDeGrossesse x ->
        "AprèsPremierJourMoisCivilTroisièmeMoisDeGrossesse", embed_unit x )

module Nationalite = struct
  type t = Francaise of unit | Etrangere of unit
end

let embed_nationalite (x : Nationalite.t) : runtime_value =
  Enum
    ( ["Nationalité"],
      match x with
      | Francaise x -> "Française", embed_unit x
      | Etrangere x -> "Étrangère", embed_unit x )

module ZoneDHabitation = struct
  type t = Zone1 of unit | Zone2 of unit | Zone3 of unit
end

let embed_zone_d_habitation (x : ZoneDHabitation.t) : runtime_value =
  Enum
    ( ["ZoneDHabitation"],
      match x with
      | Zone1 x -> "Zone1", embed_unit x
      | Zone2 x -> "Zone2", embed_unit x
      | Zone3 x -> "Zone3", embed_unit x )

module CategorieCalculAPL = struct
  type t =
    | Location of unit
    | AccessionPropriete of unit
    | LogementFoyer of unit
end

let embed_categorie_calcul_a_p_l (x : CategorieCalculAPL.t) : runtime_value =
  Enum
    ( ["CatégorieCalculAPL"],
      match x with
      | Location x -> "Location", embed_unit x
      | AccessionPropriete x -> "AccessionPropriété", embed_unit x
      | LogementFoyer x -> "LogementFoyer", embed_unit x )

module PaiementLogementDistinctProfessionnel = struct
  type t = OuiAvecLoyerOuCharges of money | Non of unit
end

let embed_paiement_logement_distinct_professionnel
    (x : PaiementLogementDistinctProfessionnel.t) : runtime_value =
  Enum
    ( ["PaiementLogementDistinctProfessionnel"],
      match x with
      | OuiAvecLoyerOuCharges x -> "OuiAvecLoyerOuCharges", embed_money x
      | Non x -> "Non", embed_unit x )

module VersementA = struct
  type t =
    | Bailleur of unit
    | Beneficiaire of unit
    | EtablissementHabilite of unit
end

let embed_versement_a (x : VersementA.t) : runtime_value =
  Enum
    ( ["VersementÀ"],
      match x with
      | Bailleur x -> "Bailleur", embed_unit x
      | Beneficiaire x -> "Bénéficiaire", embed_unit x
      | EtablissementHabilite x -> "ÉtablissementHabilité", embed_unit x )

module DepenseLogement = struct
  type t =
    | TotalAnnuelEcheances of money
    | Mensualite of money
    | Loyer of money
end

let embed_depense_logement (x : DepenseLogement.t) : runtime_value =
  Enum
    ( ["DépenseLogement"],
      match x with
      | TotalAnnuelEcheances x -> "TotalAnnuelÉchéances", embed_money x
      | Mensualite x -> "Mensualité", embed_money x
      | Loyer x -> "Loyer", embed_money x )

module ModeOccupationImpaye = struct
  type t = ImpayeLoyer of unit | ImpayePret of unit
end

let embed_mode_occupation_impaye (x : ModeOccupationImpaye.t) : runtime_value =
  Enum
    ( ["ModeOccupationImpayé"],
      match x with
      | ImpayeLoyer x -> "ImpayéLoyer", embed_unit x
      | ImpayePret x -> "ImpayéPrêt", embed_unit x )

module EligibiliteAllocationLogement = struct
  type t =
    | PasEligible of unit
    | AllocationLogementFamiliale of unit
    | AllocationLogementSociale of unit
end

let embed_eligibilite_allocation_logement (x : EligibiliteAllocationLogement.t)
    : runtime_value =
  Enum
    ( ["ÉligibilitéAllocationLogement"],
      match x with
      | PasEligible x -> "PasÉligible", embed_unit x
      | AllocationLogementFamiliale x ->
        "AllocationLogementFamiliale", embed_unit x
      | AllocationLogementSociale x -> "AllocationLogementSociale", embed_unit x
    )

module TypeAidesPersonnelleLogement = struct
  type t =
    | AidePersonnaliseeLogement of unit
    | AllocationLogementFamiliale of unit
    | AllocationLogementSociale of unit
end

let embed_type_aides_personnelle_logement (x : TypeAidesPersonnelleLogement.t) :
    runtime_value =
  Enum
    ( ["TypeAidesPersonnelleLogement"],
      match x with
      | AidePersonnaliseeLogement x -> "AidePersonnaliséeLogement", embed_unit x
      | AllocationLogementFamiliale x ->
        "AllocationLogementFamiliale", embed_unit x
      | AllocationLogementSociale x -> "AllocationLogementSociale", embed_unit x
    )

module SituationFamiliale = struct
  type t =
    | Celibataire of unit
    | Maries of date
    | Pacses of unit
    | Concubins of unit
    | CelibataireSepareDeFait of unit
    | ConcubinageDontSepareDeFait of unit
end

let embed_situation_familiale (x : SituationFamiliale.t) : runtime_value =
  Enum
    ( ["SituationFamiliale"],
      match x with
      | Celibataire x -> "Célibataire", embed_unit x
      | Maries x -> "Mariés", embed_date x
      | Pacses x -> "Pacsés", embed_unit x
      | Concubins x -> "Concubins", embed_unit x
      | CelibataireSepareDeFait x -> "CélibataireSéparéDeFait", embed_unit x
      | ConcubinageDontSepareDeFait x ->
        "ConcubinageDontSéparéDeFait", embed_unit x )

module PriseEnCharge = struct
  type t =
    | EffectiveEtPermanente of unit
    | ResidenceAlterneeAllocataireUnique of unit
    | ResidenceAlterneeAllocationsPartagee of unit
end

let embed_prise_en_charge (x : PriseEnCharge.t) : runtime_value =
  Enum
    ( ["PriseEnCharge"],
      match x with
      | EffectiveEtPermanente x -> "EffectiveEtPermanente", embed_unit x
      | ResidenceAlterneeAllocataireUnique x ->
        "RésidenceAlternéeAllocataireUnique", embed_unit x
      | ResidenceAlterneeAllocationsPartagee x ->
        "RésidenceAlternéeAllocationsPartagée", embed_unit x )

module TypeLogementFoyer = struct
  type t =
    | LogementPersonnesAgeesOuHandicapees of unit
    | ResidenceSociale of unit
    | FoyerJeunesTrvailleursOuMigrantsConventionneL353_2Avant1995 of unit
    | Autre of unit
end

let embed_type_logement_foyer (x : TypeLogementFoyer.t) : runtime_value =
  Enum
    ( ["TypeLogementFoyer"],
      match x with
      | LogementPersonnesAgeesOuHandicapees x ->
        "LogementPersonnesÂgéesOuHandicapées", embed_unit x
      | ResidenceSociale x -> "RésidenceSociale", embed_unit x
      | FoyerJeunesTrvailleursOuMigrantsConventionneL353_2Avant1995 x ->
        ( "FoyerJeunesTrvailleursOuMigrantsConventionnéL353_2Avant1995",
          embed_unit x )
      | Autre x -> "Autre", embed_unit x )

module CategorieEquivalenceLoyerAllocationLogementFoyer = struct
  type t =
    | EtudiantLogeEnChambre of unit
    | EtudiantLogeEnChambreRehabilitee of unit
    | PersonnesAgeesSelon3DeD842_16 of unit
    | AutresPersonnes of unit
end

let embed_categorie_equivalence_loyer_allocation_logement_foyer
    (x : CategorieEquivalenceLoyerAllocationLogementFoyer.t) : runtime_value =
  Enum
    ( ["CatégorieÉquivalenceLoyerAllocationLogementFoyer"],
      match x with
      | EtudiantLogeEnChambre x -> "ÉtudiantLogéEnChambre", embed_unit x
      | EtudiantLogeEnChambreRehabilitee x ->
        "ÉtudiantLogéEnChambreRéhabilitée", embed_unit x
      | PersonnesAgeesSelon3DeD842_16 x ->
        "PersonnesÂgéesSelon3DeD842_16", embed_unit x
      | AutresPersonnes x -> "AutresPersonnes", embed_unit x )

module SituationFamilialeCalculAPL = struct
  type t = PersonneSeule of unit | Couple of unit
end

let embed_situation_familiale_calcul_a_p_l (x : SituationFamilialeCalculAPL.t) :
    runtime_value =
  Enum
    ( ["SituationFamilialeCalculAPL"],
      match x with
      | PersonneSeule x -> "PersonneSeule", embed_unit x
      | Couple x -> "Couple", embed_unit x )

module Collectivite = struct
  type t =
    | Guadeloupe of unit
    | Guyane of unit
    | Martinique of unit
    | LaReunion of unit
    | SaintBarthelemy of unit
    | SaintMartin of unit
    | Metropole of unit
    | SaintPierreEtMiquelon of unit
    | Mayotte of unit
end

let embed_collectivite (x : Collectivite.t) : runtime_value =
  Enum
    ( ["Collectivité"],
      match x with
      | Guadeloupe x -> "Guadeloupe", embed_unit x
      | Guyane x -> "Guyane", embed_unit x
      | Martinique x -> "Martinique", embed_unit x
      | LaReunion x -> "LaRéunion", embed_unit x
      | SaintBarthelemy x -> "SaintBarthélemy", embed_unit x
      | SaintMartin x -> "SaintMartin", embed_unit x
      | Metropole x -> "Métropole", embed_unit x
      | SaintPierreEtMiquelon x -> "SaintPierreEtMiquelon", embed_unit x
      | Mayotte x -> "Mayotte", embed_unit x )

module PriseEnChargeEnfant = struct
  type t =
    | GardeAlterneePartageAllocations of unit
    | GardeAlterneeAllocataireUnique of unit
    | EffectiveEtPermanente of unit
    | ServicesSociauxAllocationVerseeALaFamille of unit
    | ServicesSociauxAllocationVerseeAuxServicesSociaux of unit
end

let embed_prise_en_charge_enfant (x : PriseEnChargeEnfant.t) : runtime_value =
  Enum
    ( ["PriseEnChargeEnfant"],
      match x with
      | GardeAlterneePartageAllocations x ->
        "GardeAlternéePartageAllocations", embed_unit x
      | GardeAlterneeAllocataireUnique x ->
        "GardeAlternéeAllocataireUnique", embed_unit x
      | EffectiveEtPermanente x -> "EffectiveEtPermanente", embed_unit x
      | ServicesSociauxAllocationVerseeALaFamille x ->
        "ServicesSociauxAllocationVerséeÀLaFamille", embed_unit x
      | ServicesSociauxAllocationVerseeAuxServicesSociaux x ->
        "ServicesSociauxAllocationVerséeAuxServicesSociaux", embed_unit x )

module SituationObligationScolaire = struct
  type t = Avant of unit | Pendant of unit | Apres of unit
end

let embed_situation_obligation_scolaire (x : SituationObligationScolaire.t) :
    runtime_value =
  Enum
    ( ["SituationObligationScolaire"],
      match x with
      | Avant x -> "Avant", embed_unit x
      | Pendant x -> "Pendant", embed_unit x
      | Apres x -> "Après", embed_unit x )

module ElementPrestationsFamiliales = struct
  type t =
    | PrestationAccueilJeuneEnfant of unit
    | AllocationsFamiliales of unit
    | ComplementFamilial of unit
    | AllocationLogement of unit
    | AllocationEducationEnfantHandicape of unit
    | AllocationSoutienFamilial of unit
    | AllocationRentreeScolaire of unit
    | AllocationJournalierePresenceParentale of unit
end

let embed_element_prestations_familiales (x : ElementPrestationsFamiliales.t) :
    runtime_value =
  Enum
    ( ["ÉlémentPrestationsFamiliales"],
      match x with
      | PrestationAccueilJeuneEnfant x ->
        "PrestationAccueilJeuneEnfant", embed_unit x
      | AllocationsFamiliales x -> "AllocationsFamiliales", embed_unit x
      | ComplementFamilial x -> "ComplémentFamilial", embed_unit x
      | AllocationLogement x -> "AllocationLogement", embed_unit x
      | AllocationEducationEnfantHandicape x ->
        "AllocationÉducationEnfantHandicapé", embed_unit x
      | AllocationSoutienFamilial x -> "AllocationSoutienFamilial", embed_unit x
      | AllocationRentreeScolaire x -> "AllocationRentréeScolaire", embed_unit x
      | AllocationJournalierePresenceParentale x ->
        "AllocationJournalièrePresenceParentale", embed_unit x )

module PersonneSousLocation = struct
  type t = {
    age_personne_sous_location : integer;
    conforme_article_l442_1 : bool;
  }
end

let embed_personne_sous_location (x : PersonneSousLocation.t) : runtime_value =
  Struct
    ( ["PersonneSousLocation"],
      [
        ( "age_personne_sous_location",
          embed_integer x.PersonneSousLocation.age_personne_sous_location );
        ( "conforme_article_l442_1",
          embed_bool x.PersonneSousLocation.conforme_article_l442_1 );
      ] )

module Patrimoine = struct
  type t = {
    produisant_revenu_periode_r822_3_3_r822_4 : money;
    ne_produisant_pas_revenu_periode_r822_3_3_r822_4 : money;
  }
end

let embed_patrimoine (x : Patrimoine.t) : runtime_value =
  Struct
    ( ["Patrimoine"],
      [
        ( "produisant_revenu_période_r822_3_3_r822_4",
          embed_money x.Patrimoine.produisant_revenu_periode_r822_3_3_r822_4 );
        ( "ne_produisant_pas_revenu_période_r822_3_3_r822_4",
          embed_money
            x.Patrimoine.ne_produisant_pas_revenu_periode_r822_3_3_r822_4 );
      ] )

module PersonneVivantHabituellementAuFoyer = struct
  type t = {
    duree_residence_durant_periode_r_822_3_1_superieure_a_6_mois : bool;
    ressources : money;
  }
end

let embed_personne_vivant_habituellement_au_foyer
    (x : PersonneVivantHabituellementAuFoyer.t) : runtime_value =
  Struct
    ( ["PersonneVivantHabituellementAuFoyer"],
      [
        ( "durée_résidence_durant_période_r_822_3_1_supérieure_à_6_mois",
          embed_bool
            x
              .PersonneVivantHabituellementAuFoyer
               .duree_residence_durant_periode_r_822_3_1_superieure_a_6_mois );
        ( "ressources",
          embed_money x.PersonneVivantHabituellementAuFoyer.ressources );
      ] )

module InfosChangementLogementD8424 = struct
  type t = {
    ancien_loyer_principal : money;
    ancienne_allocation_logement : money;
  }
end

let embed_infos_changement_logement_d842_4 (x : InfosChangementLogementD8424.t)
    : runtime_value =
  Struct
    ( ["InfosChangementLogementD842_4"],
      [
        ( "ancien_loyer_principal",
          embed_money x.InfosChangementLogementD8424.ancien_loyer_principal );
        ( "ancienne_allocation_logement",
          embed_money
            x.InfosChangementLogementD8424.ancienne_allocation_logement );
      ] )

module Bailleur = struct
  type t = {
    type_bailleur : TypeBailleur.t;
    respecte_convention_titre_V : bool;
    respecte_convention_titre_II : bool;
    construit_ameliore_conditions_l831_1_4 : bool;
    acquisition_aides_etat_pret_titre_II_ou_livre_III : bool;
  }
end

let embed_bailleur (x : Bailleur.t) : runtime_value =
  Struct
    ( ["Bailleur"],
      [
        "type_bailleur", embed_type_bailleur x.Bailleur.type_bailleur;
        ( "respecte_convention_titre_V",
          embed_bool x.Bailleur.respecte_convention_titre_V );
        ( "respecte_convention_titre_II",
          embed_bool x.Bailleur.respecte_convention_titre_II );
        ( "construit_amélioré_conditions_l831_1_4",
          embed_bool x.Bailleur.construit_ameliore_conditions_l831_1_4 );
        ( "acquisition_aides_état_prêt_titre_II_ou_livre_III",
          embed_bool
            x.Bailleur.acquisition_aides_etat_pret_titre_II_ou_livre_III );
      ] )

module Pret = struct
  type t = {
    type_pret : TypePret.t;
    date_signature : date;
    titulaire_pret : TitulairePret.t;
  }
end

let embed_pret (x : Pret.t) : runtime_value =
  Struct
    ( ["Prêt"],
      [
        "type_prêt", embed_type_pret x.Pret.type_pret;
        "date_signature", embed_date x.Pret.date_signature;
        "titulaire_prêt", embed_titulaire_pret x.Pret.titulaire_pret;
      ] )

module NeufOuAncien = struct
  type t = Neuf of unit | Ancien of AmelioreParOccupant.t
end

let embed_neuf_ou_ancien (x : NeufOuAncien.t) : runtime_value =
  Enum
    ( ["NeufOuAncien"],
      match x with
      | Neuf x -> "Neuf", embed_unit x
      | Ancien x -> "Ancien", embed_ameliore_par_occupant x )

module TrancheRevenu = struct
  type t = { haut : LimiteTranche.t; bas : money; taux : decimal }
end

let embed_tranche_revenu (x : TrancheRevenu.t) : runtime_value =
  Struct
    ( ["TrancheRevenu"],
      [
        "haut", embed_limite_tranche x.TrancheRevenu.haut;
        "bas", embed_money x.TrancheRevenu.bas;
        "taux", embed_decimal x.TrancheRevenu.taux;
      ] )

module TrancheRevenuDecimal = struct
  type t = { haut : LimiteTrancheDecimal.t; bas : decimal; taux : decimal }
end

let embed_tranche_revenu_decimal (x : TrancheRevenuDecimal.t) : runtime_value =
  Struct
    ( ["TrancheRevenuDécimal"],
      [
        "haut", embed_limite_tranche_decimal x.TrancheRevenuDecimal.haut;
        "bas", embed_decimal x.TrancheRevenuDecimal.bas;
        "taux", embed_decimal x.TrancheRevenuDecimal.taux;
      ] )

module AutrePersonneACharge = struct
  type t = {
    date_naissance : date;
    ressources : money;
    ascendant_descendant_collateral_deuxieme_troisieme_degre : bool;
    parente : Parente.t;
    incapacite_80_pourcent_ou_restriction_emploi : bool;
    beneficiaire_l161_19_l351_8_l643_3_secu : bool;
    titulaire_allocation_personne_agee : bool;
  }
end

let embed_autre_personne_a_charge (x : AutrePersonneACharge.t) : runtime_value =
  Struct
    ( ["AutrePersonneÀCharge"],
      [
        "date_naissance", embed_date x.AutrePersonneACharge.date_naissance;
        "ressources", embed_money x.AutrePersonneACharge.ressources;
        ( "ascendant_descendant_collatéral_deuxième_troisième_degré",
          embed_bool
            x
              .AutrePersonneACharge
               .ascendant_descendant_collateral_deuxieme_troisieme_degre );
        "parenté", embed_parente x.AutrePersonneACharge.parente;
        ( "incapacité_80_pourcent_ou_restriction_emploi",
          embed_bool
            x.AutrePersonneACharge.incapacite_80_pourcent_ou_restriction_emploi
        );
        ( "bénéficiaire_l161_19_l351_8_l643_3_sécu",
          embed_bool
            x.AutrePersonneACharge.beneficiaire_l161_19_l351_8_l643_3_secu );
        ( "titulaire_allocation_personne_âgée",
          embed_bool x.AutrePersonneACharge.titulaire_allocation_personne_agee );
      ] )

module DateNaissanceTroisiemeOuDernierPlusEnfant = struct
  type t =
    | MoinsDeTroisEnfants of unit
    | PlusDeTroisEnfants of DateDeNaissanceOuMoisDeGrossesse.t
end

let embed_date_naissance_troisieme_ou_dernier_plus_enfant
    (x : DateNaissanceTroisiemeOuDernierPlusEnfant.t) : runtime_value =
  Enum
    ( ["DateNaissanceTroisièmeOuDernierPlusEnfant"],
      match x with
      | MoinsDeTroisEnfants x -> "MoinsDeTroisEnfants", embed_unit x
      | PlusDeTroisEnfants x ->
        "PlusDeTroisEnfants", embed_date_de_naissance_ou_mois_de_grossesse x )

module InformationsCalculAPLLogementFoyer = struct
  type t = {
    redevance : money;
    categorie_equivalence_loyer_d842_16 :
      CategorieEquivalenceLoyerAllocationLogementFoyer.t;
  }
end

let embed_informations_calcul_a_p_l_logement_foyer
    (x : InformationsCalculAPLLogementFoyer.t) : runtime_value =
  Struct
    ( ["InformationsCalculAPLLogementFoyer"],
      [
        "redevance", embed_money x.InformationsCalculAPLLogementFoyer.redevance;
        ( "catégorie_équivalence_loyer_d842_16",
          embed_categorie_equivalence_loyer_allocation_logement_foyer
            x
              .InformationsCalculAPLLogementFoyer
               .categorie_equivalence_loyer_d842_16 );
      ] )

module EnfantPrestationsFamiliales = struct
  type t = {
    identifiant : integer;
    obligation_scolaire : SituationObligationScolaire.t;
    remuneration_mensuelle : money;
    date_de_naissance : date;
    age : integer;
    prise_en_charge : PriseEnChargeEnfant.t;
    a_deja_ouvert_droit_aux_allocations_familiales : bool;
    beneficie_titre_personnel_aide_personnelle_logement : bool;
  }
end

let embed_enfant_prestations_familiales (x : EnfantPrestationsFamiliales.t) :
    runtime_value =
  Struct
    ( ["EnfantPrestationsFamiliales"],
      [
        "identifiant", embed_integer x.EnfantPrestationsFamiliales.identifiant;
        ( "obligation_scolaire",
          embed_situation_obligation_scolaire
            x.EnfantPrestationsFamiliales.obligation_scolaire );
        ( "rémuneration_mensuelle",
          embed_money x.EnfantPrestationsFamiliales.remuneration_mensuelle );
        ( "date_de_naissance",
          embed_date x.EnfantPrestationsFamiliales.date_de_naissance );
        "âge", embed_integer x.EnfantPrestationsFamiliales.age;
        ( "prise_en_charge",
          embed_prise_en_charge_enfant
            x.EnfantPrestationsFamiliales.prise_en_charge );
        ( "a_déjà_ouvert_droit_aux_allocations_familiales",
          embed_bool
            x
              .EnfantPrestationsFamiliales
               .a_deja_ouvert_droit_aux_allocations_familiales );
        ( "bénéficie_titre_personnel_aide_personnelle_logement",
          embed_bool
            x
              .EnfantPrestationsFamiliales
               .beneficie_titre_personnel_aide_personnelle_logement );
      ] )

module EnfantACharge = struct
  type t = {
    identifiant : integer;
    beneficie_titre_personnel_aide_personnelle_logement : bool;
    a_deja_ouvert_droit_aux_allocations_familiales : bool;
    date_de_naissance : date;
    remuneration_mensuelle : money;
    obligation_scolaire : SituationObligationScolaire.t;
    prise_en_charge : PriseEnCharge.t;
    age : integer;
    situation_garde_alternee : SituationGardeAlternee.t;
  }
end

let embed_enfant_a_charge (x : EnfantACharge.t) : runtime_value =
  Struct
    ( ["EnfantÀCharge"],
      [
        "identifiant", embed_integer x.EnfantACharge.identifiant;
        ( "bénéficie_titre_personnel_aide_personnelle_logement",
          embed_bool
            x.EnfantACharge.beneficie_titre_personnel_aide_personnelle_logement
        );
        ( "a_déjà_ouvert_droit_aux_allocations_familiales",
          embed_bool
            x.EnfantACharge.a_deja_ouvert_droit_aux_allocations_familiales );
        "date_de_naissance", embed_date x.EnfantACharge.date_de_naissance;
        ( "rémuneration_mensuelle",
          embed_money x.EnfantACharge.remuneration_mensuelle );
        ( "obligation_scolaire",
          embed_situation_obligation_scolaire
            x.EnfantACharge.obligation_scolaire );
        "prise_en_charge", embed_prise_en_charge x.EnfantACharge.prise_en_charge;
        "âge", embed_integer x.EnfantACharge.age;
        ( "situation_garde_alternée",
          embed_situation_garde_alternee
            x.EnfantACharge.situation_garde_alternee );
      ] )

module LoueOuSousLoueADesTiers = struct
  type t = Non of unit | Oui of PersonneSousLocation.t
end

let embed_loue_ou_sous_loue_a_des_tiers (x : LoueOuSousLoueADesTiers.t) :
    runtime_value =
  Enum
    ( ["LouéOuSousLouéÀDesTiers"],
      match x with
      | Non x -> "Non", embed_unit x
      | Oui x -> "Oui", embed_personne_sous_location x )

module Demandeur = struct
  type t = {
    satisfait_conditions_l512_2_code_securite_sociale : bool;
    age_demandeur : integer;
    date_naissance : date;
    contrat_de_travail : TypeContratTravail.t;
    nationalite : Nationalite.t;
    patrimoine : Patrimoine.t;
    personne_hebergee_centre_soin_l_L162_22_3_securite_sociale : bool;
  }
end

let embed_demandeur (x : Demandeur.t) : runtime_value =
  Struct
    ( ["Demandeur"],
      [
        ( "satisfait_conditions_l512_2_code_sécurité_sociale",
          embed_bool
            x.Demandeur.satisfait_conditions_l512_2_code_securite_sociale );
        "age_demandeur", embed_integer x.Demandeur.age_demandeur;
        "date_naissance", embed_date x.Demandeur.date_naissance;
        ( "contrat_de_travail",
          embed_type_contrat_travail x.Demandeur.contrat_de_travail );
        "nationalité", embed_nationalite x.Demandeur.nationalite;
        "patrimoine", embed_patrimoine x.Demandeur.patrimoine;
        ( "personne_hébergée_centre_soin_l_L162_22_3_sécurité_sociale",
          embed_bool
            x
              .Demandeur
               .personne_hebergee_centre_soin_l_L162_22_3_securite_sociale );
      ] )

module ChangementLogementD8424 = struct
  type t =
    | Changement of InfosChangementLogementD8424.t
    | PasDeChangement of unit
end

let embed_changement_logement_d842_4 (x : ChangementLogementD8424.t) :
    runtime_value =
  Enum
    ( ["ChangementLogementD842_4"],
      match x with
      | Changement x -> "Changement", embed_infos_changement_logement_d842_4 x
      | PasDeChangement x -> "PasDeChangement", embed_unit x )

module Location = struct
  type t = { bailleur : Bailleur.t }
end

let embed_location (x : Location.t) : runtime_value =
  Struct (["Location"], ["bailleur", embed_bailleur x.Location.bailleur])

module Proprietaire = struct
  type t = { pret : Pret.t }
end

let embed_proprietaire (x : Proprietaire.t) : runtime_value =
  Struct (["Propriétaire"], ["prêt", embed_pret x.Proprietaire.pret])

module InformationsCalculAPLAccessionPropriete = struct
  type t = {
    mensualite_principale : money;
    charges_mensuelles_pret : money;
    date_signature_pret : date;
    date_entree_logement : date;
    type_travaux_logement_d832_15 : TypeTravauxLogementD83215.t;
    type_travaux_logement_r842_5 : TypeTravauxLogementR8425.t;
    local_habite_premiere_fois_beneficiaire : bool;
    copropriete : bool;
    situation_r822_11_13_17 : bool;
    type_pret : TypePret.t;
    anciennete_logement : NeufOuAncien.t;
  }
end

let embed_informations_calcul_a_p_l_accession_propriete
    (x : InformationsCalculAPLAccessionPropriete.t) : runtime_value =
  Struct
    ( ["InformationsCalculAPLAccessionPropriété"],
      [
        ( "mensualité_principale",
          embed_money
            x.InformationsCalculAPLAccessionPropriete.mensualite_principale );
        ( "charges_mensuelles_prêt",
          embed_money
            x.InformationsCalculAPLAccessionPropriete.charges_mensuelles_pret );
        ( "date_signature_prêt",
          embed_date
            x.InformationsCalculAPLAccessionPropriete.date_signature_pret );
        ( "date_entrée_logement",
          embed_date
            x.InformationsCalculAPLAccessionPropriete.date_entree_logement );
        ( "type_travaux_logement_d832_15",
          embed_type_travaux_logement_d832_15
            x
              .InformationsCalculAPLAccessionPropriete
               .type_travaux_logement_d832_15 );
        ( "type_travaux_logement_r842_5",
          embed_type_travaux_logement_r842_5
            x
              .InformationsCalculAPLAccessionPropriete
               .type_travaux_logement_r842_5 );
        ( "local_habité_première_fois_bénéficiaire",
          embed_bool
            x
              .InformationsCalculAPLAccessionPropriete
               .local_habite_premiere_fois_beneficiaire );
        ( "copropriété",
          embed_bool x.InformationsCalculAPLAccessionPropriete.copropriete );
        ( "situation_r822_11_13_17",
          embed_bool
            x.InformationsCalculAPLAccessionPropriete.situation_r822_11_13_17 );
        ( "type_prêt",
          embed_type_pret x.InformationsCalculAPLAccessionPropriete.type_pret );
        ( "ancienneté_logement",
          embed_neuf_ou_ancien
            x.InformationsCalculAPLAccessionPropriete.anciennete_logement );
      ] )

module PersonneACharge = struct
  type t =
    | EnfantACharge of EnfantACharge.t
    | AutrePersonneACharge of AutrePersonneACharge.t
end

let embed_personne_a_charge (x : PersonneACharge.t) : runtime_value =
  Enum
    ( ["PersonneÀCharge"],
      match x with
      | EnfantACharge x -> "EnfantÀCharge", embed_enfant_a_charge x
      | AutrePersonneACharge x ->
        "AutrePersonneÀCharge", embed_autre_personne_a_charge x )

module InformationsCalculAPLLocatif = struct
  type t = {
    loyer_principal : money;
    beneficiaire_aide_adulte_ou_enfant_handicapes : bool;
    logement_est_chambre : bool;
    colocation : bool;
    agees_ou_handicap_adultes_hebergees_onereux_particuliers : bool;
    reduction_loyer_solidarite : money;
    logement_meuble_d842_2 : bool;
    changement_logement_d842_4 : ChangementLogementD8424.t;
  }
end

let embed_informations_calcul_a_p_l_locatif (x : InformationsCalculAPLLocatif.t)
    : runtime_value =
  Struct
    ( ["InformationsCalculAPLLocatif"],
      [
        ( "loyer_principal",
          embed_money x.InformationsCalculAPLLocatif.loyer_principal );
        ( "bénéficiaire_aide_adulte_ou_enfant_handicapés",
          embed_bool
            x
              .InformationsCalculAPLLocatif
               .beneficiaire_aide_adulte_ou_enfant_handicapes );
        ( "logement_est_chambre",
          embed_bool x.InformationsCalculAPLLocatif.logement_est_chambre );
        "colocation", embed_bool x.InformationsCalculAPLLocatif.colocation;
        ( "âgées_ou_handicap_adultes_hébergées_onéreux_particuliers",
          embed_bool
            x
              .InformationsCalculAPLLocatif
               .agees_ou_handicap_adultes_hebergees_onereux_particuliers );
        ( "réduction_loyer_solidarité",
          embed_money x.InformationsCalculAPLLocatif.reduction_loyer_solidarite
        );
        ( "logement_meublé_d842_2",
          embed_bool x.InformationsCalculAPLLocatif.logement_meuble_d842_2 );
        ( "changement_logement_d842_4",
          embed_changement_logement_d842_4
            x.InformationsCalculAPLLocatif.changement_logement_d842_4 );
      ] )

module LogementFoyer = struct
  type t = {
    type_user : TypeLogementFoyer.t;
    date_conventionnement : date;
    location : Location.t;
    remplit_conditions_r832_21 : bool;
    construit_application_loi_1957_12_III : bool;
  }
end

let embed_logement_foyer (x : LogementFoyer.t) : runtime_value =
  Struct
    ( ["LogementFoyer"],
      [
        "type", embed_type_logement_foyer x.LogementFoyer.type_user;
        ( "date_conventionnement",
          embed_date x.LogementFoyer.date_conventionnement );
        "location", embed_location x.LogementFoyer.location;
        ( "remplit_conditions_r832_21",
          embed_bool x.LogementFoyer.remplit_conditions_r832_21 );
        ( "construit_application_loi_1957_12_III",
          embed_bool x.LogementFoyer.construit_application_loi_1957_12_III );
      ] )

module InformationsCalculAPL = struct
  type t =
    | InfosLocatif of InformationsCalculAPLLocatif.t
    | InfosLogementFoyer of InformationsCalculAPLLogementFoyer.t
    | InfosAccessionPropriete of InformationsCalculAPLAccessionPropriete.t
end

let embed_informations_calcul_a_p_l (x : InformationsCalculAPL.t) :
    runtime_value =
  Enum
    ( ["InformationsCalculAPL"],
      match x with
      | InfosLocatif x ->
        "InfosLocatif", embed_informations_calcul_a_p_l_locatif x
      | InfosLogementFoyer x ->
        "InfosLogementFoyer", embed_informations_calcul_a_p_l_logement_foyer x
      | InfosAccessionPropriete x ->
        ( "InfosAccessionPropriété",
          embed_informations_calcul_a_p_l_accession_propriete x ) )

module ModeOccupation = struct
  type t =
    | Locataire of Location.t
    | ResidentLogementFoyer of LogementFoyer.t
    | AccessionProprieteLocalUsageExclusifHabitation of Proprietaire.t
    | SousLocataire of Location.t
    | LocationAccession of Proprietaire.t
end

let embed_mode_occupation (x : ModeOccupation.t) : runtime_value =
  Enum
    ( ["ModeOccupation"],
      match x with
      | Locataire x -> "Locataire", embed_location x
      | ResidentLogementFoyer x ->
        "RésidentLogementFoyer", embed_logement_foyer x
      | AccessionProprieteLocalUsageExclusifHabitation x ->
        "AccessionPropriétéLocalUsageExclusifHabitation", embed_proprietaire x
      | SousLocataire x -> "SousLocataire", embed_location x
      | LocationAccession x -> "LocationAccession", embed_proprietaire x )

module Logement = struct
  type t = {
    residence_principale : bool;
    est_ehpad_ou_maison_autonomie_l313_12_asf : bool;
    mode_occupation : ModeOccupation.t;
    proprietaire : ParentOuAutre.t;
    loue_ou_sous_loue_a_des_tiers : LoueOuSousLoueADesTiers.t;
    usufruit : ParentOuAutre.t;
    logement_decent_l89_462 : bool;
    surface_m_carres : integer;
    est_ancien_l831_2 : bool;
    situe_commune_desequilibre_l831_2 : bool;
    zone : ZoneDHabitation.t;
  }
end

let embed_logement (x : Logement.t) : runtime_value =
  Struct
    ( ["Logement"],
      [
        "résidence_principale", embed_bool x.Logement.residence_principale;
        ( "est_ehpad_ou_maison_autonomie_l313_12_asf",
          embed_bool x.Logement.est_ehpad_ou_maison_autonomie_l313_12_asf );
        "mode_occupation", embed_mode_occupation x.Logement.mode_occupation;
        "propriétaire", embed_parent_ou_autre x.Logement.proprietaire;
        ( "loué_ou_sous_loué_à_des_tiers",
          embed_loue_ou_sous_loue_a_des_tiers
            x.Logement.loue_ou_sous_loue_a_des_tiers );
        "usufruit", embed_parent_ou_autre x.Logement.usufruit;
        "logement_decent_l89_462", embed_bool x.Logement.logement_decent_l89_462;
        "surface_m_carrés", embed_integer x.Logement.surface_m_carres;
        "est_ancien_l831_2", embed_bool x.Logement.est_ancien_l831_2;
        ( "situé_commune_déséquilibre_l831_2",
          embed_bool x.Logement.situe_commune_desequilibre_l831_2 );
        "zone", embed_zone_d_habitation x.Logement.zone;
      ] )

module Menage = struct
  type t = {
    prestations_recues : PrestationRecue.t array;
    logement : Logement.t;
    personnes_a_charge : PersonneACharge.t array;
    nombre_autres_occupants_logement : integer;
    situation_familiale : SituationFamiliale.t;
    condition_rattache_foyer_fiscal_parent_ifi : bool;
    nombre_enfants_a_naitre_apres_troisieme_mois_grossesse : integer;
    enfant_a_naitre_apres_quatrieme_mois_grossesse : bool;
    date_naissance_troisieme_enfant_ou_dernier_si_plus :
      DateNaissanceTroisiemeOuDernierPlusEnfant.t;
  }
end

let embed_menage (x : Menage.t) : runtime_value =
  Struct
    ( ["Ménage"],
      [
        ( "prestations_reçues",
          embed_array embed_prestation_recue x.Menage.prestations_recues );
        "logement", embed_logement x.Menage.logement;
        ( "personnes_à_charge",
          embed_array embed_personne_a_charge x.Menage.personnes_a_charge );
        ( "nombre_autres_occupants_logement",
          embed_integer x.Menage.nombre_autres_occupants_logement );
        ( "situation_familiale",
          embed_situation_familiale x.Menage.situation_familiale );
        ( "condition_rattaché_foyer_fiscal_parent_ifi",
          embed_bool x.Menage.condition_rattache_foyer_fiscal_parent_ifi );
        ( "nombre_enfants_à_naître_après_troisième_mois_grossesse",
          embed_integer
            x.Menage.nombre_enfants_a_naitre_apres_troisieme_mois_grossesse );
        ( "enfant_à_naître_après_quatrième_mois_grossesse",
          embed_bool x.Menage.enfant_a_naitre_apres_quatrieme_mois_grossesse );
        ( "date_naissance_troisième_enfant_ou_dernier_si_plus",
          embed_date_naissance_troisieme_ou_dernier_plus_enfant
            x.Menage.date_naissance_troisieme_enfant_ou_dernier_si_plus );
      ] )

module EligibiliteAidesPersonnelleLogementOut = struct
  type t = {
    date_courante_out : date;
    eligibilite_out : bool;
    nombre_personnes_a_charge_prises_en_compte_out : integer;
    coefficents_enfants_garde_alternee_pris_en_compte_out : decimal array;
    condition_2_r823_4_out : PersonneACharge.t -> bool;
  }
end

let embed_eligibilite_aides_personnelle_logement_out
    (x : EligibiliteAidesPersonnelleLogementOut.t) : runtime_value =
  Struct
    ( ["ÉligibilitéAidesPersonnelleLogement_out"],
      [
        ( "date_courante_out",
          embed_date x.EligibiliteAidesPersonnelleLogementOut.date_courante_out
        );
        ( "éligibilité_out",
          embed_bool x.EligibiliteAidesPersonnelleLogementOut.eligibilite_out );
        ( "nombre_personnes_à_charge_prises_en_compte_out",
          embed_integer
            x
              .EligibiliteAidesPersonnelleLogementOut
               .nombre_personnes_a_charge_prises_en_compte_out );
        ( "coefficents_enfants_garde_alternée_pris_en_compte_out",
          embed_array embed_decimal
            x
              .EligibiliteAidesPersonnelleLogementOut
               .coefficents_enfants_garde_alternee_pris_en_compte_out );
        ( "condition_2_r823_4_out",
          unembeddable
            x.EligibiliteAidesPersonnelleLogementOut.condition_2_r823_4_out );
      ] )

module EligibiliteAidesPersonnelleLogementIn = struct
  type t = {
    menage_in : Menage.t;
    demandeur_in : Demandeur.t;
    date_courante_in : date;
    condition_logement_residence_principale_in : unit -> bool;
    condition_logement_surface_in : unit -> bool;
  }
end

let embed_eligibilite_aides_personnelle_logement_in
    (x : EligibiliteAidesPersonnelleLogementIn.t) : runtime_value =
  Struct
    ( ["ÉligibilitéAidesPersonnelleLogement_in"],
      [
        ( "ménage_in",
          embed_menage x.EligibiliteAidesPersonnelleLogementIn.menage_in );
        ( "demandeur_in",
          embed_demandeur x.EligibiliteAidesPersonnelleLogementIn.demandeur_in );
        ( "date_courante_in",
          embed_date x.EligibiliteAidesPersonnelleLogementIn.date_courante_in );
        ( "condition_logement_résidence_principale_in",
          unembeddable
            x
              .EligibiliteAidesPersonnelleLogementIn
               .condition_logement_residence_principale_in );
        ( "condition_logement_surface_in",
          unembeddable
            x
              .EligibiliteAidesPersonnelleLogementIn
               .condition_logement_surface_in );
      ] )

module EligibiliteAidePersonnaliseeLogementOut = struct
  type t = {
    date_courante_out : date;
    eligibilite_out : bool;
    nombre_personnes_a_charge_prises_en_compte_out : integer;
    coefficents_enfants_garde_alternee_pris_en_compte_out : decimal array;
  }
end

let embed_eligibilite_aide_personnalisee_logement_out
    (x : EligibiliteAidePersonnaliseeLogementOut.t) : runtime_value =
  Struct
    ( ["ÉligibilitéAidePersonnaliséeLogement_out"],
      [
        ( "date_courante_out",
          embed_date x.EligibiliteAidePersonnaliseeLogementOut.date_courante_out
        );
        ( "éligibilité_out",
          embed_bool x.EligibiliteAidePersonnaliseeLogementOut.eligibilite_out );
        ( "nombre_personnes_à_charge_prises_en_compte_out",
          embed_integer
            x
              .EligibiliteAidePersonnaliseeLogementOut
               .nombre_personnes_a_charge_prises_en_compte_out );
        ( "coefficents_enfants_garde_alternée_pris_en_compte_out",
          embed_array embed_decimal
            x
              .EligibiliteAidePersonnaliseeLogementOut
               .coefficents_enfants_garde_alternee_pris_en_compte_out );
      ] )

module EligibiliteAidePersonnaliseeLogementIn = struct
  type t = {
    menage_in : Menage.t;
    demandeur_in : Demandeur.t;
    date_courante_in : date;
  }
end

let embed_eligibilite_aide_personnalisee_logement_in
    (x : EligibiliteAidePersonnaliseeLogementIn.t) : runtime_value =
  Struct
    ( ["ÉligibilitéAidePersonnaliséeLogement_in"],
      [
        ( "ménage_in",
          embed_menage x.EligibiliteAidePersonnaliseeLogementIn.menage_in );
        ( "demandeur_in",
          embed_demandeur x.EligibiliteAidePersonnaliseeLogementIn.demandeur_in
        );
        ( "date_courante_in",
          embed_date x.EligibiliteAidePersonnaliseeLogementIn.date_courante_in );
      ] )

module EligibiliteAllocationLogementOut = struct
  type t = {
    eligibilite_avec_condition_logement_out : EligibiliteAllocationLogement.t;
    nombre_personnes_a_charge_prises_en_compte_out : integer;
    coefficents_enfants_garde_alternee_pris_en_compte_out : decimal array;
  }
end

let embed_eligibilite_allocation_logement_out
    (x : EligibiliteAllocationLogementOut.t) : runtime_value =
  Struct
    ( ["ÉligibilitéAllocationLogement_out"],
      [
        ( "éligibilité_avec_condition_logement_out",
          embed_eligibilite_allocation_logement
            x
              .EligibiliteAllocationLogementOut
               .eligibilite_avec_condition_logement_out );
        ( "nombre_personnes_à_charge_prises_en_compte_out",
          embed_integer
            x
              .EligibiliteAllocationLogementOut
               .nombre_personnes_a_charge_prises_en_compte_out );
        ( "coefficents_enfants_garde_alternée_pris_en_compte_out",
          embed_array embed_decimal
            x
              .EligibiliteAllocationLogementOut
               .coefficents_enfants_garde_alternee_pris_en_compte_out );
      ] )

module EligibiliteAllocationLogementIn = struct
  type t = {
    date_courante_in : date;
    menage_in : Menage.t;
    demandeur_in : Demandeur.t;
    beneficie_aide_personnalisee_logement_in : bool;
    informations_calcul_in : InformationsCalculAPL.t;
  }
end

let embed_eligibilite_allocation_logement_in
    (x : EligibiliteAllocationLogementIn.t) : runtime_value =
  Struct
    ( ["ÉligibilitéAllocationLogement_in"],
      [
        ( "date_courante_in",
          embed_date x.EligibiliteAllocationLogementIn.date_courante_in );
        "ménage_in", embed_menage x.EligibiliteAllocationLogementIn.menage_in;
        ( "demandeur_in",
          embed_demandeur x.EligibiliteAllocationLogementIn.demandeur_in );
        ( "bénéficie_aide_personnalisée_logement_in",
          embed_bool
            x
              .EligibiliteAllocationLogementIn
               .beneficie_aide_personnalisee_logement_in );
        ( "informations_calcul_in",
          embed_informations_calcul_a_p_l
            x.EligibiliteAllocationLogementIn.informations_calcul_in );
      ] )

module EligibilitePrimeDeDemenagementOut = struct
  type t = { montant_prime_demenagement_out : money }
end

let embed_eligibilite_prime_de_demenagement_out
    (x : EligibilitePrimeDeDemenagementOut.t) : runtime_value =
  Struct
    ( ["ÉligibilitéPrimeDeDéménagement_out"],
      [
        ( "montant_prime_déménagement_out",
          embed_money
            x.EligibilitePrimeDeDemenagementOut.montant_prime_demenagement_out );
      ] )

module EligibilitePrimeDeDemenagementIn = struct
  type t = {
    date_emmenagement_in : date;
    menage_in : Menage.t;
    demandeur_in : Demandeur.t;
    date_courante_in : date;
    depenses_justifiees_reellement_engagees_in : money;
  }
end

let embed_eligibilite_prime_de_demenagement_in
    (x : EligibilitePrimeDeDemenagementIn.t) : runtime_value =
  Struct
    ( ["ÉligibilitéPrimeDeDéménagement_in"],
      [
        ( "date_emménagement_in",
          embed_date x.EligibilitePrimeDeDemenagementIn.date_emmenagement_in );
        "ménage_in", embed_menage x.EligibilitePrimeDeDemenagementIn.menage_in;
        ( "demandeur_in",
          embed_demandeur x.EligibilitePrimeDeDemenagementIn.demandeur_in );
        ( "date_courante_in",
          embed_date x.EligibilitePrimeDeDemenagementIn.date_courante_in );
        ( "dépenses_justifiées_réellement_engagées_in",
          embed_money
            x
              .EligibilitePrimeDeDemenagementIn
               .depenses_justifiees_reellement_engagees_in );
      ] )

module RessourcesAidesPersonnelleLogementOut = struct
  type t = { ressources_prises_en_compte_out : money }
end

let embed_ressources_aides_personnelle_logement_out
    (x : RessourcesAidesPersonnelleLogementOut.t) : runtime_value =
  Struct
    ( ["RessourcesAidesPersonnelleLogement_out"],
      [
        ( "ressources_prises_en_compte_out",
          embed_money
            x
              .RessourcesAidesPersonnelleLogementOut
               .ressources_prises_en_compte_out );
      ] )

module RessourcesAidesPersonnelleLogementIn = struct
  type t = {
    ressources_demandeur_in : money;
    ressources_conjoint_in : money;
    personnes_vivant_habituellement_foyer_in :
      PersonneVivantHabituellementAuFoyer.t array;
    demandeur_exerce_activite_remuneree_in : bool;
    conjoint_exerce_activite_remuneree_in : bool;
    personnes_a_charge_in : PersonneACharge.t array;
    situation_familiale_in : SituationFamiliale.t;
    mode_occupation_in : ModeOccupation.t;
    condition_age_bourse_enseignement_superieur_in : bool;
    demandeur_poursuit_des_etudes_in : bool;
    date_demande_ou_reexamen_droit_in : date;
    paiement_logement_distinct_professionnel_in :
      PaiementLogementDistinctProfessionnel.t;
    ressources_menage_arrondies_base_in : money;
  }
end

let embed_ressources_aides_personnelle_logement_in
    (x : RessourcesAidesPersonnelleLogementIn.t) : runtime_value =
  Struct
    ( ["RessourcesAidesPersonnelleLogement_in"],
      [
        ( "ressources_demandeur_in",
          embed_money
            x.RessourcesAidesPersonnelleLogementIn.ressources_demandeur_in );
        ( "ressources_conjoint_in",
          embed_money
            x.RessourcesAidesPersonnelleLogementIn.ressources_conjoint_in );
        ( "personnes_vivant_habituellement_foyer_in",
          embed_array embed_personne_vivant_habituellement_au_foyer
            x
              .RessourcesAidesPersonnelleLogementIn
               .personnes_vivant_habituellement_foyer_in );
        ( "demandeur_exerce_activité_rémunérée_in",
          embed_bool
            x
              .RessourcesAidesPersonnelleLogementIn
               .demandeur_exerce_activite_remuneree_in );
        ( "conjoint_exerce_activité_rémunérée_in",
          embed_bool
            x
              .RessourcesAidesPersonnelleLogementIn
               .conjoint_exerce_activite_remuneree_in );
        ( "personnes_à_charge_in",
          embed_array embed_personne_a_charge
            x.RessourcesAidesPersonnelleLogementIn.personnes_a_charge_in );
        ( "situation_familiale_in",
          embed_situation_familiale
            x.RessourcesAidesPersonnelleLogementIn.situation_familiale_in );
        ( "mode_occupation_in",
          embed_mode_occupation
            x.RessourcesAidesPersonnelleLogementIn.mode_occupation_in );
        ( "condition_âge_bourse_enseignement_supérieur_in",
          embed_bool
            x
              .RessourcesAidesPersonnelleLogementIn
               .condition_age_bourse_enseignement_superieur_in );
        ( "demandeur_poursuit_des_études_in",
          embed_bool
            x
              .RessourcesAidesPersonnelleLogementIn
               .demandeur_poursuit_des_etudes_in );
        ( "date_demande_ou_reexamen_droit_in",
          embed_date
            x
              .RessourcesAidesPersonnelleLogementIn
               .date_demande_ou_reexamen_droit_in );
        ( "paiement_logement_distinct_professionnel_in",
          embed_paiement_logement_distinct_professionnel
            x
              .RessourcesAidesPersonnelleLogementIn
               .paiement_logement_distinct_professionnel_in );
        ( "ressources_ménage_arrondies_base_in",
          embed_money
            x
              .RessourcesAidesPersonnelleLogementIn
               .ressources_menage_arrondies_base_in );
      ] )

module ContributionsSocialesAidesPersonnelleLogementOut = struct
  type t = { montant_out : money -> money }
end

let embed_contributions_sociales_aides_personnelle_logement_out
    (x : ContributionsSocialesAidesPersonnelleLogementOut.t) : runtime_value =
  Struct
    ( ["ContributionsSocialesAidesPersonnelleLogement_out"],
      [
        ( "montant_out",
          unembeddable
            x.ContributionsSocialesAidesPersonnelleLogementOut.montant_out );
      ] )

module ContributionsSocialesAidesPersonnelleLogementIn = struct
  type t = { date_courante_in : date }
end

let embed_contributions_sociales_aides_personnelle_logement_in
    (x : ContributionsSocialesAidesPersonnelleLogementIn.t) : runtime_value =
  Struct
    ( ["ContributionsSocialesAidesPersonnelleLogement_in"],
      [
        ( "date_courante_in",
          embed_date
            x.ContributionsSocialesAidesPersonnelleLogementIn.date_courante_in );
      ] )

module CalculAidePersonnaliseeLogementLocatifOut = struct
  type t = {
    montant_forfaitaire_charges_d823_16_out : money;
    plafond_loyer_d823_16_2_out : money;
    participation_minimale_out : money;
    taux_composition_familiale_out : decimal;
    participation_personnelle_out : money;
    aide_finale_formule_out : money;
    traitement_aide_finale_montant_minimal_out : money -> money;
  }
end

let embed_calcul_aide_personnalisee_logement_locatif_out
    (x : CalculAidePersonnaliseeLogementLocatifOut.t) : runtime_value =
  Struct
    ( ["CalculAidePersonnaliséeLogementLocatif_out"],
      [
        ( "montant_forfaitaire_charges_d823_16_out",
          embed_money
            x
              .CalculAidePersonnaliseeLogementLocatifOut
               .montant_forfaitaire_charges_d823_16_out );
        ( "plafond_loyer_d823_16_2_out",
          embed_money
            x
              .CalculAidePersonnaliseeLogementLocatifOut
               .plafond_loyer_d823_16_2_out );
        ( "participation_minimale_out",
          embed_money
            x
              .CalculAidePersonnaliseeLogementLocatifOut
               .participation_minimale_out );
        ( "taux_composition_familiale_out",
          embed_decimal
            x
              .CalculAidePersonnaliseeLogementLocatifOut
               .taux_composition_familiale_out );
        ( "participation_personnelle_out",
          embed_money
            x
              .CalculAidePersonnaliseeLogementLocatifOut
               .participation_personnelle_out );
        ( "aide_finale_formule_out",
          embed_money
            x.CalculAidePersonnaliseeLogementLocatifOut.aide_finale_formule_out
        );
        ( "traitement_aide_finale_montant_minimal_out",
          unembeddable
            x
              .CalculAidePersonnaliseeLogementLocatifOut
               .traitement_aide_finale_montant_minimal_out );
      ] )

module CalculAidePersonnaliseeLogementLocatifIn = struct
  type t = {
    loyer_principal_in : money;
    ressources_menage_arrondies_in : money;
    beneficiaire_aide_adulte_ou_enfant_handicapes_in : bool;
    date_courante_in : date;
    nombre_personnes_a_charge_in : integer;
    situation_familiale_calcul_apl_in : SituationFamilialeCalculAPL.t;
    zone_in : ZoneDHabitation.t;
    logement_est_chambre_in : bool;
    agees_ou_handicap_adultes_hebergees_onereux_particuliers_in : bool;
    type_aide_in : TypeAidesPersonnelleLogement.t;
    colocation_in : bool;
    reduction_loyer_solidarite_in : money;
  }
end

let embed_calcul_aide_personnalisee_logement_locatif_in
    (x : CalculAidePersonnaliseeLogementLocatifIn.t) : runtime_value =
  Struct
    ( ["CalculAidePersonnaliséeLogementLocatif_in"],
      [
        ( "loyer_principal_in",
          embed_money
            x.CalculAidePersonnaliseeLogementLocatifIn.loyer_principal_in );
        ( "ressources_ménage_arrondies_in",
          embed_money
            x
              .CalculAidePersonnaliseeLogementLocatifIn
               .ressources_menage_arrondies_in );
        ( "bénéficiaire_aide_adulte_ou_enfant_handicapés_in",
          embed_bool
            x
              .CalculAidePersonnaliseeLogementLocatifIn
               .beneficiaire_aide_adulte_ou_enfant_handicapes_in );
        ( "date_courante_in",
          embed_date x.CalculAidePersonnaliseeLogementLocatifIn.date_courante_in
        );
        ( "nombre_personnes_à_charge_in",
          embed_integer
            x
              .CalculAidePersonnaliseeLogementLocatifIn
               .nombre_personnes_a_charge_in );
        ( "situation_familiale_calcul_apl_in",
          embed_situation_familiale_calcul_a_p_l
            x
              .CalculAidePersonnaliseeLogementLocatifIn
               .situation_familiale_calcul_apl_in );
        ( "zone_in",
          embed_zone_d_habitation
            x.CalculAidePersonnaliseeLogementLocatifIn.zone_in );
        ( "logement_est_chambre_in",
          embed_bool
            x.CalculAidePersonnaliseeLogementLocatifIn.logement_est_chambre_in );
        ( "âgées_ou_handicap_adultes_hébergées_onéreux_particuliers_in",
          embed_bool
            x
              .CalculAidePersonnaliseeLogementLocatifIn
               .agees_ou_handicap_adultes_hebergees_onereux_particuliers_in );
        ( "type_aide_in",
          embed_type_aides_personnelle_logement
            x.CalculAidePersonnaliseeLogementLocatifIn.type_aide_in );
        ( "colocation_in",
          embed_bool x.CalculAidePersonnaliseeLogementLocatifIn.colocation_in );
        ( "réduction_loyer_solidarité_in",
          embed_money
            x
              .CalculAidePersonnaliseeLogementLocatifIn
               .reduction_loyer_solidarite_in );
      ] )

module CalculEquivalenceLoyerMinimaleOut = struct
  type t = { montant_out : money }
end

let embed_calcul_equivalence_loyer_minimale_out
    (x : CalculEquivalenceLoyerMinimaleOut.t) : runtime_value =
  Struct
    ( ["CalculÉquivalenceLoyerMinimale_out"],
      [
        ( "montant_out",
          embed_money x.CalculEquivalenceLoyerMinimaleOut.montant_out );
      ] )

module CalculEquivalenceLoyerMinimaleIn = struct
  type t = {
    ressources_menage_arrondies_in : money;
    condition_2_du_832_25_in : bool;
    n_nombre_parts_d832_25_in : decimal;
  }
end

let embed_calcul_equivalence_loyer_minimale_in
    (x : CalculEquivalenceLoyerMinimaleIn.t) : runtime_value =
  Struct
    ( ["CalculÉquivalenceLoyerMinimale_in"],
      [
        ( "ressources_ménage_arrondies_in",
          embed_money
            x.CalculEquivalenceLoyerMinimaleIn.ressources_menage_arrondies_in );
        ( "condition_2_du_832_25_in",
          embed_bool x.CalculEquivalenceLoyerMinimaleIn.condition_2_du_832_25_in
        );
        ( "n_nombre_parts_d832_25_in",
          embed_decimal
            x.CalculEquivalenceLoyerMinimaleIn.n_nombre_parts_d832_25_in );
      ] )

module CalculNombrePartLogementFoyerOut = struct
  type t = { n_nombre_parts_d832_25_out : decimal }
end

let embed_calcul_nombre_part_logement_foyer_out
    (x : CalculNombrePartLogementFoyerOut.t) : runtime_value =
  Struct
    ( ["CalculNombrePartLogementFoyer_out"],
      [
        ( "n_nombre_parts_d832_25_out",
          embed_decimal
            x.CalculNombrePartLogementFoyerOut.n_nombre_parts_d832_25_out );
      ] )

module CalculNombrePartLogementFoyerIn = struct
  type t = {
    condition_2_du_832_25_in : bool;
    nombre_personnes_a_charge_in : integer;
    situation_familiale_calcul_apl_in : SituationFamilialeCalculAPL.t;
  }
end

let embed_calcul_nombre_part_logement_foyer_in
    (x : CalculNombrePartLogementFoyerIn.t) : runtime_value =
  Struct
    ( ["CalculNombrePartLogementFoyer_in"],
      [
        ( "condition_2_du_832_25_in",
          embed_bool x.CalculNombrePartLogementFoyerIn.condition_2_du_832_25_in
        );
        ( "nombre_personnes_à_charge_in",
          embed_integer
            x.CalculNombrePartLogementFoyerIn.nombre_personnes_a_charge_in );
        ( "situation_familiale_calcul_apl_in",
          embed_situation_familiale_calcul_a_p_l
            x.CalculNombrePartLogementFoyerIn.situation_familiale_calcul_apl_in
        );
      ] )

module CalculAidePersonnaliseeLogementFoyerOut = struct
  type t = {
    coefficient_multiplicateur_d832_25_out : money;
    coefficient_r_d832_25_out : money;
    n_nombre_parts_d832_25_out : decimal;
    equivalence_loyer_eligible_out : money;
    plafond_equivalence_loyer_eligible_out : money;
    equivalence_loyer_minimale_out : money;
    coefficient_prise_en_charge_d832_25_seuil_out : decimal;
    aide_finale_formule_out : money;
    traitement_aide_finale_montant_minimal_out : money -> money;
  }
end

let embed_calcul_aide_personnalisee_logement_foyer_out
    (x : CalculAidePersonnaliseeLogementFoyerOut.t) : runtime_value =
  Struct
    ( ["CalculAidePersonnaliséeLogementFoyer_out"],
      [
        ( "coefficient_multiplicateur_d832_25_out",
          embed_money
            x
              .CalculAidePersonnaliseeLogementFoyerOut
               .coefficient_multiplicateur_d832_25_out );
        ( "coefficient_r_d832_25_out",
          embed_money
            x.CalculAidePersonnaliseeLogementFoyerOut.coefficient_r_d832_25_out
        );
        ( "n_nombre_parts_d832_25_out",
          embed_decimal
            x.CalculAidePersonnaliseeLogementFoyerOut.n_nombre_parts_d832_25_out
        );
        ( "équivalence_loyer_éligible_out",
          embed_money
            x
              .CalculAidePersonnaliseeLogementFoyerOut
               .equivalence_loyer_eligible_out );
        ( "plafond_équivalence_loyer_éligible_out",
          embed_money
            x
              .CalculAidePersonnaliseeLogementFoyerOut
               .plafond_equivalence_loyer_eligible_out );
        ( "équivalence_loyer_minimale_out",
          embed_money
            x
              .CalculAidePersonnaliseeLogementFoyerOut
               .equivalence_loyer_minimale_out );
        ( "coefficient_prise_en_charge_d832_25_seuil_out",
          embed_decimal
            x
              .CalculAidePersonnaliseeLogementFoyerOut
               .coefficient_prise_en_charge_d832_25_seuil_out );
        ( "aide_finale_formule_out",
          embed_money
            x.CalculAidePersonnaliseeLogementFoyerOut.aide_finale_formule_out );
        ( "traitement_aide_finale_montant_minimal_out",
          unembeddable
            x
              .CalculAidePersonnaliseeLogementFoyerOut
               .traitement_aide_finale_montant_minimal_out );
      ] )

module CalculAidePersonnaliseeLogementFoyerIn = struct
  type t = {
    mode_occupation_in : ModeOccupation.t;
    ressources_menage_arrondies_in : money;
    nombre_personnes_a_charge_in : integer;
    situation_familiale_calcul_apl_in : SituationFamilialeCalculAPL.t;
    zone_in : ZoneDHabitation.t;
    date_courante_in : date;
    redevance_in : money;
    condition_2_du_832_25_in : unit -> bool;
    n_nombre_parts_d832_25_in : unit -> decimal;
  }
end

let embed_calcul_aide_personnalisee_logement_foyer_in
    (x : CalculAidePersonnaliseeLogementFoyerIn.t) : runtime_value =
  Struct
    ( ["CalculAidePersonnaliséeLogementFoyer_in"],
      [
        ( "mode_occupation_in",
          embed_mode_occupation
            x.CalculAidePersonnaliseeLogementFoyerIn.mode_occupation_in );
        ( "ressources_ménage_arrondies_in",
          embed_money
            x
              .CalculAidePersonnaliseeLogementFoyerIn
               .ressources_menage_arrondies_in );
        ( "nombre_personnes_à_charge_in",
          embed_integer
            x
              .CalculAidePersonnaliseeLogementFoyerIn
               .nombre_personnes_a_charge_in );
        ( "situation_familiale_calcul_apl_in",
          embed_situation_familiale_calcul_a_p_l
            x
              .CalculAidePersonnaliseeLogementFoyerIn
               .situation_familiale_calcul_apl_in );
        ( "zone_in",
          embed_zone_d_habitation
            x.CalculAidePersonnaliseeLogementFoyerIn.zone_in );
        ( "date_courante_in",
          embed_date x.CalculAidePersonnaliseeLogementFoyerIn.date_courante_in );
        ( "redevance_in",
          embed_money x.CalculAidePersonnaliseeLogementFoyerIn.redevance_in );
        ( "condition_2_du_832_25_in",
          unembeddable
            x.CalculAidePersonnaliseeLogementFoyerIn.condition_2_du_832_25_in );
        ( "n_nombre_parts_d832_25_in",
          unembeddable
            x.CalculAidePersonnaliseeLogementFoyerIn.n_nombre_parts_d832_25_in );
      ] )

module CalculNombrePartsAccessionProprieteOut = struct
  type t = { n_nombre_parts_d832_11_out : decimal }
end

let embed_calcul_nombre_parts_accession_propriete_out
    (x : CalculNombrePartsAccessionProprieteOut.t) : runtime_value =
  Struct
    ( ["CalculNombrePartsAccessionPropriété_out"],
      [
        ( "n_nombre_parts_d832_11_out",
          embed_decimal
            x.CalculNombrePartsAccessionProprieteOut.n_nombre_parts_d832_11_out
        );
      ] )

module CalculNombrePartsAccessionProprieteIn = struct
  type t = {
    nombre_personnes_a_charge_in : integer;
    situation_familiale_calcul_apl_in : SituationFamilialeCalculAPL.t;
  }
end

let embed_calcul_nombre_parts_accession_propriete_in
    (x : CalculNombrePartsAccessionProprieteIn.t) : runtime_value =
  Struct
    ( ["CalculNombrePartsAccessionPropriété_in"],
      [
        ( "nombre_personnes_à_charge_in",
          embed_integer
            x.CalculNombrePartsAccessionProprieteIn.nombre_personnes_a_charge_in
        );
        ( "situation_familiale_calcul_apl_in",
          embed_situation_familiale_calcul_a_p_l
            x
              .CalculNombrePartsAccessionProprieteIn
               .situation_familiale_calcul_apl_in );
      ] )

module CalculAidePersonnaliseeLogementAccessionProprieteOut = struct
  type t = {
    mensualite_eligible_out : money;
    mensualite_minimale_out : money;
    coefficient_prise_en_charge_d832_10_seuil_out : decimal;
    aide_finale_formule_out : money;
    traitement_aide_finale_montant_minimal_out : money -> money;
  }
end

let embed_calcul_aide_personnalisee_logement_accession_propriete_out
    (x : CalculAidePersonnaliseeLogementAccessionProprieteOut.t) : runtime_value
    =
  Struct
    ( ["CalculAidePersonnaliséeLogementAccessionPropriété_out"],
      [
        ( "mensualité_éligible_out",
          embed_money
            x
              .CalculAidePersonnaliseeLogementAccessionProprieteOut
               .mensualite_eligible_out );
        ( "mensualité_minimale_out",
          embed_money
            x
              .CalculAidePersonnaliseeLogementAccessionProprieteOut
               .mensualite_minimale_out );
        ( "coefficient_prise_en_charge_d832_10_seuil_out",
          embed_decimal
            x
              .CalculAidePersonnaliseeLogementAccessionProprieteOut
               .coefficient_prise_en_charge_d832_10_seuil_out );
        ( "aide_finale_formule_out",
          embed_money
            x
              .CalculAidePersonnaliseeLogementAccessionProprieteOut
               .aide_finale_formule_out );
        ( "traitement_aide_finale_montant_minimal_out",
          unembeddable
            x
              .CalculAidePersonnaliseeLogementAccessionProprieteOut
               .traitement_aide_finale_montant_minimal_out );
      ] )

module CalculAidePersonnaliseeLogementAccessionProprieteIn = struct
  type t = {
    mensualite_principale_in : money;
    ressources_menage_arrondies_in : money;
    nombre_personnes_a_charge_in : integer;
    situation_familiale_calcul_apl_in : SituationFamilialeCalculAPL.t;
    type_travaux_logement_in : TypeTravauxLogementD83215.t;
    date_signature_pret_in : date;
    local_habite_premiere_fois_beneficiaire_in : bool;
    date_entree_logement_in : date;
    copropriete_in : bool;
    situation_r822_11_13_17_in : bool;
    zone_in : ZoneDHabitation.t;
    type_pret_in : TypePret.t;
    anciennete_logement_in : NeufOuAncien.t;
    date_courante_in : date;
  }
end

let embed_calcul_aide_personnalisee_logement_accession_propriete_in
    (x : CalculAidePersonnaliseeLogementAccessionProprieteIn.t) : runtime_value
    =
  Struct
    ( ["CalculAidePersonnaliséeLogementAccessionPropriété_in"],
      [
        ( "mensualité_principale_in",
          embed_money
            x
              .CalculAidePersonnaliseeLogementAccessionProprieteIn
               .mensualite_principale_in );
        ( "ressources_ménage_arrondies_in",
          embed_money
            x
              .CalculAidePersonnaliseeLogementAccessionProprieteIn
               .ressources_menage_arrondies_in );
        ( "nombre_personnes_à_charge_in",
          embed_integer
            x
              .CalculAidePersonnaliseeLogementAccessionProprieteIn
               .nombre_personnes_a_charge_in );
        ( "situation_familiale_calcul_apl_in",
          embed_situation_familiale_calcul_a_p_l
            x
              .CalculAidePersonnaliseeLogementAccessionProprieteIn
               .situation_familiale_calcul_apl_in );
        ( "type_travaux_logement_in",
          embed_type_travaux_logement_d832_15
            x
              .CalculAidePersonnaliseeLogementAccessionProprieteIn
               .type_travaux_logement_in );
        ( "date_signature_prêt_in",
          embed_date
            x
              .CalculAidePersonnaliseeLogementAccessionProprieteIn
               .date_signature_pret_in );
        ( "local_habité_première_fois_bénéficiaire_in",
          embed_bool
            x
              .CalculAidePersonnaliseeLogementAccessionProprieteIn
               .local_habite_premiere_fois_beneficiaire_in );
        ( "date_entrée_logement_in",
          embed_date
            x
              .CalculAidePersonnaliseeLogementAccessionProprieteIn
               .date_entree_logement_in );
        ( "copropriété_in",
          embed_bool
            x.CalculAidePersonnaliseeLogementAccessionProprieteIn.copropriete_in
        );
        ( "situation_r822_11_13_17_in",
          embed_bool
            x
              .CalculAidePersonnaliseeLogementAccessionProprieteIn
               .situation_r822_11_13_17_in );
        ( "zone_in",
          embed_zone_d_habitation
            x.CalculAidePersonnaliseeLogementAccessionProprieteIn.zone_in );
        ( "type_prêt_in",
          embed_type_pret
            x.CalculAidePersonnaliseeLogementAccessionProprieteIn.type_pret_in );
        ( "ancienneté_logement_in",
          embed_neuf_ou_ancien
            x
              .CalculAidePersonnaliseeLogementAccessionProprieteIn
               .anciennete_logement_in );
        ( "date_courante_in",
          embed_date
            x
              .CalculAidePersonnaliseeLogementAccessionProprieteIn
               .date_courante_in );
      ] )

module CalculAidePersonnaliseeLogementOut = struct
  type t = {
    aide_finale_formule_out : money;
    traitement_aide_finale_out : money -> money;
  }
end

let embed_calcul_aide_personnalisee_logement_out
    (x : CalculAidePersonnaliseeLogementOut.t) : runtime_value =
  Struct
    ( ["CalculAidePersonnaliséeLogement_out"],
      [
        ( "aide_finale_formule_out",
          embed_money
            x.CalculAidePersonnaliseeLogementOut.aide_finale_formule_out );
        ( "traitement_aide_finale_out",
          unembeddable
            x.CalculAidePersonnaliseeLogementOut.traitement_aide_finale_out );
      ] )

module CalculAidePersonnaliseeLogementIn = struct
  type t = {
    mode_occupation_in : ModeOccupation.t;
    type_aide_in : TypeAidesPersonnelleLogement.t;
    informations_calcul_in : InformationsCalculAPL.t;
    ressources_menage_sans_arrondi_in : money;
    situation_familiale_in : SituationFamiliale.t;
    nombre_personnes_a_charge_in : integer;
    zone_in : ZoneDHabitation.t;
    date_courante_in : date;
  }
end

let embed_calcul_aide_personnalisee_logement_in
    (x : CalculAidePersonnaliseeLogementIn.t) : runtime_value =
  Struct
    ( ["CalculAidePersonnaliséeLogement_in"],
      [
        ( "mode_occupation_in",
          embed_mode_occupation
            x.CalculAidePersonnaliseeLogementIn.mode_occupation_in );
        ( "type_aide_in",
          embed_type_aides_personnelle_logement
            x.CalculAidePersonnaliseeLogementIn.type_aide_in );
        ( "informations_calcul_in",
          embed_informations_calcul_a_p_l
            x.CalculAidePersonnaliseeLogementIn.informations_calcul_in );
        ( "ressources_ménage_sans_arrondi_in",
          embed_money
            x
              .CalculAidePersonnaliseeLogementIn
               .ressources_menage_sans_arrondi_in );
        ( "situation_familiale_in",
          embed_situation_familiale
            x.CalculAidePersonnaliseeLogementIn.situation_familiale_in );
        ( "nombre_personnes_à_charge_in",
          embed_integer
            x.CalculAidePersonnaliseeLogementIn.nombre_personnes_a_charge_in );
        ( "zone_in",
          embed_zone_d_habitation x.CalculAidePersonnaliseeLogementIn.zone_in );
        ( "date_courante_in",
          embed_date x.CalculAidePersonnaliseeLogementIn.date_courante_in );
      ] )

module CalculAllocationLogementLocatifOut = struct
  type t = {
    aide_finale_formule_out : money;
    traitement_aide_finale_out : money -> money;
  }
end

let embed_calcul_allocation_logement_locatif_out
    (x : CalculAllocationLogementLocatifOut.t) : runtime_value =
  Struct
    ( ["CalculAllocationLogementLocatif_out"],
      [
        ( "aide_finale_formule_out",
          embed_money
            x.CalculAllocationLogementLocatifOut.aide_finale_formule_out );
        ( "traitement_aide_finale_out",
          unembeddable
            x.CalculAllocationLogementLocatifOut.traitement_aide_finale_out );
      ] )

module CalculAllocationLogementLocatifIn = struct
  type t = {
    loyer_principal_in : money;
    ressources_menage_arrondies_in : money;
    beneficiaire_aide_adulte_ou_enfant_handicapes_in : bool;
    date_courante_in : date;
    nombre_personnes_a_charge_in : integer;
    situation_familiale_calcul_apl_in : SituationFamilialeCalculAPL.t;
    zone_in : ZoneDHabitation.t;
    logement_est_chambre_in : bool;
    agees_ou_handicap_adultes_hebergees_onereux_particuliers_in : bool;
    type_aide_in : TypeAidesPersonnelleLogement.t;
    colocation_in : bool;
    reduction_loyer_solidarite_in : money;
    logement_meuble_d842_2_in : bool;
    changement_logement_d842_4_in : ChangementLogementD8424.t;
  }
end

let embed_calcul_allocation_logement_locatif_in
    (x : CalculAllocationLogementLocatifIn.t) : runtime_value =
  Struct
    ( ["CalculAllocationLogementLocatif_in"],
      [
        ( "loyer_principal_in",
          embed_money x.CalculAllocationLogementLocatifIn.loyer_principal_in );
        ( "ressources_ménage_arrondies_in",
          embed_money
            x.CalculAllocationLogementLocatifIn.ressources_menage_arrondies_in );
        ( "bénéficiaire_aide_adulte_ou_enfant_handicapés_in",
          embed_bool
            x
              .CalculAllocationLogementLocatifIn
               .beneficiaire_aide_adulte_ou_enfant_handicapes_in );
        ( "date_courante_in",
          embed_date x.CalculAllocationLogementLocatifIn.date_courante_in );
        ( "nombre_personnes_à_charge_in",
          embed_integer
            x.CalculAllocationLogementLocatifIn.nombre_personnes_a_charge_in );
        ( "situation_familiale_calcul_apl_in",
          embed_situation_familiale_calcul_a_p_l
            x
              .CalculAllocationLogementLocatifIn
               .situation_familiale_calcul_apl_in );
        ( "zone_in",
          embed_zone_d_habitation x.CalculAllocationLogementLocatifIn.zone_in );
        ( "logement_est_chambre_in",
          embed_bool x.CalculAllocationLogementLocatifIn.logement_est_chambre_in
        );
        ( "âgées_ou_handicap_adultes_hébergées_onéreux_particuliers_in",
          embed_bool
            x
              .CalculAllocationLogementLocatifIn
               .agees_ou_handicap_adultes_hebergees_onereux_particuliers_in );
        ( "type_aide_in",
          embed_type_aides_personnelle_logement
            x.CalculAllocationLogementLocatifIn.type_aide_in );
        ( "colocation_in",
          embed_bool x.CalculAllocationLogementLocatifIn.colocation_in );
        ( "réduction_loyer_solidarité_in",
          embed_money
            x.CalculAllocationLogementLocatifIn.reduction_loyer_solidarite_in );
        ( "logement_meublé_d842_2_in",
          embed_bool
            x.CalculAllocationLogementLocatifIn.logement_meuble_d842_2_in );
        ( "changement_logement_d842_4_in",
          embed_changement_logement_d842_4
            x.CalculAllocationLogementLocatifIn.changement_logement_d842_4_in );
      ] )

module CalculAllocationLogementAccessionProprieteOut = struct
  type t = {
    aide_finale_formule_out : money;
    traitement_aide_finale_montant_minimal_out : money -> money;
  }
end

let embed_calcul_allocation_logement_accession_propriete_out
    (x : CalculAllocationLogementAccessionProprieteOut.t) : runtime_value =
  Struct
    ( ["CalculAllocationLogementAccessionPropriété_out"],
      [
        ( "aide_finale_formule_out",
          embed_money
            x
              .CalculAllocationLogementAccessionProprieteOut
               .aide_finale_formule_out );
        ( "traitement_aide_finale_montant_minimal_out",
          unembeddable
            x
              .CalculAllocationLogementAccessionProprieteOut
               .traitement_aide_finale_montant_minimal_out );
      ] )

module CalculAllocationLogementAccessionProprieteIn = struct
  type t = {
    ressources_menage_arrondies_base_in : money;
    nombre_personnes_a_charge_in : integer;
    situation_familiale_calcul_apl_in : SituationFamilialeCalculAPL.t;
    zone_in : ZoneDHabitation.t;
    date_courante_in : date;
    mensualite_principale_in : money;
    situation_r822_11_13_17_in : bool;
    date_signature_pret_in : date;
    type_travaux_logement_in : TypeTravauxLogementR8425.t;
    local_habite_premiere_fois_beneficiaire_in : bool;
    date_entree_logement_in : date;
    charges_mensuelles_pret_in : money;
    copropriete_in : bool;
  }
end

let embed_calcul_allocation_logement_accession_propriete_in
    (x : CalculAllocationLogementAccessionProprieteIn.t) : runtime_value =
  Struct
    ( ["CalculAllocationLogementAccessionPropriété_in"],
      [
        ( "ressources_ménage_arrondies_base_in",
          embed_money
            x
              .CalculAllocationLogementAccessionProprieteIn
               .ressources_menage_arrondies_base_in );
        ( "nombre_personnes_à_charge_in",
          embed_integer
            x
              .CalculAllocationLogementAccessionProprieteIn
               .nombre_personnes_a_charge_in );
        ( "situation_familiale_calcul_apl_in",
          embed_situation_familiale_calcul_a_p_l
            x
              .CalculAllocationLogementAccessionProprieteIn
               .situation_familiale_calcul_apl_in );
        ( "zone_in",
          embed_zone_d_habitation
            x.CalculAllocationLogementAccessionProprieteIn.zone_in );
        ( "date_courante_in",
          embed_date
            x.CalculAllocationLogementAccessionProprieteIn.date_courante_in );
        ( "mensualité_principale_in",
          embed_money
            x
              .CalculAllocationLogementAccessionProprieteIn
               .mensualite_principale_in );
        ( "situation_r822_11_13_17_in",
          embed_bool
            x
              .CalculAllocationLogementAccessionProprieteIn
               .situation_r822_11_13_17_in );
        ( "date_signature_prêt_in",
          embed_date
            x
              .CalculAllocationLogementAccessionProprieteIn
               .date_signature_pret_in );
        ( "type_travaux_logement_in",
          embed_type_travaux_logement_r842_5
            x
              .CalculAllocationLogementAccessionProprieteIn
               .type_travaux_logement_in );
        ( "local_habité_première_fois_bénéficiaire_in",
          embed_bool
            x
              .CalculAllocationLogementAccessionProprieteIn
               .local_habite_premiere_fois_beneficiaire_in );
        ( "date_entrée_logement_in",
          embed_date
            x
              .CalculAllocationLogementAccessionProprieteIn
               .date_entree_logement_in );
        ( "charges_mensuelles_prêt_in",
          embed_money
            x
              .CalculAllocationLogementAccessionProprieteIn
               .charges_mensuelles_pret_in );
        ( "copropriété_in",
          embed_bool
            x.CalculAllocationLogementAccessionProprieteIn.copropriete_in );
      ] )

module CalculAllocationLogementFoyerOut = struct
  type t = {
    coefficient_prise_en_charge_out : decimal;
    equivalence_loyer_out : money;
    montant_forfaitaire_charges_out : money;
    loyer_minimal_out : money;
    aide_finale_formule_out : money;
    traitement_aide_finale_montant_minimal_out : money -> money;
  }
end

let embed_calcul_allocation_logement_foyer_out
    (x : CalculAllocationLogementFoyerOut.t) : runtime_value =
  Struct
    ( ["CalculAllocationLogementFoyer_out"],
      [
        ( "coefficient_prise_en_charge_out",
          embed_decimal
            x.CalculAllocationLogementFoyerOut.coefficient_prise_en_charge_out );
        ( "équivalence_loyer_out",
          embed_money x.CalculAllocationLogementFoyerOut.equivalence_loyer_out );
        ( "montant_forfaitaire_charges_out",
          embed_money
            x.CalculAllocationLogementFoyerOut.montant_forfaitaire_charges_out );
        ( "loyer_minimal_out",
          embed_money x.CalculAllocationLogementFoyerOut.loyer_minimal_out );
        ( "aide_finale_formule_out",
          embed_money x.CalculAllocationLogementFoyerOut.aide_finale_formule_out
        );
        ( "traitement_aide_finale_montant_minimal_out",
          unembeddable
            x
              .CalculAllocationLogementFoyerOut
               .traitement_aide_finale_montant_minimal_out );
      ] )

module CalculAllocationLogementFoyerIn = struct
  type t = {
    redevance_in : money;
    mode_occupation_in : ModeOccupation.t;
    ressources_menage_arrondies_in : money;
    nombre_personnes_a_charge_in : integer;
    situation_familiale_calcul_apl_in : SituationFamilialeCalculAPL.t;
    zone_in : ZoneDHabitation.t;
    date_courante_in : date;
    categorie_equivalence_loyer_d842_16_in :
      CategorieEquivalenceLoyerAllocationLogementFoyer.t;
  }
end

let embed_calcul_allocation_logement_foyer_in
    (x : CalculAllocationLogementFoyerIn.t) : runtime_value =
  Struct
    ( ["CalculAllocationLogementFoyer_in"],
      [
        ( "redevance_in",
          embed_money x.CalculAllocationLogementFoyerIn.redevance_in );
        ( "mode_occupation_in",
          embed_mode_occupation
            x.CalculAllocationLogementFoyerIn.mode_occupation_in );
        ( "ressources_ménage_arrondies_in",
          embed_money
            x.CalculAllocationLogementFoyerIn.ressources_menage_arrondies_in );
        ( "nombre_personnes_à_charge_in",
          embed_integer
            x.CalculAllocationLogementFoyerIn.nombre_personnes_a_charge_in );
        ( "situation_familiale_calcul_apl_in",
          embed_situation_familiale_calcul_a_p_l
            x.CalculAllocationLogementFoyerIn.situation_familiale_calcul_apl_in
        );
        ( "zone_in",
          embed_zone_d_habitation x.CalculAllocationLogementFoyerIn.zone_in );
        ( "date_courante_in",
          embed_date x.CalculAllocationLogementFoyerIn.date_courante_in );
        ( "catégorie_équivalence_loyer_d842_16_in",
          embed_categorie_equivalence_loyer_allocation_logement_foyer
            x
              .CalculAllocationLogementFoyerIn
               .categorie_equivalence_loyer_d842_16_in );
      ] )

module CalculAllocationLogementOut = struct
  type t = {
    aide_finale_formule_out : money;
    traitement_aide_finale_out : money -> money;
  }
end

let embed_calcul_allocation_logement_out (x : CalculAllocationLogementOut.t) :
    runtime_value =
  Struct
    ( ["CalculAllocationLogement_out"],
      [
        ( "aide_finale_formule_out",
          embed_money x.CalculAllocationLogementOut.aide_finale_formule_out );
        ( "traitement_aide_finale_out",
          unembeddable x.CalculAllocationLogementOut.traitement_aide_finale_out
        );
      ] )

module CalculAllocationLogementIn = struct
  type t = {
    mode_occupation_in : ModeOccupation.t;
    informations_calcul_in : InformationsCalculAPL.t;
    ressources_menage_sans_arrondi_in : money;
    situation_familiale_in : SituationFamiliale.t;
    nombre_personnes_a_charge_in : integer;
    zone_in : ZoneDHabitation.t;
    date_courante_in : date;
    type_aide_in : TypeAidesPersonnelleLogement.t;
  }
end

let embed_calcul_allocation_logement_in (x : CalculAllocationLogementIn.t) :
    runtime_value =
  Struct
    ( ["CalculAllocationLogement_in"],
      [
        ( "mode_occupation_in",
          embed_mode_occupation x.CalculAllocationLogementIn.mode_occupation_in
        );
        ( "informations_calcul_in",
          embed_informations_calcul_a_p_l
            x.CalculAllocationLogementIn.informations_calcul_in );
        ( "ressources_ménage_sans_arrondi_in",
          embed_money
            x.CalculAllocationLogementIn.ressources_menage_sans_arrondi_in );
        ( "situation_familiale_in",
          embed_situation_familiale
            x.CalculAllocationLogementIn.situation_familiale_in );
        ( "nombre_personnes_à_charge_in",
          embed_integer
            x.CalculAllocationLogementIn.nombre_personnes_a_charge_in );
        "zone_in", embed_zone_d_habitation x.CalculAllocationLogementIn.zone_in;
        ( "date_courante_in",
          embed_date x.CalculAllocationLogementIn.date_courante_in );
        ( "type_aide_in",
          embed_type_aides_personnelle_logement
            x.CalculAllocationLogementIn.type_aide_in );
      ] )

module OuvertureDroitsRetraiteOut = struct
  type t = { age_ouverture_droit_out : duration }
end

let embed_ouverture_droits_retraite_out (x : OuvertureDroitsRetraiteOut.t) :
    runtime_value =
  Struct
    ( ["OuvertureDroitsRetraite_out"],
      [
        ( "âge_ouverture_droit_out",
          embed_duration x.OuvertureDroitsRetraiteOut.age_ouverture_droit_out );
      ] )

module OuvertureDroitsRetraiteIn = struct
  type t = { date_naissance_assure_in : date }
end

let embed_ouverture_droits_retraite_in (x : OuvertureDroitsRetraiteIn.t) :
    runtime_value =
  Struct
    ( ["OuvertureDroitsRetraite_in"],
      [
        ( "date_naissance_assuré_in",
          embed_date x.OuvertureDroitsRetraiteIn.date_naissance_assure_in );
      ] )

module ImpayeDepenseLogementOut = struct
  type t = { montant_impaye_out : money }
end

let embed_impaye_depense_logement_out (x : ImpayeDepenseLogementOut.t) :
    runtime_value =
  Struct
    ( ["ImpayéDépenseLogement_out"],
      [
        ( "montant_impayé_out",
          embed_money x.ImpayeDepenseLogementOut.montant_impaye_out );
      ] )

module ImpayeDepenseLogementIn = struct
  type t = {
    mode_occupation_in : ModeOccupation.t;
    aide_versee_in : VersementA.t;
    montant_apl_in : money;
    montant_charges_in : money;
    depense_logement_in : DepenseLogement.t;
    montant_dette_in : money;
  }
end

let embed_impaye_depense_logement_in (x : ImpayeDepenseLogementIn.t) :
    runtime_value =
  Struct
    ( ["ImpayéDépenseLogement_in"],
      [
        ( "mode_occupation_in",
          embed_mode_occupation x.ImpayeDepenseLogementIn.mode_occupation_in );
        ( "aide_versée_in",
          embed_versement_a x.ImpayeDepenseLogementIn.aide_versee_in );
        "montant_apl_in", embed_money x.ImpayeDepenseLogementIn.montant_apl_in;
        ( "montant_charges_in",
          embed_money x.ImpayeDepenseLogementIn.montant_charges_in );
        ( "dépense_logement_in",
          embed_depense_logement x.ImpayeDepenseLogementIn.depense_logement_in );
        ( "montant_dette_in",
          embed_money x.ImpayeDepenseLogementIn.montant_dette_in );
      ] )

module CalculetteAidesAuLogementOut = struct
  type t = {
    eligibilite_out : bool;
    aide_finale_formule_out : money;
    traitement_aide_finale_out : money -> money;
    coefficents_enfants_garde_alternee_pris_en_compte_out : decimal array;
  }
end

let embed_calculette_aides_au_logement_out (x : CalculetteAidesAuLogementOut.t)
    : runtime_value =
  Struct
    ( ["CalculetteAidesAuLogement_out"],
      [
        ( "éligibilité_out",
          embed_bool x.CalculetteAidesAuLogementOut.eligibilite_out );
        ( "aide_finale_formule_out",
          embed_money x.CalculetteAidesAuLogementOut.aide_finale_formule_out );
        ( "traitement_aide_finale_out",
          unembeddable x.CalculetteAidesAuLogementOut.traitement_aide_finale_out
        );
        ( "coefficents_enfants_garde_alternée_pris_en_compte_out",
          embed_array embed_decimal
            x
              .CalculetteAidesAuLogementOut
               .coefficents_enfants_garde_alternee_pris_en_compte_out );
      ] )

module CalculetteAidesAuLogementIn = struct
  type t = {
    menage_in : Menage.t;
    demandeur_in : Demandeur.t;
    informations_calcul_in : InformationsCalculAPL.t;
    date_courante_in : date;
    ressources_menage_prises_en_compte_in : money;
  }
end

let embed_calculette_aides_au_logement_in (x : CalculetteAidesAuLogementIn.t) :
    runtime_value =
  Struct
    ( ["CalculetteAidesAuLogement_in"],
      [
        "ménage_in", embed_menage x.CalculetteAidesAuLogementIn.menage_in;
        ( "demandeur_in",
          embed_demandeur x.CalculetteAidesAuLogementIn.demandeur_in );
        ( "informations_calcul_in",
          embed_informations_calcul_a_p_l
            x.CalculetteAidesAuLogementIn.informations_calcul_in );
        ( "date_courante_in",
          embed_date x.CalculetteAidesAuLogementIn.date_courante_in );
        ( "ressources_ménage_prises_en_compte_in",
          embed_money
            x.CalculetteAidesAuLogementIn.ressources_menage_prises_en_compte_in
        );
      ] )

module CalculetteAidesAuLogementGardeAlterneeOut = struct
  type t = { eligibilite_out : bool; aide_finale_out : money }
end

let embed_calculette_aides_au_logement_garde_alternee_out
    (x : CalculetteAidesAuLogementGardeAlterneeOut.t) : runtime_value =
  Struct
    ( ["CalculetteAidesAuLogementGardeAlternée_out"],
      [
        ( "éligibilité_out",
          embed_bool x.CalculetteAidesAuLogementGardeAlterneeOut.eligibilite_out
        );
        ( "aide_finale_out",
          embed_money
            x.CalculetteAidesAuLogementGardeAlterneeOut.aide_finale_out );
      ] )

module CalculetteAidesAuLogementGardeAlterneeIn = struct
  type t = {
    menage_in : Menage.t;
    demandeur_in : Demandeur.t;
    informations_calcul_in : InformationsCalculAPL.t;
    date_courante_in : date;
    ressources_menage_prises_en_compte_in : money;
  }
end

let embed_calculette_aides_au_logement_garde_alternee_in
    (x : CalculetteAidesAuLogementGardeAlterneeIn.t) : runtime_value =
  Struct
    ( ["CalculetteAidesAuLogementGardeAlternée_in"],
      [
        ( "ménage_in",
          embed_menage x.CalculetteAidesAuLogementGardeAlterneeIn.menage_in );
        ( "demandeur_in",
          embed_demandeur
            x.CalculetteAidesAuLogementGardeAlterneeIn.demandeur_in );
        ( "informations_calcul_in",
          embed_informations_calcul_a_p_l
            x.CalculetteAidesAuLogementGardeAlterneeIn.informations_calcul_in );
        ( "date_courante_in",
          embed_date x.CalculetteAidesAuLogementGardeAlterneeIn.date_courante_in
        );
        ( "ressources_ménage_prises_en_compte_in",
          embed_money
            x
              .CalculetteAidesAuLogementGardeAlterneeIn
               .ressources_menage_prises_en_compte_in );
      ] )

module BaseMensuelleAllocationsFamilialesOut = struct
  type t = { montant_out : money }
end

let embed_base_mensuelle_allocations_familiales_out
    (x : BaseMensuelleAllocationsFamilialesOut.t) : runtime_value =
  Struct
    ( ["BaseMensuelleAllocationsFamiliales_out"],
      [
        ( "montant_out",
          embed_money x.BaseMensuelleAllocationsFamilialesOut.montant_out );
      ] )

module BaseMensuelleAllocationsFamilialesIn = struct
  type t = { date_courante_in : date }
end

let embed_base_mensuelle_allocations_familiales_in
    (x : BaseMensuelleAllocationsFamilialesIn.t) : runtime_value =
  Struct
    ( ["BaseMensuelleAllocationsFamiliales_in"],
      [
        ( "date_courante_in",
          embed_date x.BaseMensuelleAllocationsFamilialesIn.date_courante_in );
      ] )

module SmicOut = struct
  type t = { brut_horaire_out : money }
end

let embed_smic_out (x : SmicOut.t) : runtime_value =
  Struct
    (["Smic_out"], ["brut_horaire_out", embed_money x.SmicOut.brut_horaire_out])

module SmicIn = struct
  type t = { date_courante_in : date; residence_in : Collectivite.t }
end

let embed_smic_in (x : SmicIn.t) : runtime_value =
  Struct
    ( ["Smic_in"],
      [
        "date_courante_in", embed_date x.SmicIn.date_courante_in;
        "résidence_in", embed_collectivite x.SmicIn.residence_in;
      ] )

module EligibilitePrestationsFamilialesOut = struct
  type t = {
    droit_ouvert_out : EnfantPrestationsFamiliales.t -> bool;
    conditions_hors_age_out : EnfantPrestationsFamiliales.t -> bool;
    age_l512_3_2_out : integer;
    regime_outre_mer_l751_1_out : bool;
  }
end

let embed_eligibilite_prestations_familiales_out
    (x : EligibilitePrestationsFamilialesOut.t) : runtime_value =
  Struct
    ( ["ÉligibilitéPrestationsFamiliales_out"],
      [
        ( "droit_ouvert_out",
          unembeddable x.EligibilitePrestationsFamilialesOut.droit_ouvert_out );
        ( "conditions_hors_âge_out",
          unembeddable
            x.EligibilitePrestationsFamilialesOut.conditions_hors_age_out );
        ( "âge_l512_3_2_out",
          embed_integer x.EligibilitePrestationsFamilialesOut.age_l512_3_2_out );
        ( "régime_outre_mer_l751_1_out",
          embed_bool
            x.EligibilitePrestationsFamilialesOut.regime_outre_mer_l751_1_out );
      ] )

module EligibilitePrestationsFamilialesIn = struct
  type t = {
    date_courante_in : date;
    prestation_courante_in : ElementPrestationsFamiliales.t;
    residence_in : Collectivite.t;
  }
end

let embed_eligibilite_prestations_familiales_in
    (x : EligibilitePrestationsFamilialesIn.t) : runtime_value =
  Struct
    ( ["ÉligibilitéPrestationsFamiliales_in"],
      [
        ( "date_courante_in",
          embed_date x.EligibilitePrestationsFamilialesIn.date_courante_in );
        ( "prestation_courante_in",
          embed_element_prestations_familiales
            x.EligibilitePrestationsFamilialesIn.prestation_courante_in );
        ( "résidence_in",
          embed_collectivite x.EligibilitePrestationsFamilialesIn.residence_in );
      ] )

let contributions_sociales_aides_personnelle_logement
    (contributions_sociales_aides_personnelle_logement_in :
      ContributionsSocialesAidesPersonnelleLogementIn.t) :
    ContributionsSocialesAidesPersonnelleLogementOut.t =
  let date_courante_ : date =
    contributions_sociales_aides_personnelle_logement_in
      .ContributionsSocialesAidesPersonnelleLogementIn.date_courante_in
  in
  let exonere_csg_ : bool =
    log_variable_definition
      ["ContributionsSocialesAidesPersonnelleLogement"; "exonéré_csg"]
      embed_bool
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_sécurité_sociale.catala_fr";
                       start_line = 37;
                       start_column = 9;
                       end_line = 37;
                       end_column = 20;
                       law_headings =
                         [
                           "Article L136-1-3";
                           "Section 1 : De la contribution sociale sur les \
                            revenus d'activité et sur les revenus de \
                            remplacement";
                           "Chapitre 6 : Contribution sociale généralisée";
                           "Titre III: Titre III : Dispositions communes \
                            relatives au financement";
                           "Partie législative";
                           "Code de la sécurité sociale";
                         ];
                     }
                     true)
                 (fun (_ : _) -> true));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 547;
                 start_column = 11;
                 end_line = 547;
                 end_column = 22;
                 law_headings =
                   [
                     "Calcul des contributions sociales s'appliquant aux aides \
                      personnelles au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> false)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 547;
                start_column = 11;
                end_line = 547;
                end_column = 22;
                law_headings =
                  [
                    "Calcul des contributions sociales s'appliquant aux aides \
                     personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let taux_crds_ : decimal =
    log_variable_definition
      ["ContributionsSocialesAidesPersonnelleLogement"; "taux_crds"]
      embed_decimal
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/autres_sources.catala_fr";
                 start_line = 138;
                 start_column = 39;
                 end_line = 138;
                 end_column = 69;
                 law_headings =
                   [
                     "Article 19";
                     "Chapitre II : Des contributions pour le remboursement de \
                      la dette sociale.";
                     "Ordonnance n° 96-50 du 24 janvier 1996 relative au \
                      remboursement de la dette sociale";
                   ];
               }
               (date_courante_ >=@ date_of_numbers 2020 1 1))
           (fun (_ : _) -> decimal_of_string "0.005")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 546;
                start_column = 11;
                end_line = 546;
                end_column = 20;
                law_headings =
                  [
                    "Calcul des contributions sociales s'appliquant aux aides \
                     personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let montant_ : money -> money =
    log_variable_definition
      ["ContributionsSocialesAidesPersonnelleLogement"; "montant"]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/autres_sources.catala_fr";
                     start_line = 100;
                     start_column = 5;
                     end_line = 100;
                     end_column = 35;
                     law_headings =
                       [
                         "Article 14";
                         "Chapitre II : Des contributions pour le \
                          remboursement de la dette sociale.";
                         "Ordonnance n° 96-50 du 24 janvier 1996 relative au \
                          remboursement de la dette sociale";
                       ];
                   }
                   (date_courante_ >=@ date_of_numbers 2018 9 1))
               (fun (_ : _) -> param_ *$ taux_crds_)
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 549;
                    start_column = 10;
                    end_line = 549;
                    end_column = 17;
                    law_headings =
                      [
                        "Calcul des contributions sociales s'appliquant aux \
                         aides personnelles au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 549;
                start_column = 10;
                end_line = 549;
                end_column = 17;
                law_headings =
                  [
                    "Calcul des contributions sociales s'appliquant aux aides \
                     personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let (_ : unit) =
    if
      try exonere_csg_
      with EmptyError ->
        raise
          (NoValueProvided
             {
               filename = "examples/aides_logement/autres_sources.catala_fr";
               start_line = 104;
               start_column = 13;
               end_line = 104;
               end_column = 24;
               law_headings =
                 [
                   "Article 14";
                   "Chapitre II : Des contributions pour le remboursement de \
                    la dette sociale.";
                   "Ordonnance n° 96-50 du 24 janvier 1996 relative au \
                    remboursement de la dette sociale";
                 ];
             })
    then ()
    else raise AssertionFailed
  in
  { ContributionsSocialesAidesPersonnelleLogementOut.montant_out = montant_ }

let calcul_equivalence_loyer_minimale
    (calcul_equivalence_loyer_minimale_in : CalculEquivalenceLoyerMinimaleIn.t)
    : CalculEquivalenceLoyerMinimaleOut.t =
  let ressources_menage_arrondies_ : money =
    calcul_equivalence_loyer_minimale_in
      .CalculEquivalenceLoyerMinimaleIn.ressources_menage_arrondies_in
  in
  let condition_2_du_832_25_ : bool =
    calcul_equivalence_loyer_minimale_in
      .CalculEquivalenceLoyerMinimaleIn.condition_2_du_832_25_in
  in
  let n_nombre_parts_d832_25_ : decimal =
    calcul_equivalence_loyer_minimale_in
      .CalculEquivalenceLoyerMinimaleIn.n_nombre_parts_d832_25_in
  in
  let montant_forfaitaire_d832_26_ : money =
    log_variable_definition
      ["CalculÉquivalenceLoyerMinimale"; "montant_forfaitaire_d832_26"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 2903;
                 start_column = 14;
                 end_line = 2903;
                 end_column = 41;
                 law_headings =
                   [
                     "Article 31";
                     "Chapitre V : Calcul de l'aide personnalisée au logement \
                      en secteur logement-foyer";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) ->
             if condition_2_du_832_25_ then money_of_cents_string "7632"
             else money_of_cents_string "4557")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 620;
                start_column = 11;
                end_line = 620;
                end_column = 38;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let tranches_revenus_d832_26_ : TrancheRevenu.t array =
    log_variable_definition
      ["CalculÉquivalenceLoyerMinimale"; "tranches_revenus_d832_26"]
      (embed_array embed_tranche_revenu)
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/arrete_2019-09-27.catala_fr";
                       start_line = 2868;
                       start_column = 5;
                       end_line = 2868;
                       end_column = 26;
                       law_headings =
                         [
                           "Article 31";
                           "Chapitre V : Calcul de l'aide personnalisée au \
                            logement en secteur logement-foyer";
                           "Arrêté du 27 septembre 2019 relatif au calcul des \
                            aides personnelles au logement et de la prime de \
                            déménagement";
                         ];
                     }
                     condition_2_du_832_25_)
                 (fun (_ : _) ->
                   [|
                     {
                       TrancheRevenu.haut =
                         LimiteTranche.Revenu (money_of_cents_string "142303");
                       TrancheRevenu.bas = money_of_cents_string "0";
                       TrancheRevenu.taux = decimal_of_string "0.";
                     };
                     {
                       TrancheRevenu.haut =
                         LimiteTranche.Revenu (money_of_cents_string "204761");
                       TrancheRevenu.bas = money_of_cents_string "142303";
                       TrancheRevenu.taux = decimal_of_string "0.024";
                     };
                     {
                       TrancheRevenu.haut =
                         LimiteTranche.Revenu (money_of_cents_string "262985");
                       TrancheRevenu.bas = money_of_cents_string "204761";
                       TrancheRevenu.taux = decimal_of_string "0.208";
                     };
                     {
                       TrancheRevenu.haut =
                         LimiteTranche.Revenu (money_of_cents_string "409505");
                       TrancheRevenu.bas = money_of_cents_string "262985";
                       TrancheRevenu.taux = decimal_of_string "0.232";
                     };
                     {
                       TrancheRevenu.haut = LimiteTranche.Infini ();
                       TrancheRevenu.bas = money_of_cents_string "409505";
                       TrancheRevenu.taux = decimal_of_string "0.328";
                     };
                   |]));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 2829;
                 start_column = 14;
                 end_line = 2829;
                 end_column = 38;
                 law_headings =
                   [
                     "Article 31";
                     "Chapitre V : Calcul de l'aide personnalisée au logement \
                      en secteur logement-foyer";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) ->
             [|
               {
                 TrancheRevenu.haut =
                   LimiteTranche.Revenu (money_of_cents_string "194810");
                 TrancheRevenu.bas = money_of_cents_string "0";
                 TrancheRevenu.taux = decimal_of_string "0.04";
               };
               {
                 TrancheRevenu.haut =
                   LimiteTranche.Revenu (money_of_cents_string "267871");
                 TrancheRevenu.bas = money_of_cents_string "194810";
                 TrancheRevenu.taux = decimal_of_string "0.104";
               };
               {
                 TrancheRevenu.haut =
                   LimiteTranche.Revenu (money_of_cents_string "389618");
                 TrancheRevenu.bas = money_of_cents_string "267871";
                 TrancheRevenu.taux = decimal_of_string "0.216";
               };
               {
                 TrancheRevenu.haut =
                   LimiteTranche.Revenu (money_of_cents_string "535744");
                 TrancheRevenu.bas = money_of_cents_string "389618";
                 TrancheRevenu.taux = decimal_of_string "0.264";
               };
               {
                 TrancheRevenu.haut =
                   LimiteTranche.Revenu (money_of_cents_string "633129");
                 TrancheRevenu.bas = money_of_cents_string "535744";
                 TrancheRevenu.taux = decimal_of_string "0.32";
               };
               {
                 TrancheRevenu.haut = LimiteTranche.Infini ();
                 TrancheRevenu.bas = money_of_cents_string "633129";
                 TrancheRevenu.taux = decimal_of_string "0.48";
               };
             |])
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 617;
                start_column = 11;
                end_line = 617;
                end_column = 35;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let tranches_revenus_d832_26_multipliees_ : TrancheRevenuDecimal.t array =
    log_variable_definition
      ["CalculÉquivalenceLoyerMinimale"; "tranches_revenus_d832_26_multipliées"]
      (embed_array embed_tranche_revenu_decimal)
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4107;
                 start_column = 14;
                 end_line = 4107;
                 end_column = 50;
                 law_headings =
                   [
                     "Article D832-26";
                     "Sous-Section 2 : Conditions d'octroi de l'aide \
                      personnalisée au logement aux personnes résidant dans un \
                      logement-foyer";
                     "Section 3 : Logements-foyers";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             Array.map
               (fun (tranche_ : _) ->
                 {
                   TrancheRevenuDecimal.haut =
                     (match tranche_.TrancheRevenu.haut with
                     | LimiteTranche.Revenu tranche_haut_ ->
                       LimiteTrancheDecimal.Revenu
                         (decimal_of_money tranche_haut_
                         *& n_nombre_parts_d832_25_)
                     | LimiteTranche.Infini _ -> LimiteTrancheDecimal.Infini ());
                   TrancheRevenuDecimal.bas =
                     decimal_of_money tranche_.TrancheRevenu.bas
                     *& n_nombre_parts_d832_25_;
                   TrancheRevenuDecimal.taux = tranche_.TrancheRevenu.taux;
                 })
               tranches_revenus_d832_26_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 618;
                start_column = 11;
                end_line = 618;
                end_column = 47;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let montant_ : money =
    log_variable_definition
      ["CalculÉquivalenceLoyerMinimale"; "montant"]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 4158;
                       start_column = 5;
                       end_line = 4158;
                       end_column = 26;
                       law_headings =
                         [
                           "Article D832-26";
                           "Sous-Section 2 : Conditions d'octroi de l'aide \
                            personnalisée au logement aux personnes résidant \
                            dans un logement-foyer";
                           "Section 3 : Logements-foyers";
                           "Chapitre II : Modalités de liquidation et de \
                            versement de l'aide personnalisée au logement";
                           "Titre III : Aide personnalisée au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     condition_2_du_832_25_)
                 (fun (_ : _) ->
                   money_of_decimal
                     ((Array.fold_left
                         (fun (acc_ : decimal) (tranche_ : _) ->
                           acc_
                           +&
                           if
                             decimal_of_money ressources_menage_arrondies_
                             <=& tranche_.TrancheRevenuDecimal.bas
                           then decimal_of_string "0."
                           else
                             match tranche_.TrancheRevenuDecimal.haut with
                             | LimiteTrancheDecimal.Revenu tranche_haut_ ->
                               if
                                 decimal_of_money ressources_menage_arrondies_
                                 >=& tranche_haut_
                               then
                                 (tranche_haut_
                                -& tranche_.TrancheRevenuDecimal.bas)
                                 *& tranche_.TrancheRevenuDecimal.taux
                               else
                                 (decimal_of_money ressources_menage_arrondies_
                                 -& tranche_.TrancheRevenuDecimal.bas)
                                 *& tranche_.TrancheRevenuDecimal.taux
                             | LimiteTrancheDecimal.Infini _ ->
                               (decimal_of_money ressources_menage_arrondies_
                               -& tranche_.TrancheRevenuDecimal.bas)
                               *& tranche_.TrancheRevenuDecimal.taux)
                         (decimal_of_string "0.")
                         tranches_revenus_d832_26_multipliees_
                      +& decimal_of_money montant_forfaitaire_d832_26_)
                     /& decimal_of_string "12.")));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4120;
                 start_column = 14;
                 end_line = 4120;
                 end_column = 21;
                 law_headings =
                   [
                     "Article D832-26";
                     "Sous-Section 2 : Conditions d'octroi de l'aide \
                      personnalisée au logement aux personnes résidant dans un \
                      logement-foyer";
                     "Section 3 : Logements-foyers";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             money_of_decimal
               ((Array.fold_left
                   (fun (acc_ : decimal) (tranche_ : _) ->
                     acc_
                     +&
                     if
                       decimal_of_money ressources_menage_arrondies_
                       <=& tranche_.TrancheRevenuDecimal.bas
                     then decimal_of_string "0."
                     else
                       match tranche_.TrancheRevenuDecimal.haut with
                       | LimiteTrancheDecimal.Revenu tranche_haut_ ->
                         if
                           decimal_of_money ressources_menage_arrondies_
                           >=& tranche_haut_
                         then
                           (tranche_haut_ -& tranche_.TrancheRevenuDecimal.bas)
                           *& tranche_.TrancheRevenuDecimal.taux
                         else
                           (decimal_of_money ressources_menage_arrondies_
                           -& tranche_.TrancheRevenuDecimal.bas)
                           *& tranche_.TrancheRevenuDecimal.taux
                       | LimiteTrancheDecimal.Infini _ ->
                         (decimal_of_money ressources_menage_arrondies_
                         -& tranche_.TrancheRevenuDecimal.bas)
                         *& tranche_.TrancheRevenuDecimal.taux)
                   (decimal_of_string "0.")
                   tranches_revenus_d832_26_multipliees_
                +& decimal_of_money montant_forfaitaire_d832_26_
                   *& n_nombre_parts_d832_25_)
               /& decimal_of_string "12."))
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 622;
                start_column = 10;
                end_line = 622;
                end_column = 17;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  { CalculEquivalenceLoyerMinimaleOut.montant_out = montant_ }

let calcul_nombre_part_logement_foyer
    (calcul_nombre_part_logement_foyer_in : CalculNombrePartLogementFoyerIn.t) :
    CalculNombrePartLogementFoyerOut.t =
  let condition_2_du_832_25_ : bool =
    calcul_nombre_part_logement_foyer_in
      .CalculNombrePartLogementFoyerIn.condition_2_du_832_25_in
  in
  let nombre_personnes_a_charge_ : integer =
    calcul_nombre_part_logement_foyer_in
      .CalculNombrePartLogementFoyerIn.nombre_personnes_a_charge_in
  in
  let situation_familiale_calcul_apl_ : SituationFamilialeCalculAPL.t =
    calcul_nombre_part_logement_foyer_in
      .CalculNombrePartLogementFoyerIn.situation_familiale_calcul_apl_in
  in
  let n_nombre_parts_d832_25_ : decimal =
    log_variable_definition
      ["CalculNombrePartLogementFoyer"; "n_nombre_parts_d832_25"]
      embed_decimal
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 4072;
                       start_column = 5;
                       end_line = 4072;
                       end_column = 26;
                       law_headings =
                         [
                           "Article D832-25";
                           "Sous-Section 2 : Conditions d'octroi de l'aide \
                            personnalisée au logement aux personnes résidant \
                            dans un logement-foyer";
                           "Section 3 : Logements-foyers";
                           "Chapitre II : Modalités de liquidation et de \
                            versement de l'aide personnalisée au logement";
                           "Titre III : Aide personnalisée au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     condition_2_du_832_25_)
                 (fun (_ : _) ->
                   if nombre_personnes_a_charge_ = integer_of_string "0" then
                     match situation_familiale_calcul_apl_ with
                     | SituationFamilialeCalculAPL.PersonneSeule _ ->
                       decimal_of_string "1.2"
                     | SituationFamilialeCalculAPL.Couple _ ->
                       decimal_of_string "1.5"
                   else if nombre_personnes_a_charge_ = integer_of_string "1"
                   then decimal_of_string "2.5"
                   else if nombre_personnes_a_charge_ = integer_of_string "2"
                   then decimal_of_string "3."
                   else if nombre_personnes_a_charge_ = integer_of_string "3"
                   then decimal_of_string "3.7"
                   else if nombre_personnes_a_charge_ = integer_of_string "4"
                   then decimal_of_string "4.3"
                   else
                     decimal_of_string "4.3"
                     +& decimal_of_string "0.5"
                        *& decimal_of_integer
                             (nombre_personnes_a_charge_
                            -! integer_of_string "4")));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3985;
                 start_column = 14;
                 end_line = 3985;
                 end_column = 36;
                 law_headings =
                   [
                     "Article D832-25";
                     "Sous-Section 2 : Conditions d'octroi de l'aide \
                      personnalisée au logement aux personnes résidant dans un \
                      logement-foyer";
                     "Section 3 : Logements-foyers";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             if nombre_personnes_a_charge_ = integer_of_string "0" then
               match situation_familiale_calcul_apl_ with
               | SituationFamilialeCalculAPL.PersonneSeule _ ->
                 decimal_of_string "1.4"
               | SituationFamilialeCalculAPL.Couple _ -> decimal_of_string "1.8"
             else if nombre_personnes_a_charge_ = integer_of_string "1" then
               decimal_of_string "2.5"
             else if nombre_personnes_a_charge_ = integer_of_string "2" then
               decimal_of_string "3."
             else if nombre_personnes_a_charge_ = integer_of_string "3" then
               decimal_of_string "3.7"
             else if nombre_personnes_a_charge_ = integer_of_string "4" then
               decimal_of_string "4.3"
             else
               decimal_of_string "4.3"
               +& decimal_of_string "0.5"
                  *& decimal_of_integer
                       (nombre_personnes_a_charge_ -! integer_of_string "4"))
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 629;
                start_column = 10;
                end_line = 629;
                end_column = 32;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  {
    CalculNombrePartLogementFoyerOut.n_nombre_parts_d832_25_out =
      n_nombre_parts_d832_25_;
  }

let calcul_nombre_parts_accession_propriete
    (calcul_nombre_parts_accession_propriete_in :
      CalculNombrePartsAccessionProprieteIn.t) :
    CalculNombrePartsAccessionProprieteOut.t =
  let nombre_personnes_a_charge_ : integer =
    calcul_nombre_parts_accession_propriete_in
      .CalculNombrePartsAccessionProprieteIn.nombre_personnes_a_charge_in
  in
  let situation_familiale_calcul_apl_ : SituationFamilialeCalculAPL.t =
    calcul_nombre_parts_accession_propriete_in
      .CalculNombrePartsAccessionProprieteIn.situation_familiale_calcul_apl_in
  in
  let n_nombre_parts_d832_11_ : decimal =
    log_variable_definition
      ["CalculNombrePartsAccessionPropriété"; "n_nombre_parts_d832_11"]
      embed_decimal
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3331;
                 start_column = 14;
                 end_line = 3331;
                 end_column = 36;
                 law_headings =
                   [
                     "Article D832-11";
                     "Section 2 : Accession à la propriété";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             if nombre_personnes_a_charge_ = integer_of_string "0" then
               match situation_familiale_calcul_apl_ with
               | SituationFamilialeCalculAPL.PersonneSeule _ ->
                 decimal_of_string "1.4"
               | SituationFamilialeCalculAPL.Couple _ -> decimal_of_string "1.8"
             else if nombre_personnes_a_charge_ = integer_of_string "1" then
               decimal_of_string "2.5"
             else if nombre_personnes_a_charge_ = integer_of_string "2" then
               decimal_of_string "3."
             else if nombre_personnes_a_charge_ = integer_of_string "3" then
               decimal_of_string "3.7"
             else if nombre_personnes_a_charge_ = integer_of_string "4" then
               decimal_of_string "4.3"
             else
               decimal_of_string "4.3"
               +& decimal_of_string "0.5"
                  *& decimal_of_integer
                       (nombre_personnes_a_charge_ -! integer_of_string "4"))
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 684;
                start_column = 10;
                end_line = 684;
                end_column = 32;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  {
    CalculNombrePartsAccessionProprieteOut.n_nombre_parts_d832_11_out =
      n_nombre_parts_d832_11_;
  }

let ouverture_droits_retraite
    (ouverture_droits_retraite_in : OuvertureDroitsRetraiteIn.t) :
    OuvertureDroitsRetraiteOut.t =
  let date_naissance_assure_ : date =
    ouverture_droits_retraite_in
      .OuvertureDroitsRetraiteIn.date_naissance_assure_in
  in
  let age_ouverture_droit_ : duration =
    log_variable_definition
      ["OuvertureDroitsRetraite"; "âge_ouverture_droit"]
      embed_duration
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_sécurité_sociale.catala_fr";
                       start_line = 119;
                       start_column = 5;
                       end_line = 119;
                       end_column = 43;
                       law_headings =
                         [
                           "Article L161-17-2";
                           "Paragraphe 1 : Information et simplification des \
                            démarches des assurés.";
                           "Sous-section 4 : Assurance vieillesse";
                           "Section 1 : Bénéficiaires";
                           "Chapitre 1er : Dispositions relatives aux \
                            prestations";
                           "Titre VI : Dispositions relatives aux prestations \
                            et aux soins - Contrôle médical - Tutelle aux \
                            prestations sociales";
                           "Titre III: Titre III : Dispositions communes \
                            relatives au financement";
                           "Partie législative";
                           "Code de la sécurité sociale";
                         ];
                     }
                     (date_naissance_assure_ >=@ date_of_numbers 1955 1 1))
                 (fun (_ : _) -> duration_of_numbers 62 0 0));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_sécurité_sociale.catala_fr";
                       start_line = 256;
                       start_column = 5;
                       end_line = 256;
                       end_column = 42;
                       law_headings =
                         [
                           "Article D161-2-1-9";
                           "Paragraphe 2 : Ouverture du droit et liquidation.";
                           "Sous-section 4 : Assurance vieillesse";
                           "Section 1 : Bénéficiaires";
                           "Chapitre 1er : Dispositions relatives aux \
                            prestations";
                           "Titre VI : Dispositions relatives aux prestations \
                            et aux soins - Contrôle médical - Tutelle aux \
                            prestations sociales";
                           "Livre I : Généralités - Dispositions communes à \
                            tout ou partie des régimes de base";
                           "Partie réglementaire - Décrets simples";
                           "Code de la sécurité sociale";
                         ];
                     }
                     (date_naissance_assure_ <@ date_of_numbers 1951 7 1))
                 (fun (_ : _) -> duration_of_numbers 60 0 0));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_sécurité_sociale.catala_fr";
                       start_line = 266;
                       start_column = 5;
                       end_line = 267;
                       end_column = 43;
                       law_headings =
                         [
                           "Article D161-2-1-9";
                           "Paragraphe 2 : Ouverture du droit et liquidation.";
                           "Sous-section 4 : Assurance vieillesse";
                           "Section 1 : Bénéficiaires";
                           "Chapitre 1er : Dispositions relatives aux \
                            prestations";
                           "Titre VI : Dispositions relatives aux prestations \
                            et aux soins - Contrôle médical - Tutelle aux \
                            prestations sociales";
                           "Livre I : Généralités - Dispositions communes à \
                            tout ou partie des régimes de base";
                           "Partie réglementaire - Décrets simples";
                           "Code de la sécurité sociale";
                         ];
                     }
                     (date_naissance_assure_ >=@ date_of_numbers 1951 7 1
                     && date_naissance_assure_ <=@ date_of_numbers 1951 12 31))
                 (fun (_ : _) ->
                   duration_of_numbers 60 0 0 +^ duration_of_numbers 0 4 0));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_sécurité_sociale.catala_fr";
                       start_line = 276;
                       start_column = 5;
                       end_line = 276;
                       end_column = 48;
                       law_headings =
                         [
                           "Article D161-2-1-9";
                           "Paragraphe 2 : Ouverture du droit et liquidation.";
                           "Sous-section 4 : Assurance vieillesse";
                           "Section 1 : Bénéficiaires";
                           "Chapitre 1er : Dispositions relatives aux \
                            prestations";
                           "Titre VI : Dispositions relatives aux prestations \
                            et aux soins - Contrôle médical - Tutelle aux \
                            prestations sociales";
                           "Livre I : Généralités - Dispositions communes à \
                            tout ou partie des régimes de base";
                           "Partie réglementaire - Décrets simples";
                           "Code de la sécurité sociale";
                         ];
                     }
                     (year_of_date date_naissance_assure_
                     = integer_of_string "1952"))
                 (fun (_ : _) ->
                   duration_of_numbers 60 0 0 +^ duration_of_numbers 0 9 0));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_sécurité_sociale.catala_fr";
                       start_line = 285;
                       start_column = 5;
                       end_line = 285;
                       end_column = 48;
                       law_headings =
                         [
                           "Article D161-2-1-9";
                           "Paragraphe 2 : Ouverture du droit et liquidation.";
                           "Sous-section 4 : Assurance vieillesse";
                           "Section 1 : Bénéficiaires";
                           "Chapitre 1er : Dispositions relatives aux \
                            prestations";
                           "Titre VI : Dispositions relatives aux prestations \
                            et aux soins - Contrôle médical - Tutelle aux \
                            prestations sociales";
                           "Livre I : Généralités - Dispositions communes à \
                            tout ou partie des régimes de base";
                           "Partie réglementaire - Décrets simples";
                           "Code de la sécurité sociale";
                         ];
                     }
                     (year_of_date date_naissance_assure_
                     = integer_of_string "1953"))
                 (fun (_ : _) ->
                   duration_of_numbers 61 0 0 +^ duration_of_numbers 0 2 0));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_sécurité_sociale.catala_fr";
                       start_line = 294;
                       start_column = 5;
                       end_line = 294;
                       end_column = 48;
                       law_headings =
                         [
                           "Article D161-2-1-9";
                           "Paragraphe 2 : Ouverture du droit et liquidation.";
                           "Sous-section 4 : Assurance vieillesse";
                           "Section 1 : Bénéficiaires";
                           "Chapitre 1er : Dispositions relatives aux \
                            prestations";
                           "Titre VI : Dispositions relatives aux prestations \
                            et aux soins - Contrôle médical - Tutelle aux \
                            prestations sociales";
                           "Livre I : Généralités - Dispositions communes à \
                            tout ou partie des régimes de base";
                           "Partie réglementaire - Décrets simples";
                           "Code de la sécurité sociale";
                         ];
                     }
                     (year_of_date date_naissance_assure_
                     = integer_of_string "1954"))
                 (fun (_ : _) ->
                   duration_of_numbers 61 0 0 +^ duration_of_numbers 0 7 0));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 1033;
                start_column = 10;
                end_line = 1033;
                end_column = 29;
                law_headings =
                  [
                    "Date d'ouverture des droits à la retraite";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  { OuvertureDroitsRetraiteOut.age_ouverture_droit_out = age_ouverture_droit_ }

let impaye_depense_logement
    (impaye_depense_logement_in : ImpayeDepenseLogementIn.t) :
    ImpayeDepenseLogementOut.t =
  let mode_occupation_ : ModeOccupation.t =
    impaye_depense_logement_in.ImpayeDepenseLogementIn.mode_occupation_in
  in
  let aide_versee_ : VersementA.t =
    impaye_depense_logement_in.ImpayeDepenseLogementIn.aide_versee_in
  in
  let montant_apl_ : money =
    impaye_depense_logement_in.ImpayeDepenseLogementIn.montant_apl_in
  in
  let montant_charges_ : money =
    impaye_depense_logement_in.ImpayeDepenseLogementIn.montant_charges_in
  in
  let depense_logement_ : DepenseLogement.t =
    impaye_depense_logement_in.ImpayeDepenseLogementIn.depense_logement_in
  in
  let montant_dette_ : money =
    impaye_depense_logement_in.ImpayeDepenseLogementIn.montant_dette_in
  in
  let mode_occupation_impaye_ : ModeOccupationImpaye.t =
    log_variable_definition
      ["ImpayéDépenseLogement"; "mode_occupation_impayé"]
      embed_mode_occupation_impaye
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 2410;
                 start_column = 14;
                 end_line = 2410;
                 end_column = 36;
                 law_headings =
                   [
                     "Article R824-3";
                     "Section 1 : Seuils de constitution d'un impayé";
                     "Chapitre IV : Impayés de dépenses de logement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match mode_occupation_ with
             | ModeOccupation.Locataire _ -> ModeOccupationImpaye.ImpayeLoyer ()
             | ModeOccupation.ResidentLogementFoyer _ ->
               ModeOccupationImpaye.ImpayePret ()
             | ModeOccupation.AccessionProprieteLocalUsageExclusifHabitation _
               ->
               ModeOccupationImpaye.ImpayePret ()
             | ModeOccupation.SousLocataire _ ->
               ModeOccupationImpaye.ImpayeLoyer ()
             | ModeOccupation.LocationAccession _ ->
               ModeOccupationImpaye.ImpayeLoyer ())
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 1049;
                start_column = 11;
                end_line = 1049;
                end_column = 33;
                law_headings =
                  [
                    "Quantification des impayés de dépense de logement";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let depense_logement_brute_ : DepenseLogement.t =
    log_variable_definition
      ["ImpayéDépenseLogement"; "dépense_logement_brute"]
      embed_depense_logement
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default [||]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/code_construction_reglementaire.catala_fr";
                             start_line = 2378;
                             start_column = 14;
                             end_line = 2378;
                             end_column = 36;
                             law_headings =
                               [
                                 "Article R824-2";
                                 "Section 1 : Seuils de constitution d'un \
                                  impayé";
                                 "Chapitre IV : Impayés de dépenses de logement";
                                 "Titre II : Dispositions communes aux aides \
                                  personnelles au logement";
                                 "Livre VIII : Aides personnelles au logement";
                                 "Partie réglementaire";
                                 "Code de la construction et de l'habitation";
                               ];
                           }
                           (match mode_occupation_impaye_ with
                           | ModeOccupationImpaye.ImpayeLoyer _ -> false
                           | ModeOccupationImpaye.ImpayePret _ -> true))
                       (fun (_ : _) -> depense_logement_));
                 |]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 2282;
                       start_column = 14;
                       end_line = 2282;
                       end_column = 36;
                       law_headings =
                         [
                           "Article R824-1";
                           "Section 1 : Seuils de constitution d'un impayé";
                           "Chapitre IV : Impayés de dépenses de logement";
                           "Titre II : Dispositions communes aux aides \
                            personnelles au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     (match mode_occupation_impaye_ with
                     | ModeOccupationImpaye.ImpayeLoyer _ -> true
                     | ModeOccupationImpaye.ImpayePret _ -> false))
                 (fun (_ : _) -> depense_logement_));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 1050;
                start_column = 11;
                end_line = 1050;
                end_column = 33;
                law_headings =
                  [
                    "Quantification des impayés de dépense de logement";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let depense_logement_nette_ : DepenseLogement.t =
    log_variable_definition
      ["ImpayéDépenseLogement"; "dépense_logement_nette"]
      embed_depense_logement
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 2291;
                       start_column = 14;
                       end_line = 2291;
                       end_column = 36;
                       law_headings =
                         [
                           "Article R824-1";
                           "Section 1 : Seuils de constitution d'un impayé";
                           "Chapitre IV : Impayés de dépenses de logement";
                           "Titre II : Dispositions communes aux aides \
                            personnelles au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     (match mode_occupation_impaye_ with
                     | ModeOccupationImpaye.ImpayeLoyer _ -> true
                     | ModeOccupationImpaye.ImpayePret _ -> false))
                 (fun (_ : _) ->
                   match depense_logement_brute_ with
                   | DepenseLogement.TotalAnnuelEcheances total_ ->
                     DepenseLogement.TotalAnnuelEcheances total_
                   | DepenseLogement.Mensualite mensualite_ ->
                     DepenseLogement.Mensualite mensualite_
                   | DepenseLogement.Loyer montant_loyer_ ->
                     DepenseLogement.Loyer (montant_loyer_ -$ montant_apl_)));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 2387;
                       start_column = 14;
                       end_line = 2387;
                       end_column = 36;
                       law_headings =
                         [
                           "Article R824-2";
                           "Section 1 : Seuils de constitution d'un impayé";
                           "Chapitre IV : Impayés de dépenses de logement";
                           "Titre II : Dispositions communes aux aides \
                            personnelles au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     (match mode_occupation_impaye_ with
                     | ModeOccupationImpaye.ImpayeLoyer _ -> false
                     | ModeOccupationImpaye.ImpayePret _ -> true))
                 (fun (_ : _) ->
                   match depense_logement_ with
                   | DepenseLogement.TotalAnnuelEcheances total_echeances_ ->
                     DepenseLogement.TotalAnnuelEcheances
                       (total_echeances_
                       -$ (montant_apl_ *$ decimal_of_string "12."))
                   | DepenseLogement.Mensualite mensualite_ ->
                     DepenseLogement.Mensualite (mensualite_ -$ montant_apl_)
                   | DepenseLogement.Loyer loyer_ ->
                     DepenseLogement.Loyer loyer_));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 1051;
                start_column = 11;
                end_line = 1051;
                end_column = 33;
                law_headings =
                  [
                    "Quantification des impayés de dépense de logement";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let seuil_impaye_depense_de_logement_ : money =
    log_variable_definition
      ["ImpayéDépenseLogement"; "seuil_impayé_dépense_de_logement"]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default [||]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/code_construction_reglementaire.catala_fr";
                             start_line = 2268;
                             start_column = 20;
                             end_line = 2268;
                             end_column = 51;
                             law_headings =
                               [
                                 "Article R824-1";
                                 "Section 1 : Seuils de constitution d'un \
                                  impayé";
                                 "Chapitre IV : Impayés de dépenses de logement";
                                 "Titre II : Dispositions communes aux aides \
                                  personnelles au logement";
                                 "Livre VIII : Aides personnelles au logement";
                                 "Partie réglementaire";
                                 "Code de la construction et de l'habitation";
                               ];
                           }
                           ((match mode_occupation_impaye_ with
                            | ModeOccupationImpaye.ImpayeLoyer _ -> true
                            | ModeOccupationImpaye.ImpayePret _ -> false)
                           &&
                           match aide_versee_ with
                           | VersementA.Bailleur _ -> true
                           | VersementA.Beneficiaire _ -> false
                           | VersementA.EtablissementHabilite _ -> false))
                       (fun (_ : _) ->
                         match depense_logement_nette_ with
                         | DepenseLogement.TotalAnnuelEcheances _ ->
                           money_of_cents_string "0"
                         | DepenseLogement.Mensualite _ ->
                           money_of_cents_string "0"
                         | DepenseLogement.Loyer loyer_net_ ->
                           (loyer_net_ +$ montant_charges_)
                           *$ decimal_of_string "2."));
                 |]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 2252;
                       start_column = 20;
                       end_line = 2252;
                       end_column = 55;
                       law_headings =
                         [
                           "Article R824-1";
                           "Section 1 : Seuils de constitution d'un impayé";
                           "Chapitre IV : Impayés de dépenses de logement";
                           "Titre II : Dispositions communes aux aides \
                            personnelles au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     ((match mode_occupation_impaye_ with
                      | ModeOccupationImpaye.ImpayeLoyer _ -> true
                      | ModeOccupationImpaye.ImpayePret _ -> false)
                     &&
                     match aide_versee_ with
                     | VersementA.Bailleur _ -> false
                     | VersementA.Beneficiaire _ -> true
                     | VersementA.EtablissementHabilite _ -> false))
                 (fun (_ : _) ->
                   match depense_logement_brute_ with
                   | DepenseLogement.TotalAnnuelEcheances _ ->
                     money_of_cents_string "0"
                   | DepenseLogement.Mensualite _ -> money_of_cents_string "0"
                   | DepenseLogement.Loyer loyer_brut_ ->
                     (loyer_brut_ +$ montant_charges_) *$ decimal_of_string "2."));
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default [||]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/code_construction_reglementaire.catala_fr";
                             start_line = 2362;
                             start_column = 7;
                             end_line = 2362;
                             end_column = 51;
                             law_headings =
                               [
                                 "Article R824-2";
                                 "Section 1 : Seuils de constitution d'un \
                                  impayé";
                                 "Chapitre IV : Impayés de dépenses de logement";
                                 "Titre II : Dispositions communes aux aides \
                                  personnelles au logement";
                                 "Livre VIII : Aides personnelles au logement";
                                 "Partie réglementaire";
                                 "Code de la construction et de l'habitation";
                               ];
                           }
                           ((match mode_occupation_impaye_ with
                            | ModeOccupationImpaye.ImpayeLoyer _ -> false
                            | ModeOccupationImpaye.ImpayePret _ -> true)
                           &&
                           match aide_versee_ with
                           | VersementA.Bailleur _ -> false
                           | VersementA.Beneficiaire _ -> false
                           | VersementA.EtablissementHabilite _ -> true))
                       (fun (_ : _) ->
                         match depense_logement_nette_ with
                         | DepenseLogement.TotalAnnuelEcheances
                             echeance_pret_nette_ ->
                           echeance_pret_nette_
                           *$ (decimal_of_string "1." /& decimal_of_string "6.")
                         | DepenseLogement.Mensualite mensualite_nette_ ->
                           mensualite_nette_ *$ decimal_of_string "2."
                         | DepenseLogement.Loyer _ -> money_of_cents_string "0"));
                 |]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 2334;
                       start_column = 7;
                       end_line = 2334;
                       end_column = 42;
                       law_headings =
                         [
                           "Article R824-2";
                           "Section 1 : Seuils de constitution d'un impayé";
                           "Chapitre IV : Impayés de dépenses de logement";
                           "Titre II : Dispositions communes aux aides \
                            personnelles au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     ((match mode_occupation_impaye_ with
                      | ModeOccupationImpaye.ImpayeLoyer _ -> false
                      | ModeOccupationImpaye.ImpayePret _ -> true)
                     &&
                     match aide_versee_ with
                     | VersementA.Bailleur _ -> false
                     | VersementA.Beneficiaire _ -> true
                     | VersementA.EtablissementHabilite _ -> false))
                 (fun (_ : _) ->
                   match depense_logement_brute_ with
                   | DepenseLogement.TotalAnnuelEcheances echeance_pret_brute_
                     ->
                     echeance_pret_brute_
                     *$ (decimal_of_string "1." /& decimal_of_string "6.")
                   | DepenseLogement.Mensualite mensualite_brute_ ->
                     mensualite_brute_ *$ decimal_of_string "2."
                   | DepenseLogement.Loyer _ -> money_of_cents_string "0"));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 1048;
                start_column = 11;
                end_line = 1048;
                end_column = 43;
                law_headings =
                  [
                    "Quantification des impayés de dépense de logement";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let montant_impaye_ : money =
    log_variable_definition
      ["ImpayéDépenseLogement"; "montant_impayé"]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default [||]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/code_construction_reglementaire.catala_fr";
                             start_line = 2310;
                             start_column = 14;
                             end_line = 2310;
                             end_column = 28;
                             law_headings =
                               [
                                 "Article R824-2";
                                 "Section 1 : Seuils de constitution d'un \
                                  impayé";
                                 "Chapitre IV : Impayés de dépenses de logement";
                                 "Titre II : Dispositions communes aux aides \
                                  personnelles au logement";
                                 "Livre VIII : Aides personnelles au logement";
                                 "Partie réglementaire";
                                 "Code de la construction et de l'habitation";
                               ];
                           }
                           (match mode_occupation_impaye_ with
                           | ModeOccupationImpaye.ImpayeLoyer _ -> false
                           | ModeOccupationImpaye.ImpayePret _ -> true))
                       (fun (_ : _) ->
                         if montant_dette_ >=$ seuil_impaye_depense_de_logement_
                         then montant_dette_
                         else money_of_cents_string "0"));
                 |]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 2247;
                       start_column = 14;
                       end_line = 2247;
                       end_column = 28;
                       law_headings =
                         [
                           "Article R824-1";
                           "Section 1 : Seuils de constitution d'un impayé";
                           "Chapitre IV : Impayés de dépenses de logement";
                           "Titre II : Dispositions communes aux aides \
                            personnelles au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     (match mode_occupation_impaye_ with
                     | ModeOccupationImpaye.ImpayeLoyer _ -> true
                     | ModeOccupationImpaye.ImpayePret _ -> false))
                 (fun (_ : _) ->
                   if montant_dette_ >=$ seuil_impaye_depense_de_logement_ then
                     montant_dette_
                   else money_of_cents_string "0"));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 1053;
                start_column = 10;
                end_line = 1053;
                end_column = 24;
                law_headings =
                  [
                    "Quantification des impayés de dépense de logement";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  { ImpayeDepenseLogementOut.montant_impaye_out = montant_impaye_ }

let base_mensuelle_allocations_familiales
    (base_mensuelle_allocations_familiales_in :
      BaseMensuelleAllocationsFamilialesIn.t) :
    BaseMensuelleAllocationsFamilialesOut.t =
  let date_courante_ : date =
    base_mensuelle_allocations_familiales_in
      .BaseMensuelleAllocationsFamilialesIn.date_courante_in
  in
  let montant_ : money =
    log_variable_definition
      ["BaseMensuelleAllocationsFamiliales"; "montant"]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/../base_mensuelle_allocations_familiales/bmaf.catala_fr";
                       start_line = 28;
                       start_column = 5;
                       end_line = 29;
                       end_column = 34;
                       law_headings =
                         [
                           "Instruction ministérielle N°DSS/SD2B/2019/65 du 25 \
                            mars 2019 relative à la revalorisation au 1er \
                            avril 2019 des prestations familiales servies en \
                            métropole";
                           "Montant de la base mensuelle des allocations \
                            familiales";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2019 4 1
                     && date_courante_ <@ date_of_numbers 2020 4 1))
                 (fun (_ : _) -> money_of_cents_string "41316"));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/../base_mensuelle_allocations_familiales/bmaf.catala_fr";
                       start_line = 48;
                       start_column = 5;
                       end_line = 49;
                       end_column = 34;
                       law_headings =
                         [
                           "Instruction interministérielle no DSS/SD2B/2020/33 \
                            du 18 février 2020 relative à la revalorisation au \
                            1er avril 2020 des prestations familiales servies \
                            en métropole, en Guadeloupe, en Guyane, en \
                            Martinique, à La Réunion, à Saint-Barthélemy, à \
                            Saint-Martin et dans le département de Mayotte";
                           "Montant de la base mensuelle des allocations \
                            familiales";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2020 4 1
                     && date_courante_ <@ date_of_numbers 2021 4 1))
                 (fun (_ : _) -> money_of_cents_string "41440"));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/../base_mensuelle_allocations_familiales/bmaf.catala_fr";
                       start_line = 64;
                       start_column = 5;
                       end_line = 65;
                       end_column = 34;
                       law_headings =
                         [
                           "Instruction interministérielle n°DSS/2B/2021/65 du \
                            19 mars 2021 relative à la revalorisation au 1er \
                            avril 2021 des prestations familiales servies en \
                            métropole, en Guadeloupe, en Guyane, en \
                            Martinique, à la Réunion, à Saint-Barthélemy, à \
                            Saint-Martin et dans le département de Mayotte";
                           "Montant de la base mensuelle des allocations \
                            familiales";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2021 4 1
                     && date_courante_ <@ date_of_numbers 2022 4 1))
                 (fun (_ : _) -> money_of_cents_string "41481"));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/../base_mensuelle_allocations_familiales/bmaf.catala_fr";
                       start_line = 82;
                       start_column = 5;
                       end_line = 83;
                       end_column = 34;
                       law_headings =
                         [
                           "Instruction interministérielle n°DSS/2B/2022/82 du \
                            28 mars 2022 relative à la revalorisation au 1er \
                            avril 2022 des prestations familiales servies en \
                            métropole, en Guadeloupe, en Guyane, en \
                            Martinique, à la Réunion, à Saint-Barthélemy, à \
                            Saint-Martin et dans le département de Mayotte";
                           "Montant de la base mensuelle des allocations \
                            familiales";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2022 4 1
                     && date_courante_ <@ date_of_numbers 2023 4 1))
                 (fun (_ : _) -> money_of_cents_string "42228"));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename =
                  "examples/aides_logement/../base_mensuelle_allocations_familiales/bmaf.catala_fr";
                start_line = 6;
                start_column = 10;
                end_line = 6;
                end_column = 17;
                law_headings =
                  ["Montant de la base mensuelle des allocations familiales"];
              }))
  in
  { BaseMensuelleAllocationsFamilialesOut.montant_out = montant_ }

let smic (smic_in : SmicIn.t) : SmicOut.t =
  let date_courante_ : date = smic_in.SmicIn.date_courante_in in
  let residence_ : Collectivite.t = smic_in.SmicIn.residence_in in
  let brut_horaire_ : money =
    log_variable_definition ["Smic"; "brut_horaire"] embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/../prestations_familiales/../smic/smic.catala_fr";
                       start_line = 29;
                       start_column = 5;
                       end_line = 38;
                       end_column = 6;
                       law_headings =
                         [
                           "Article 1";
                           "Décret n° 2018-1173 du 19 décembre 2018 portant \
                            relèvement du salaire minimum de croissance";
                           "Montant du salaire minimum de croissance";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2019 1 1
                     && date_courante_ <=@ date_of_numbers 2019 12 31
                     && (residence_ = Collectivite.Metropole ()
                        || residence_ = Collectivite.Guadeloupe ()
                        || residence_ = Collectivite.Guyane ()
                        || residence_ = Collectivite.Martinique ()
                        || residence_ = Collectivite.LaReunion ()
                        || residence_ = Collectivite.SaintBarthelemy ()
                        || residence_ = Collectivite.SaintMartin ()
                        || residence_ = Collectivite.SaintPierreEtMiquelon ())))
                 (fun (_ : _) -> money_of_cents_string "1003"));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/../prestations_familiales/../smic/smic.catala_fr";
                       start_line = 47;
                       start_column = 5;
                       end_line = 49;
                       end_column = 6;
                       law_headings =
                         [
                           "Article 1";
                           "Décret n° 2018-1173 du 19 décembre 2018 portant \
                            relèvement du salaire minimum de croissance";
                           "Montant du salaire minimum de croissance";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2019 1 1
                     && date_courante_ <=@ date_of_numbers 2019 12 31
                     && residence_ = Collectivite.Mayotte ()))
                 (fun (_ : _) -> money_of_cents_string "757"));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/../prestations_familiales/../smic/smic.catala_fr";
                       start_line = 68;
                       start_column = 5;
                       end_line = 77;
                       end_column = 6;
                       law_headings =
                         [
                           "Article 1";
                           "Décret n° 2019-1387 du 18 décembre 2019 portant \
                            relèvement du salaire minimum de croissance";
                           "Montant du salaire minimum de croissance";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2020 1 1
                     && date_courante_ <=@ date_of_numbers 2020 12 31
                     && (residence_ = Collectivite.Metropole ()
                        || residence_ = Collectivite.Guadeloupe ()
                        || residence_ = Collectivite.Guyane ()
                        || residence_ = Collectivite.Martinique ()
                        || residence_ = Collectivite.LaReunion ()
                        || residence_ = Collectivite.SaintBarthelemy ()
                        || residence_ = Collectivite.SaintMartin ()
                        || residence_ = Collectivite.SaintPierreEtMiquelon ())))
                 (fun (_ : _) -> money_of_cents_string "1015"));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/../prestations_familiales/../smic/smic.catala_fr";
                       start_line = 86;
                       start_column = 5;
                       end_line = 88;
                       end_column = 6;
                       law_headings =
                         [
                           "Article 1";
                           "Décret n° 2019-1387 du 18 décembre 2019 portant \
                            relèvement du salaire minimum de croissance";
                           "Montant du salaire minimum de croissance";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2020 1 1
                     && date_courante_ <=@ date_of_numbers 2020 12 31
                     && residence_ = Collectivite.Mayotte ()))
                 (fun (_ : _) -> money_of_cents_string "766"));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/../prestations_familiales/../smic/smic.catala_fr";
                       start_line = 107;
                       start_column = 5;
                       end_line = 116;
                       end_column = 6;
                       law_headings =
                         [
                           "Article 1";
                           "Décret n° 2020-1598 du 16 décembre 2020 portant \
                            relèvement du salaire minimum de croissance";
                           "Montant du salaire minimum de croissance";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2021 1 1
                     && date_courante_ <=@ date_of_numbers 2021 12 31
                     && (residence_ = Collectivite.Metropole ()
                        || residence_ = Collectivite.Guadeloupe ()
                        || residence_ = Collectivite.Guyane ()
                        || residence_ = Collectivite.Martinique ()
                        || residence_ = Collectivite.LaReunion ()
                        || residence_ = Collectivite.SaintBarthelemy ()
                        || residence_ = Collectivite.SaintMartin ()
                        || residence_ = Collectivite.SaintPierreEtMiquelon ())))
                 (fun (_ : _) -> money_of_cents_string "1025"));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/../prestations_familiales/../smic/smic.catala_fr";
                       start_line = 125;
                       start_column = 5;
                       end_line = 127;
                       end_column = 6;
                       law_headings =
                         [
                           "Article 1";
                           "Décret n° 2020-1598 du 16 décembre 2020 portant \
                            relèvement du salaire minimum de croissance";
                           "Montant du salaire minimum de croissance";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2021 1 1
                     && date_courante_ <=@ date_of_numbers 2021 12 31
                     && residence_ = Collectivite.Mayotte ()))
                 (fun (_ : _) -> money_of_cents_string "774"));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/../prestations_familiales/../smic/smic.catala_fr";
                       start_line = 146;
                       start_column = 5;
                       end_line = 155;
                       end_column = 6;
                       law_headings =
                         [
                           "Article 1";
                           "Décret n° 2021-1741 du 22 décembre 2021 portant \
                            relèvement du salaire minimum de croissance";
                           "Montant du salaire minimum de croissance";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2022 1 1
                     && date_courante_ <=@ date_of_numbers 2022 4 30
                     && (residence_ = Collectivite.Metropole ()
                        || residence_ = Collectivite.Guadeloupe ()
                        || residence_ = Collectivite.Guyane ()
                        || residence_ = Collectivite.Martinique ()
                        || residence_ = Collectivite.LaReunion ()
                        || residence_ = Collectivite.SaintBarthelemy ()
                        || residence_ = Collectivite.SaintMartin ()
                        || residence_ = Collectivite.SaintPierreEtMiquelon ())))
                 (fun (_ : _) -> money_of_cents_string "1057"));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/../prestations_familiales/../smic/smic.catala_fr";
                       start_line = 165;
                       start_column = 5;
                       end_line = 167;
                       end_column = 6;
                       law_headings =
                         [
                           "Article 1";
                           "Décret n° 2021-1741 du 22 décembre 2021 portant \
                            relèvement du salaire minimum de croissance";
                           "Montant du salaire minimum de croissance";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2022 1 1
                     && date_courante_ <=@ date_of_numbers 2022 4 30
                     && residence_ = Collectivite.Mayotte ()))
                 (fun (_ : _) -> money_of_cents_string "798"));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/../prestations_familiales/../smic/smic.catala_fr";
                       start_line = 186;
                       start_column = 5;
                       end_line = 195;
                       end_column = 6;
                       law_headings =
                         [
                           "Article 2";
                           "Arrêté du 19 avril 2022 relatif au relèvement du \
                            salaire minimum de croissance";
                           "Montant du salaire minimum de croissance";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2022 5 1
                     && date_courante_ <=@ date_of_numbers 2022 12 31
                     && (residence_ = Collectivite.Metropole ()
                        || residence_ = Collectivite.Guadeloupe ()
                        || residence_ = Collectivite.Guyane ()
                        || residence_ = Collectivite.Martinique ()
                        || residence_ = Collectivite.LaReunion ()
                        || residence_ = Collectivite.SaintBarthelemy ()
                        || residence_ = Collectivite.SaintMartin ()
                        || residence_ = Collectivite.SaintPierreEtMiquelon ())))
                 (fun (_ : _) -> money_of_cents_string "1085"));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/../prestations_familiales/../smic/smic.catala_fr";
                       start_line = 204;
                       start_column = 5;
                       end_line = 206;
                       end_column = 6;
                       law_headings =
                         [
                           "Article 2";
                           "Arrêté du 19 avril 2022 relatif au relèvement du \
                            salaire minimum de croissance";
                           "Montant du salaire minimum de croissance";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2022 5 1
                     && date_courante_ <=@ date_of_numbers 2022 12 31
                     && residence_ = Collectivite.Mayotte ()))
                 (fun (_ : _) -> money_of_cents_string "819"));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename =
                  "examples/aides_logement/../prestations_familiales/../smic/smic.catala_fr";
                start_line = 11;
                start_column = 10;
                end_line = 11;
                end_column = 22;
                law_headings =
                  ["Prologue"; "Montant du salaire minimum de croissance"];
              }))
  in
  { SmicOut.brut_horaire_out = brut_horaire_ }

let calcul_aide_personnalisee_logement_locatif
    (calcul_aide_personnalisee_logement_locatif_in :
      CalculAidePersonnaliseeLogementLocatifIn.t) :
    CalculAidePersonnaliseeLogementLocatifOut.t =
  let loyer_principal_ : money =
    calcul_aide_personnalisee_logement_locatif_in
      .CalculAidePersonnaliseeLogementLocatifIn.loyer_principal_in
  in
  let ressources_menage_arrondies_ : money =
    calcul_aide_personnalisee_logement_locatif_in
      .CalculAidePersonnaliseeLogementLocatifIn.ressources_menage_arrondies_in
  in
  let beneficiaire_aide_adulte_ou_enfant_handicapes_ : bool =
    calcul_aide_personnalisee_logement_locatif_in
      .CalculAidePersonnaliseeLogementLocatifIn
       .beneficiaire_aide_adulte_ou_enfant_handicapes_in
  in
  let date_courante_ : date =
    calcul_aide_personnalisee_logement_locatif_in
      .CalculAidePersonnaliseeLogementLocatifIn.date_courante_in
  in
  let nombre_personnes_a_charge_ : integer =
    calcul_aide_personnalisee_logement_locatif_in
      .CalculAidePersonnaliseeLogementLocatifIn.nombre_personnes_a_charge_in
  in
  let situation_familiale_calcul_apl_ : SituationFamilialeCalculAPL.t =
    calcul_aide_personnalisee_logement_locatif_in
      .CalculAidePersonnaliseeLogementLocatifIn
       .situation_familiale_calcul_apl_in
  in
  let zone_ : ZoneDHabitation.t =
    calcul_aide_personnalisee_logement_locatif_in
      .CalculAidePersonnaliseeLogementLocatifIn.zone_in
  in
  let logement_est_chambre_ : bool =
    calcul_aide_personnalisee_logement_locatif_in
      .CalculAidePersonnaliseeLogementLocatifIn.logement_est_chambre_in
  in
  let agees_ou_handicap_adultes_hebergees_onereux_particuliers_ : bool =
    calcul_aide_personnalisee_logement_locatif_in
      .CalculAidePersonnaliseeLogementLocatifIn
       .agees_ou_handicap_adultes_hebergees_onereux_particuliers_in
  in
  let type_aide_ : TypeAidesPersonnelleLogement.t =
    calcul_aide_personnalisee_logement_locatif_in
      .CalculAidePersonnaliseeLogementLocatifIn.type_aide_in
  in
  let colocation_ : bool =
    calcul_aide_personnalisee_logement_locatif_in
      .CalculAidePersonnaliseeLogementLocatifIn.colocation_in
  in
  let reduction_loyer_solidarite_ : money =
    calcul_aide_personnalisee_logement_locatif_in
      .CalculAidePersonnaliseeLogementLocatifIn.reduction_loyer_solidarite_in
  in
  let fraction_l832_3_ : decimal =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementLocatif"; "fraction_l832_3"]
      embed_decimal
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1975;
                 start_column = 14;
                 end_line = 1975;
                 end_column = 29;
                 law_headings =
                   [
                     "Article D823-16";
                     "Sous-section 2 : Calcul de l'aide en secteur locatif";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> decimal_of_string "0.98")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 579;
                start_column = 11;
                end_line = 579;
                end_column = 26;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let montant_forfaitaire_d823_16_ : money =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementLocatif"; "montant_forfaitaire_d823_16"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 268;
                 start_column = 14;
                 end_line = 268;
                 end_column = 41;
                 law_headings =
                   [
                     "Article 11";
                     "Chapitre III : Calcul des aides personnelles au logement \
                      en secteur locatif";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) -> money_of_cents_string "500")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 582;
                start_column = 11;
                end_line = 582;
                end_column = 38;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let contributions_sociales_dot_date_courante_ : date =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogementLocatif";
          "contributions_sociales.date_courante";
        ]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 606;
                 start_column = 14;
                 end_line = 606;
                 end_column = 50;
                 law_headings =
                   [
                     "Secteur locatif";
                     "Calcul du montant de l'aide personnalisée au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 544;
             start_column = 10;
             end_line = 544;
             end_column = 23;
             law_headings =
               [
                 "Calcul des contributions sociales s'appliquant aux aides \
                  personnelles au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : ContributionsSocialesAidesPersonnelleLogementOut.t =
    log_end_call
      [
        "CalculAidePersonnaliséeLogementLocatif";
        "contributions_sociales";
        "ContributionsSocialesAidesPersonnelleLogement";
      ]
      ((log_begin_call
          [
            "CalculAidePersonnaliséeLogementLocatif";
            "contributions_sociales";
            "ContributionsSocialesAidesPersonnelleLogement";
          ]
          contributions_sociales_aides_personnelle_logement)
         {
           ContributionsSocialesAidesPersonnelleLogementIn.date_courante_in =
             contributions_sociales_dot_date_courante_;
         })
  in
  let contributions_sociales_dot_montant_ : money -> money =
    result_.ContributionsSocialesAidesPersonnelleLogementOut.montant_out
  in
  let taux_composition_familiale_ : decimal =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementLocatif"; "taux_composition_familiale"]
      embed_decimal
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default [||]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/archives.catala_fr";
                             start_line = 222;
                             start_column = 14;
                             end_line = 222;
                             end_column = 40;
                             law_headings =
                               [
                                 "Article 14";
                                 "Arrêté du 27 septembre 2019 relatif au \
                                  calcul des aides personnelles au logement et \
                                  de la prime de déménagement";
                                 "Articles valables du 1er octobre 2020 au 1er \
                                  octobre 2021";
                                 "Archives législatives et réglementaires";
                               ];
                           }
                           (date_courante_ >=@ date_of_numbers 2020 10 1
                           && date_courante_ <@ date_of_numbers 2021 10 1))
                       (fun (_ : _) ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             decimal_of_string "0.0283"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             decimal_of_string "0.0315"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then decimal_of_string "0.027"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then decimal_of_string "0.0238"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then decimal_of_string "0.0201"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then decimal_of_string "0.0185"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then decimal_of_string "0.0179"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "6"
                         then decimal_of_string "0.0173"
                         else
                           decimal_of_string "0.0173"
                           -& decimal_of_string "0.0006"
                              *& decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "6")));
                 |]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/arrete_2019-09-27.catala_fr";
                       start_line = 357;
                       start_column = 14;
                       end_line = 357;
                       end_column = 40;
                       law_headings =
                         [
                           "Article 14";
                           "Chapitre III : Calcul des aides personnelles au \
                            logement en secteur locatif";
                           "Arrêté du 27 septembre 2019 relatif au calcul des \
                            aides personnelles au logement et de la prime de \
                            déménagement";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2021 10 1))
                 (fun (_ : _) ->
                   if nombre_personnes_a_charge_ = integer_of_string "0" then
                     match situation_familiale_calcul_apl_ with
                     | SituationFamilialeCalculAPL.PersonneSeule _ ->
                       decimal_of_string "0.0283"
                     | SituationFamilialeCalculAPL.Couple _ ->
                       decimal_of_string "0.0315"
                   else if nombre_personnes_a_charge_ = integer_of_string "1"
                   then decimal_of_string "0.027"
                   else if nombre_personnes_a_charge_ = integer_of_string "2"
                   then decimal_of_string "0.0238"
                   else if nombre_personnes_a_charge_ = integer_of_string "3"
                   then decimal_of_string "0.0201"
                   else if nombre_personnes_a_charge_ = integer_of_string "4"
                   then decimal_of_string "0.0185"
                   else if nombre_personnes_a_charge_ = integer_of_string "5"
                   then decimal_of_string "0.0179"
                   else if nombre_personnes_a_charge_ = integer_of_string "6"
                   then decimal_of_string "0.0173"
                   else
                     decimal_of_string "0.0173"
                     -& decimal_of_string "0.0006"
                        *& decimal_of_integer
                             (nombre_personnes_a_charge_
                            -! integer_of_string "6")));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 590;
                start_column = 10;
                end_line = 590;
                end_column = 36;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let abattement_forfaitaire_d823_17_ : money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementLocatif";
        "abattement_forfaitaire_d823_17";
      ]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/arrete_2019-09-27.catala_fr";
                       start_line = 474;
                       start_column = 14;
                       end_line = 474;
                       end_column = 44;
                       law_headings =
                         [
                           "Article 15";
                           "Chapitre III : Calcul des aides personnelles au \
                            logement en secteur locatif";
                           "Arrêté du 27 septembre 2019 relatif au calcul des \
                            aides personnelles au logement et de la prime de \
                            déménagement";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2022 1 1))
                 (fun (_ : _) ->
                   if nombre_personnes_a_charge_ = integer_of_string "0" then
                     match situation_familiale_calcul_apl_ with
                     | SituationFamilialeCalculAPL.PersonneSeule _ ->
                       money_of_cents_string "468300"
                     | SituationFamilialeCalculAPL.Couple _ ->
                       money_of_cents_string "670900"
                   else if nombre_personnes_a_charge_ = integer_of_string "1"
                   then money_of_cents_string "800200"
                   else if nombre_personnes_a_charge_ = integer_of_string "2"
                   then money_of_cents_string "819200"
                   else if nombre_personnes_a_charge_ = integer_of_string "3"
                   then money_of_cents_string "849500"
                   else if nombre_personnes_a_charge_ = integer_of_string "4"
                   then money_of_cents_string "881100"
                   else if nombre_personnes_a_charge_ = integer_of_string "5"
                   then money_of_cents_string "912400"
                   else if nombre_personnes_a_charge_ = integer_of_string "6"
                   then money_of_cents_string "943900"
                   else
                     money_of_cents_string "943900"
                     +$ money_of_cents_string "31100"
                        *$ decimal_of_integer
                             (nombre_personnes_a_charge_
                            -! integer_of_string "6")));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename = "examples/aides_logement/archives.catala_fr";
                       start_line = 576;
                       start_column = 14;
                       end_line = 576;
                       end_column = 44;
                       law_headings =
                         [
                           "Article 15";
                           "Arrêté du 27 septembre 2019 relatif au calcul des \
                            aides personnelles au logement et de la prime de \
                            déménagement";
                           "Articles valables du 1er janvier 2020 au 1er \
                            janvier 2022";
                           "Archives législatives et réglementaires";
                         ];
                     }
                     (date_courante_ <@ date_of_numbers 2022 1 1
                     && date_courante_ >=@ date_of_numbers 2020 1 1))
                 (fun (_ : _) ->
                   if nombre_personnes_a_charge_ = integer_of_string "0" then
                     match situation_familiale_calcul_apl_ with
                     | SituationFamilialeCalculAPL.PersonneSeule _ ->
                       money_of_cents_string "458800"
                     | SituationFamilialeCalculAPL.Couple _ ->
                       money_of_cents_string "657200"
                   else if nombre_personnes_a_charge_ = integer_of_string "1"
                   then money_of_cents_string "783900"
                   else if nombre_personnes_a_charge_ = integer_of_string "2"
                   then money_of_cents_string "801500"
                   else if nombre_personnes_a_charge_ = integer_of_string "3"
                   then money_of_cents_string "832200"
                   else if nombre_personnes_a_charge_ = integer_of_string "4"
                   then money_of_cents_string "863100"
                   else if nombre_personnes_a_charge_ = integer_of_string "5"
                   then money_of_cents_string "893800"
                   else if nombre_personnes_a_charge_ = integer_of_string "6"
                   then money_of_cents_string "924600"
                   else
                     money_of_cents_string "924600"
                     +$ money_of_cents_string "30500"
                        *$ decimal_of_integer
                             (nombre_personnes_a_charge_
                            -! integer_of_string "6")));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 584;
                start_column = 11;
                end_line = 584;
                end_column = 41;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let loyer_reference_ : money =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementLocatif"; "loyer_référence"]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/arrete_2019-09-27.catala_fr";
                       start_line = 440;
                       start_column = 14;
                       end_line = 440;
                       end_column = 29;
                       law_headings =
                         [
                           "Article 14";
                           "Chapitre III : Calcul des aides personnelles au \
                            logement en secteur locatif";
                           "Arrêté du 27 septembre 2019 relatif au calcul des \
                            aides personnelles au logement et de la prime de \
                            déménagement";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2021 10 1))
                 (fun (_ : _) ->
                   if nombre_personnes_a_charge_ = integer_of_string "0" then
                     match situation_familiale_calcul_apl_ with
                     | SituationFamilialeCalculAPL.PersonneSeule _ ->
                       money_of_cents_string "25978"
                     | SituationFamilialeCalculAPL.Couple _ ->
                       money_of_cents_string "31797"
                   else
                     money_of_cents_string "35780"
                     +$ money_of_cents_string "5208"
                        *$ decimal_of_integer
                             (nombre_personnes_a_charge_
                            -! integer_of_string "1")));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename = "examples/aides_logement/archives.catala_fr";
                       start_line = 305;
                       start_column = 14;
                       end_line = 305;
                       end_column = 29;
                       law_headings =
                         [
                           "Article 14";
                           "Arrêté du 27 septembre 2019 relatif au calcul des \
                            aides personnelles au logement et de la prime de \
                            déménagement";
                           "Articles valables du 1er octobre 2020 au 1er \
                            octobre 2021";
                           "Archives législatives et réglementaires";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2020 10 1
                     && date_courante_ <@ date_of_numbers 2021 10 1))
                 (fun (_ : _) ->
                   if nombre_personnes_a_charge_ = integer_of_string "0" then
                     match situation_familiale_calcul_apl_ with
                     | SituationFamilialeCalculAPL.PersonneSeule _ ->
                       money_of_cents_string "25869"
                     | SituationFamilialeCalculAPL.Couple _ ->
                       money_of_cents_string "31664"
                   else
                     money_of_cents_string "35630"
                     +$ money_of_cents_string "5186"
                        *$ decimal_of_integer
                             (nombre_personnes_a_charge_
                            -! integer_of_string "1")));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 578;
                start_column = 11;
                end_line = 578;
                end_column = 26;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let montant_minimal_aide_d823_16_ : money =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementLocatif"; "montant_minimal_aide_d823_16"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 280;
                 start_column = 14;
                 end_line = 280;
                 end_column = 42;
                 law_headings =
                   [
                     "Article 12";
                     "Chapitre III : Calcul des aides personnelles au logement \
                      en secteur locatif";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) ->
             match type_aide_ with
             | TypeAidesPersonnelleLogement.AidePersonnaliseeLogement _ ->
               money_of_cents_string "0"
             | TypeAidesPersonnelleLogement.AllocationLogementFamiliale _ ->
               money_of_cents_string "1000"
             | TypeAidesPersonnelleLogement.AllocationLogementSociale _ ->
               money_of_cents_string "1000")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 583;
                start_column = 11;
                end_line = 583;
                end_column = 39;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let plafond_loyer_d823_16_2_ : money =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementLocatif"; "plafond_loyer_d823_16_2"]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default [||]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/arrete_2019-09-27.catala_fr";
                             start_line = 534;
                             start_column = 5;
                             end_line = 535;
                             end_column = 34;
                             law_headings =
                               [
                                 "Article 16";
                                 "Chapitre III : Calcul des aides personnelles \
                                  au logement en secteur locatif";
                                 "Arrêté du 27 septembre 2019 relatif au \
                                  calcul des aides personnelles au logement et \
                                  de la prime de déménagement";
                               ];
                           }
                           ((date_courante_ >=@ date_of_numbers 2021 10 1
                            && colocation_)
                           && (match situation_familiale_calcul_apl_ with
                              | SituationFamilialeCalculAPL.PersonneSeule _ ->
                                true
                              | SituationFamilialeCalculAPL.Couple _ -> false)
                           && nombre_personnes_a_charge_ = integer_of_string "0"
                           ))
                       (fun (_ : _) ->
                         match zone_ with
                         | ZoneDHabitation.Zone1 _ ->
                           money_of_cents_string "22355"
                         | ZoneDHabitation.Zone2 _ ->
                           money_of_cents_string "19484"
                         | ZoneDHabitation.Zone3 _ ->
                           money_of_cents_string "18261"));
                   (fun (_ : _) ->
                     handle_default [||]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/arrete_2019-09-27.catala_fr";
                             start_line = 543;
                             start_column = 5;
                             end_line = 544;
                             end_column = 34;
                             law_headings =
                               [
                                 "Article 16";
                                 "Chapitre III : Calcul des aides personnelles \
                                  au logement en secteur locatif";
                                 "Arrêté du 27 septembre 2019 relatif au \
                                  calcul des aides personnelles au logement et \
                                  de la prime de déménagement";
                               ];
                           }
                           ((date_courante_ >=@ date_of_numbers 2021 10 1
                            && colocation_)
                           && (match situation_familiale_calcul_apl_ with
                              | SituationFamilialeCalculAPL.PersonneSeule _ ->
                                false
                              | SituationFamilialeCalculAPL.Couple _ -> true)
                           && nombre_personnes_a_charge_ = integer_of_string "0"
                           ))
                       (fun (_ : _) ->
                         match zone_ with
                         | ZoneDHabitation.Zone1 _ ->
                           money_of_cents_string "26962"
                         | ZoneDHabitation.Zone2 _ ->
                           money_of_cents_string "23848"
                         | ZoneDHabitation.Zone3 _ ->
                           money_of_cents_string "22136"));
                   (fun (_ : _) ->
                     handle_default [||]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/arrete_2019-09-27.catala_fr";
                             start_line = 552;
                             start_column = 5;
                             end_line = 552;
                             end_column = 35;
                             law_headings =
                               [
                                 "Article 16";
                                 "Chapitre III : Calcul des aides personnelles \
                                  au logement en secteur locatif";
                                 "Arrêté du 27 septembre 2019 relatif au \
                                  calcul des aides personnelles au logement et \
                                  de la prime de déménagement";
                               ];
                           }
                           ((date_courante_ >=@ date_of_numbers 2021 10 1
                            && colocation_)
                           && nombre_personnes_a_charge_
                              >=! integer_of_string "1"))
                       (fun (_ : _) ->
                         match zone_ with
                         | ZoneDHabitation.Zone1 _ ->
                           money_of_cents_string "30473"
                           +$ money_of_cents_string "4421"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                         | ZoneDHabitation.Zone2 _ ->
                           money_of_cents_string "26835"
                           +$ money_of_cents_string "3906"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                         | ZoneDHabitation.Zone3 _ ->
                           money_of_cents_string "24821"
                           +$ money_of_cents_string "3557"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                   (fun (_ : _) ->
                     handle_default [||]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/archives.catala_fr";
                             start_line = 350;
                             start_column = 5;
                             end_line = 351;
                             end_column = 34;
                             law_headings =
                               [
                                 "Article 16";
                                 "Arrêté du 27 septembre 2019 relatif au \
                                  calcul des aides personnelles au logement et \
                                  de la prime de déménagement";
                                 "Articles valables du 1er octobre 2020 au 1er \
                                  octobre 2021";
                                 "Archives législatives et réglementaires";
                               ];
                           }
                           ((date_courante_ <@ date_of_numbers 2021 10 1
                            && date_courante_ >=@ date_of_numbers 2020 10 1
                            && colocation_)
                           && (match situation_familiale_calcul_apl_ with
                              | SituationFamilialeCalculAPL.PersonneSeule _ ->
                                true
                              | SituationFamilialeCalculAPL.Couple _ -> false)
                           && nombre_personnes_a_charge_ = integer_of_string "0"
                           ))
                       (fun (_ : _) ->
                         match zone_ with
                         | ZoneDHabitation.Zone1 _ ->
                           money_of_cents_string "22262"
                         | ZoneDHabitation.Zone2 _ ->
                           money_of_cents_string "19402"
                         | ZoneDHabitation.Zone3 _ ->
                           money_of_cents_string "18185"));
                   (fun (_ : _) ->
                     handle_default [||]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/archives.catala_fr";
                             start_line = 359;
                             start_column = 5;
                             end_line = 360;
                             end_column = 34;
                             law_headings =
                               [
                                 "Article 16";
                                 "Arrêté du 27 septembre 2019 relatif au \
                                  calcul des aides personnelles au logement et \
                                  de la prime de déménagement";
                                 "Articles valables du 1er octobre 2020 au 1er \
                                  octobre 2021";
                                 "Archives législatives et réglementaires";
                               ];
                           }
                           ((date_courante_ <@ date_of_numbers 2021 10 1
                            && date_courante_ >=@ date_of_numbers 2020 10 1
                            && colocation_)
                           && (match situation_familiale_calcul_apl_ with
                              | SituationFamilialeCalculAPL.PersonneSeule _ ->
                                false
                              | SituationFamilialeCalculAPL.Couple _ -> true)
                           && nombre_personnes_a_charge_ = integer_of_string "0"
                           ))
                       (fun (_ : _) ->
                         match zone_ with
                         | ZoneDHabitation.Zone1 _ ->
                           money_of_cents_string "26849"
                         | ZoneDHabitation.Zone2 _ ->
                           money_of_cents_string "23748"
                         | ZoneDHabitation.Zone3 _ ->
                           money_of_cents_string "22044"));
                   (fun (_ : _) ->
                     handle_default [||]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/archives.catala_fr";
                             start_line = 368;
                             start_column = 5;
                             end_line = 368;
                             end_column = 35;
                             law_headings =
                               [
                                 "Article 16";
                                 "Arrêté du 27 septembre 2019 relatif au \
                                  calcul des aides personnelles au logement et \
                                  de la prime de déménagement";
                                 "Articles valables du 1er octobre 2020 au 1er \
                                  octobre 2021";
                                 "Archives législatives et réglementaires";
                               ];
                           }
                           ((date_courante_ <@ date_of_numbers 2021 10 1
                            && date_courante_ >=@ date_of_numbers 2020 10 1
                            && colocation_)
                           && nombre_personnes_a_charge_
                              >=! integer_of_string "1"))
                       (fun (_ : _) ->
                         match zone_ with
                         | ZoneDHabitation.Zone1 _ ->
                           money_of_cents_string "30345"
                           +$ money_of_cents_string "4403"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                         | ZoneDHabitation.Zone2 _ ->
                           money_of_cents_string "26723"
                           +$ money_of_cents_string "3890"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                         | ZoneDHabitation.Zone3 _ ->
                           money_of_cents_string "24717"
                           +$ money_of_cents_string "3542"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 |]
                 (fun (_ : _) -> false)
                 (fun (_ : _) -> raise EmptyError));
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default
                       [|
                         (fun (_ : _) ->
                           handle_default [||]
                             (fun (_ : _) ->
                               log_decision_taken
                                 {
                                   filename =
                                     "examples/aides_logement/arrete_2019-09-27.catala_fr";
                                   start_line = 189;
                                   start_column = 5;
                                   end_line = 189;
                                   end_column = 61;
                                   law_headings =
                                     [
                                       "Article 8";
                                       "Chapitre III : Calcul des aides \
                                        personnelles au logement en secteur \
                                        locatif";
                                       "Arrêté du 27 septembre 2019 relatif au \
                                        calcul des aides personnelles au \
                                        logement et de la prime de \
                                        déménagement";
                                     ];
                                 }
                                 ((date_courante_ >=@ date_of_numbers 2021 10 1
                                  && logement_est_chambre_)
                                 && agees_ou_handicap_adultes_hebergees_onereux_particuliers_
                                 ))
                             (fun (_ : _) ->
                               match zone_ with
                               | ZoneDHabitation.Zone1 _ ->
                                 money_of_cents_string "22355"
                               | ZoneDHabitation.Zone2 _ ->
                                 money_of_cents_string "19484"
                               | ZoneDHabitation.Zone3 _ ->
                                 money_of_cents_string "18261"));
                         (fun (_ : _) ->
                           handle_default [||]
                             (fun (_ : _) ->
                               log_decision_taken
                                 {
                                   filename =
                                     "examples/aides_logement/archives.catala_fr";
                                   start_line = 128;
                                   start_column = 5;
                                   end_line = 128;
                                   end_column = 61;
                                   law_headings =
                                     [
                                       "Article 8";
                                       "Arrêté du 27 septembre 2019 relatif au \
                                        calcul des aides personnelles au \
                                        logement et de la prime de \
                                        déménagement";
                                       "Articles valables du 1er octobre 2020 \
                                        au 1er octobre 2021";
                                       "Archives législatives et réglementaires";
                                     ];
                                 }
                                 ((date_courante_ <@ date_of_numbers 2021 10 1
                                  && date_courante_
                                     >=@ date_of_numbers 2020 10 1
                                  && logement_est_chambre_)
                                 && agees_ou_handicap_adultes_hebergees_onereux_particuliers_
                                 ))
                             (fun (_ : _) ->
                               match zone_ with
                               | ZoneDHabitation.Zone1 _ ->
                                 money_of_cents_string "22262"
                               | ZoneDHabitation.Zone2 _ ->
                                 money_of_cents_string "19402"
                               | ZoneDHabitation.Zone3 _ ->
                                 money_of_cents_string "18185"));
                       |]
                       (fun (_ : _) -> false)
                       (fun (_ : _) -> raise EmptyError));
                 |]
                 (fun (_ : _) -> true)
                 (fun (_ : _) ->
                   handle_default
                     [|
                       (fun (_ : _) ->
                         handle_default [||]
                           (fun (_ : _) ->
                             log_decision_taken
                               {
                                 filename =
                                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                                 start_line = 182;
                                 start_column = 14;
                                 end_line = 182;
                                 end_column = 37;
                                 law_headings =
                                   [
                                     "Article 8";
                                     "Chapitre III : Calcul des aides \
                                      personnelles au logement en secteur \
                                      locatif";
                                     "Arrêté du 27 septembre 2019 relatif au \
                                      calcul des aides personnelles au \
                                      logement et de la prime de déménagement";
                                   ];
                               }
                               (date_courante_ >=@ date_of_numbers 2021 10 1
                               && logement_est_chambre_))
                           (fun (_ : _) ->
                             match zone_ with
                             | ZoneDHabitation.Zone1 _ ->
                               money_of_cents_string "26826"
                             | ZoneDHabitation.Zone2 _ ->
                               money_of_cents_string "23380"
                             | ZoneDHabitation.Zone3 _ ->
                               money_of_cents_string "21913"));
                       (fun (_ : _) ->
                         handle_default [||]
                           (fun (_ : _) ->
                             log_decision_taken
                               {
                                 filename =
                                   "examples/aides_logement/archives.catala_fr";
                                 start_line = 121;
                                 start_column = 14;
                                 end_line = 121;
                                 end_column = 37;
                                 law_headings =
                                   [
                                     "Article 8";
                                     "Arrêté du 27 septembre 2019 relatif au \
                                      calcul des aides personnelles au \
                                      logement et de la prime de déménagement";
                                     "Articles valables du 1er octobre 2020 au \
                                      1er octobre 2021";
                                     "Archives législatives et réglementaires";
                                   ];
                               }
                               (date_courante_ <@ date_of_numbers 2021 10 1
                               && date_courante_ >=@ date_of_numbers 2020 10 1
                               && logement_est_chambre_))
                           (fun (_ : _) ->
                             match zone_ with
                             | ZoneDHabitation.Zone1 _ ->
                               money_of_cents_string "26714"
                             | ZoneDHabitation.Zone2 _ ->
                               money_of_cents_string "23282"
                             | ZoneDHabitation.Zone3 _ ->
                               money_of_cents_string "21821"));
                     |]
                     (fun (_ : _) -> false)
                     (fun (_ : _) -> raise EmptyError)));
           |]
           (fun (_ : _) -> true)
           (fun (_ : _) ->
             handle_default
               [|
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 97;
                           start_column = 5;
                           end_line = 98;
                           end_column = 34;
                           law_headings =
                             [
                               "Article 7";
                               "Chapitre III : Calcul des aides personnelles \
                                au logement en secteur locatif";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2021 10 1
                         && (match situation_familiale_calcul_apl_ with
                            | SituationFamilialeCalculAPL.PersonneSeule _ ->
                              true
                            | SituationFamilialeCalculAPL.Couple _ -> false)
                         && nombre_personnes_a_charge_ = integer_of_string "0"))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         money_of_cents_string "29807"
                       | ZoneDHabitation.Zone2 _ ->
                         money_of_cents_string "25978"
                       | ZoneDHabitation.Zone3 _ ->
                         money_of_cents_string "24348"));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 107;
                           start_column = 5;
                           end_line = 108;
                           end_column = 34;
                           law_headings =
                             [
                               "Article 7";
                               "Chapitre III : Calcul des aides personnelles \
                                au logement en secteur locatif";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2021 10 1
                         && (match situation_familiale_calcul_apl_ with
                            | SituationFamilialeCalculAPL.PersonneSeule _ ->
                              false
                            | SituationFamilialeCalculAPL.Couple _ -> true)
                         && nombre_personnes_a_charge_ = integer_of_string "0"))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         money_of_cents_string "35949"
                       | ZoneDHabitation.Zone2 _ ->
                         money_of_cents_string "31797"
                       | ZoneDHabitation.Zone3 _ ->
                         money_of_cents_string "29515"));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 117;
                           start_column = 5;
                           end_line = 117;
                           end_column = 35;
                           law_headings =
                             [
                               "Article 7";
                               "Chapitre III : Calcul des aides personnelles \
                                au logement en secteur locatif";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2021 10 1
                         && nombre_personnes_a_charge_ >=! integer_of_string "1"
                         ))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         money_of_cents_string "40630"
                         +$ money_of_cents_string "5895"
                            *$ decimal_of_integer
                                 (nombre_personnes_a_charge_
                                -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         money_of_cents_string "35780"
                         +$ money_of_cents_string "5208"
                            *$ decimal_of_integer
                                 (nombre_personnes_a_charge_
                                -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         money_of_cents_string "33094"
                         +$ money_of_cents_string "4743"
                            *$ decimal_of_integer
                                 (nombre_personnes_a_charge_
                                -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/archives.catala_fr";
                           start_line = 37;
                           start_column = 5;
                           end_line = 38;
                           end_column = 34;
                           law_headings =
                             [
                               "Article 7";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                               "Articles valables du 1er octobre 2020 au 1er \
                                octobre 2021";
                               "Archives législatives et réglementaires";
                             ];
                         }
                         ((date_courante_ <@ date_of_numbers 2021 10 1
                          && date_courante_ >=@ date_of_numbers 2020 10 1)
                         && (match situation_familiale_calcul_apl_ with
                            | SituationFamilialeCalculAPL.PersonneSeule _ ->
                              true
                            | SituationFamilialeCalculAPL.Couple _ -> false)
                         && nombre_personnes_a_charge_ = integer_of_string "0"))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         money_of_cents_string "29682"
                       | ZoneDHabitation.Zone2 _ ->
                         money_of_cents_string "25859"
                       | ZoneDHabitation.Zone3 _ ->
                         money_of_cents_string "24246"));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/archives.catala_fr";
                           start_line = 47;
                           start_column = 5;
                           end_line = 48;
                           end_column = 34;
                           law_headings =
                             [
                               "Article 7";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                               "Articles valables du 1er octobre 2020 au 1er \
                                octobre 2021";
                               "Archives législatives et réglementaires";
                             ];
                         }
                         ((date_courante_ <@ date_of_numbers 2021 10 1
                          && date_courante_ >=@ date_of_numbers 2020 10 1)
                         && (match situation_familiale_calcul_apl_ with
                            | SituationFamilialeCalculAPL.PersonneSeule _ ->
                              false
                            | SituationFamilialeCalculAPL.Couple _ -> true)
                         && nombre_personnes_a_charge_ = integer_of_string "0"))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         money_of_cents_string "35799"
                       | ZoneDHabitation.Zone2 _ ->
                         money_of_cents_string "31664"
                       | ZoneDHabitation.Zone3 _ ->
                         money_of_cents_string "29392"));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/archives.catala_fr";
                           start_line = 57;
                           start_column = 5;
                           end_line = 57;
                           end_column = 35;
                           law_headings =
                             [
                               "Article 7";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                               "Articles valables du 1er octobre 2020 au 1er \
                                octobre 2021";
                               "Archives législatives et réglementaires";
                             ];
                         }
                         ((date_courante_ <@ date_of_numbers 2021 10 1
                          && date_courante_ >=@ date_of_numbers 2020 10 1)
                         && nombre_personnes_a_charge_ >=! integer_of_string "1"
                         ))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         money_of_cents_string "40460"
                         +$ money_of_cents_string "5870"
                            *$ decimal_of_integer
                                 (nombre_personnes_a_charge_
                                -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         money_of_cents_string "35630"
                         +$ money_of_cents_string "5186"
                            *$ decimal_of_integer
                                 (nombre_personnes_a_charge_
                                -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         money_of_cents_string "32956"
                         +$ money_of_cents_string "4723"
                            *$ decimal_of_integer
                                 (nombre_personnes_a_charge_
                                -! integer_of_string "1")));
               |]
               (fun (_ : _) -> false)
               (fun (_ : _) -> raise EmptyError))
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 588;
                start_column = 10;
                end_line = 588;
                end_column = 33;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let montant_forfaitaire_charges_d823_16_ : money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementLocatif";
        "montant_forfaitaire_charges_d823_16";
      ]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/arrete_2019-09-27.catala_fr";
                       start_line = 224;
                       start_column = 14;
                       end_line = 224;
                       end_column = 49;
                       law_headings =
                         [
                           "Article 9";
                           "Chapitre III : Calcul des aides personnelles au \
                            logement en secteur locatif";
                           "Arrêté du 27 septembre 2019 relatif au calcul des \
                            aides personnelles au logement et de la prime de \
                            déménagement";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2021 10 1))
                 (fun (_ : _) ->
                   money_of_cents_string "5422"
                   +$ money_of_cents_string "1229"
                      *$ decimal_of_integer nombre_personnes_a_charge_));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/arrete_2019-09-27.catala_fr";
                       start_line = 577;
                       start_column = 14;
                       end_line = 577;
                       end_column = 49;
                       law_headings =
                         [
                           "Article 16";
                           "Chapitre III : Calcul des aides personnelles au \
                            logement en secteur locatif";
                           "Arrêté du 27 septembre 2019 relatif au calcul des \
                            aides personnelles au logement et de la prime de \
                            déménagement";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2021 10 1
                     && colocation_))
                 (fun (_ : _) ->
                   (match situation_familiale_calcul_apl_ with
                   | SituationFamilialeCalculAPL.PersonneSeule _ ->
                     money_of_cents_string "2710"
                   | SituationFamilialeCalculAPL.Couple _ ->
                     money_of_cents_string "5422")
                   +$ money_of_cents_string "1229"
                      *$ decimal_of_integer nombre_personnes_a_charge_));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename = "examples/aides_logement/archives.catala_fr";
                       start_line = 163;
                       start_column = 14;
                       end_line = 163;
                       end_column = 49;
                       law_headings =
                         [
                           "Article 9";
                           "Arrêté du 27 septembre 2019 relatif au calcul des \
                            aides personnelles au logement et de la prime de \
                            déménagement";
                           "Articles valables du 1er octobre 2020 au 1er \
                            octobre 2021";
                           "Archives législatives et réglementaires";
                         ];
                     }
                     (date_courante_ <@ date_of_numbers 2021 10 1
                     && date_courante_ >=@ date_of_numbers 2020 10 1))
                 (fun (_ : _) ->
                   money_of_cents_string "5399"
                   +$ money_of_cents_string "1224"
                      *$ decimal_of_integer nombre_personnes_a_charge_));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename = "examples/aides_logement/archives.catala_fr";
                       start_line = 394;
                       start_column = 14;
                       end_line = 394;
                       end_column = 49;
                       law_headings =
                         [
                           "Article 16";
                           "Arrêté du 27 septembre 2019 relatif au calcul des \
                            aides personnelles au logement et de la prime de \
                            déménagement";
                           "Articles valables du 1er octobre 2020 au 1er \
                            octobre 2021";
                           "Archives législatives et réglementaires";
                         ];
                     }
                     (date_courante_ <@ date_of_numbers 2021 10 1
                     && date_courante_ >=@ date_of_numbers 2020 10 1
                     && colocation_))
                 (fun (_ : _) ->
                   (match situation_familiale_calcul_apl_ with
                   | SituationFamilialeCalculAPL.PersonneSeule _ ->
                     money_of_cents_string "2699"
                   | SituationFamilialeCalculAPL.Couple _ ->
                     money_of_cents_string "5399")
                   +$ money_of_cents_string "1224"
                      *$ decimal_of_integer nombre_personnes_a_charge_));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 587;
                start_column = 10;
                end_line = 587;
                end_column = 45;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let plafond_suppression_d823_16_ : money =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementLocatif"; "plafond_suppression_d823_16"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 253;
                 start_column = 14;
                 end_line = 253;
                 end_column = 41;
                 law_headings =
                   [
                     "Article 10";
                     "Chapitre III : Calcul des aides personnelles au logement \
                      en secteur locatif";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) ->
             match zone_ with
             | ZoneDHabitation.Zone1 _ ->
               plafond_loyer_d823_16_2_ *$ decimal_of_string "4."
             | ZoneDHabitation.Zone2 _ ->
               plafond_loyer_d823_16_2_ *$ decimal_of_string "3.1"
             | ZoneDHabitation.Zone3 _ ->
               plafond_loyer_d823_16_2_ *$ decimal_of_string "3.1")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 581;
                start_column = 11;
                end_line = 581;
                end_column = 38;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let plafond_degressivite_d823_16_ : money =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementLocatif"; "plafond_dégressivité_d823_16"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 247;
                 start_column = 14;
                 end_line = 247;
                 end_column = 42;
                 law_headings =
                   [
                     "Article 10";
                     "Chapitre III : Calcul des aides personnelles au logement \
                      en secteur locatif";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) ->
             match zone_ with
             | ZoneDHabitation.Zone1 _ ->
               plafond_loyer_d823_16_2_ *$ decimal_of_string "3.4"
             | ZoneDHabitation.Zone2 _ ->
               plafond_loyer_d823_16_2_ *$ decimal_of_string "2.5"
             | ZoneDHabitation.Zone3 _ ->
               plafond_loyer_d823_16_2_ *$ decimal_of_string "2.5")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 580;
                start_column = 11;
                end_line = 580;
                end_column = 39;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let loyer_eligible_ : money =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementLocatif"; "loyer_éligible"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1880;
                 start_column = 14;
                 end_line = 1880;
                 end_column = 28;
                 law_headings =
                   [
                     "Article D823-16";
                     "Sous-section 2 : Calcul de l'aide en secteur locatif";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             if loyer_principal_ >$ plafond_loyer_d823_16_2_ then
               plafond_loyer_d823_16_2_
             else loyer_principal_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 573;
                start_column = 11;
                end_line = 573;
                end_column = 25;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let traitement_aide_finale_diminue_ : money -> money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementLocatif";
        "traitement_aide_finale_diminué";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default
               [|
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/code_construction_reglementaire.catala_fr";
                           start_line = 1926;
                           start_column = 5;
                           end_line = 1926;
                           end_column = 50;
                           law_headings =
                             [
                               "Article D823-16";
                               "Sous-section 2 : Calcul de l'aide en secteur \
                                locatif";
                               "Section 1 : Calcul, liquidation et versement \
                                des aides";
                               "Chapitre III : Modalités de liquidation et de \
                                versement";
                               "Titre II : Dispositions communes aux aides \
                                personnelles au logement";
                               "Livre VIII : Aides personnelles au logement";
                               "Partie réglementaire";
                               "Code de la construction et de l'habitation";
                             ];
                         }
                         beneficiaire_aide_adulte_ou_enfant_handicapes_)
                     (fun (_ : _) -> param_));
               |]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 1914;
                     start_column = 14;
                     end_line = 1914;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D823-16";
                         "Sous-section 2 : Calcul de l'aide en secteur locatif";
                         "Section 1 : Calcul, liquidation et versement des \
                          aides";
                         "Chapitre III : Modalités de liquidation et de \
                          versement";
                         "Titre II : Dispositions communes aux aides \
                          personnelles au logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if loyer_principal_ >$ plafond_suppression_d823_16_ then
                   money_of_cents_string "0"
                 else if loyer_principal_ >$ plafond_degressivite_d823_16_ then
                   param_
                   -$ param_
                      *$ ((loyer_principal_ -$ plafond_degressivite_d823_16_)
                         /$ (plafond_suppression_d823_16_
                           -$ plafond_degressivite_d823_16_))
                 else param_)
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 599;
                    start_column = 10;
                    end_line = 599;
                    end_column = 17;
                    law_headings =
                      [
                        "Secteur locatif";
                        "Calcul du montant de l'aide personnalisée au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 599;
                start_column = 10;
                end_line = 599;
                end_column = 17;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let participation_minimale_ : money =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementLocatif"; "participation_minimale"]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/arrete_2019-09-27.catala_fr";
                       start_line = 296;
                       start_column = 14;
                       end_line = 296;
                       end_column = 36;
                       law_headings =
                         [
                           "Article 13";
                           "Chapitre III : Calcul des aides personnelles au \
                            logement en secteur locatif";
                           "Arrêté du 27 septembre 2019 relatif au calcul des \
                            aides personnelles au logement et de la prime de \
                            déménagement";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2021 10 1))
                 (fun (_ : _) ->
                   if
                     (loyer_eligible_ +$ montant_forfaitaire_charges_d823_16_)
                     *$ decimal_of_string "0.085"
                     >=$ money_of_cents_string "3539"
                   then
                     (loyer_eligible_ +$ montant_forfaitaire_charges_d823_16_)
                     *$ decimal_of_string "0.085"
                   else money_of_cents_string "3539"));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename = "examples/aides_logement/archives.catala_fr";
                       start_line = 177;
                       start_column = 14;
                       end_line = 177;
                       end_column = 36;
                       law_headings =
                         [
                           "Article 13";
                           "Arrêté du 27 septembre 2019 relatif au calcul des \
                            aides personnelles au logement et de la prime de \
                            déménagement";
                           "Articles valables du 1er octobre 2020 au 1er \
                            octobre 2021";
                           "Archives législatives et réglementaires";
                         ];
                     }
                     (date_courante_ <@ date_of_numbers 2021 10 1
                     && date_courante_ >=@ date_of_numbers 2020 10 1))
                 (fun (_ : _) ->
                   if
                     (loyer_eligible_ +$ montant_forfaitaire_charges_d823_16_)
                     *$ decimal_of_string "0.085"
                     >=$ money_of_cents_string "3524"
                   then
                     (loyer_eligible_ +$ montant_forfaitaire_charges_d823_16_)
                     *$ decimal_of_string "0.085"
                   else money_of_cents_string "3524"));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 589;
                start_column = 10;
                end_line = 589;
                end_column = 32;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let rapport_loyers_ : decimal =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementLocatif"; "rapport_loyers"]
      embed_decimal
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default [||]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/archives.catala_fr";
                             start_line = 256;
                             start_column = 14;
                             end_line = 256;
                             end_column = 28;
                             law_headings =
                               [
                                 "Article 14";
                                 "Arrêté du 27 septembre 2019 relatif au \
                                  calcul des aides personnelles au logement et \
                                  de la prime de déménagement";
                                 "Articles valables du 1er octobre 2020 au 1er \
                                  octobre 2021";
                                 "Archives législatives et réglementaires";
                               ];
                           }
                           (date_courante_ >=@ date_of_numbers 2020 10 1
                           && date_courante_ <@ date_of_numbers 2021 10 1))
                       (fun (_ : _) ->
                         decimal_round
                           (loyer_eligible_ /$ loyer_reference_
                          *& decimal_of_string "100.")
                         /& decimal_of_string "100."));
                 |]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/arrete_2019-09-27.catala_fr";
                       start_line = 390;
                       start_column = 14;
                       end_line = 390;
                       end_column = 28;
                       law_headings =
                         [
                           "Article 14";
                           "Chapitre III : Calcul des aides personnelles au \
                            logement en secteur locatif";
                           "Arrêté du 27 septembre 2019 relatif au calcul des \
                            aides personnelles au logement et de la prime de \
                            déménagement";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2021 10 1))
                 (fun (_ : _) ->
                   decimal_round
                     (loyer_eligible_ /$ loyer_reference_
                    *& decimal_of_string "100.")
                   /& decimal_of_string "100."));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 577;
                start_column = 11;
                end_line = 577;
                end_column = 25;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let traitement_aide_finale_minoration_forfaitaire_ : money -> money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementLocatif";
        "traitement_aide_finale_minoration_forfaitaire";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 1936;
                     start_column = 14;
                     end_line = 1936;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D823-16";
                         "Sous-section 2 : Calcul de l'aide en secteur locatif";
                         "Section 1 : Calcul, liquidation et versement des \
                          aides";
                         "Chapitre III : Modalités de liquidation et de \
                          versement";
                         "Titre II : Dispositions communes aux aides \
                          personnelles au logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   log_end_call
                     [
                       "CalculAidePersonnaliséeLogementLocatif";
                       "traitement_aide_finale_diminué";
                     ]
                     (log_variable_definition
                        [
                          "CalculAidePersonnaliséeLogementLocatif";
                          "traitement_aide_finale_diminué";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAidePersonnaliséeLogementLocatif";
                              "traitement_aide_finale_diminué";
                            ]
                            traitement_aide_finale_diminue_)
                           (log_variable_definition
                              [
                                "CalculAidePersonnaliséeLogementLocatif";
                                "traitement_aide_finale_diminué";
                                "input";
                              ]
                              embed_money param_)))
                   -$ montant_forfaitaire_d823_16_
                   >=$ money_of_cents_string "0"
                 then
                   log_end_call
                     [
                       "CalculAidePersonnaliséeLogementLocatif";
                       "traitement_aide_finale_diminué";
                     ]
                     (log_variable_definition
                        [
                          "CalculAidePersonnaliséeLogementLocatif";
                          "traitement_aide_finale_diminué";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAidePersonnaliséeLogementLocatif";
                              "traitement_aide_finale_diminué";
                            ]
                            traitement_aide_finale_diminue_)
                           (log_variable_definition
                              [
                                "CalculAidePersonnaliséeLogementLocatif";
                                "traitement_aide_finale_diminué";
                                "input";
                              ]
                              embed_money param_)))
                   -$ montant_forfaitaire_d823_16_
                 else money_of_cents_string "0")
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 600;
                    start_column = 10;
                    end_line = 600;
                    end_column = 32;
                    law_headings =
                      [
                        "Secteur locatif";
                        "Calcul du montant de l'aide personnalisée au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 600;
                start_column = 10;
                end_line = 600;
                end_column = 32;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let taux_loyer_eligible_formule_ : decimal =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementLocatif"; "taux_loyer_éligible_formule"]
      embed_decimal
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default [||]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/archives.catala_fr";
                             start_line = 280;
                             start_column = 14;
                             end_line = 280;
                             end_column = 33;
                             law_headings =
                               [
                                 "Article 14";
                                 "Arrêté du 27 septembre 2019 relatif au \
                                  calcul des aides personnelles au logement et \
                                  de la prime de déménagement";
                                 "Articles valables du 1er octobre 2020 au 1er \
                                  octobre 2021";
                                 "Archives législatives et réglementaires";
                               ];
                           }
                           (date_courante_ >=@ date_of_numbers 2020 10 1
                           && date_courante_ <@ date_of_numbers 2021 10 1))
                       (fun (_ : _) ->
                         if rapport_loyers_ <& decimal_of_string "0.45" then
                           decimal_of_string "0."
                         else if
                           rapport_loyers_ >=& decimal_of_string "0.45"
                           && rapport_loyers_ <& decimal_of_string "0.75"
                         then
                           decimal_of_string "0.0045"
                           *& (rapport_loyers_ -& decimal_of_string "0.0045")
                         else if rapport_loyers_ >=& decimal_of_string "0.75"
                         then
                           decimal_of_string "0.0045" *& decimal_of_string "0.3"
                           +& decimal_of_string "0.0068"
                              *& (rapport_loyers_ -& decimal_of_string "0.75")
                         else decimal_of_string "0."));
                 |]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/arrete_2019-09-27.catala_fr";
                       start_line = 416;
                       start_column = 14;
                       end_line = 416;
                       end_column = 33;
                       law_headings =
                         [
                           "Article 14";
                           "Chapitre III : Calcul des aides personnelles au \
                            logement en secteur locatif";
                           "Arrêté du 27 septembre 2019 relatif au calcul des \
                            aides personnelles au logement et de la prime de \
                            déménagement";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2021 10 1))
                 (fun (_ : _) ->
                   if rapport_loyers_ <& decimal_of_string "0.45" then
                     decimal_of_string "0."
                   else if
                     rapport_loyers_ >=& decimal_of_string "0.45"
                     && rapport_loyers_ <& decimal_of_string "0.75"
                   then
                     decimal_of_string "0.0045"
                     *& (rapport_loyers_ -& decimal_of_string "0.0045")
                   else if rapport_loyers_ >=& decimal_of_string "0.75" then
                     (decimal_of_string "0.0045" *& decimal_of_string "0.3")
                     +& decimal_of_string "0.0068"
                        *& (rapport_loyers_ -& decimal_of_string "0.75")
                   else decimal_of_string "0."));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 575;
                start_column = 10;
                end_line = 575;
                end_column = 17;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let traitement_aide_finale_contributions_sociales_arrondi_ : money -> money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementLocatif";
        "traitement_aide_finale_contributions_sociales_arrondi";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 1951;
                     start_column = 14;
                     end_line = 1951;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D823-16";
                         "Sous-section 2 : Calcul de l'aide en secteur locatif";
                         "Section 1 : Calcul, liquidation et versement des \
                          aides";
                         "Chapitre III : Modalités de liquidation et de \
                          versement";
                         "Titre II : Dispositions communes aux aides \
                          personnelles au logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   money_round
                     (log_end_call
                        [
                          "CalculAidePersonnaliséeLogementLocatif";
                          "traitement_aide_finale_minoration_forfaitaire";
                        ]
                        (log_variable_definition
                           [
                             "CalculAidePersonnaliséeLogementLocatif";
                             "traitement_aide_finale_minoration_forfaitaire";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "CalculAidePersonnaliséeLogementLocatif";
                                 "traitement_aide_finale_minoration_forfaitaire";
                               ]
                               traitement_aide_finale_minoration_forfaitaire_)
                              (log_variable_definition
                                 [
                                   "CalculAidePersonnaliséeLogementLocatif";
                                   "traitement_aide_finale_minoration_forfaitaire";
                                   "input";
                                 ]
                                 embed_money param_)))
                     -$ log_end_call
                          [
                            "ContributionsSocialesAidesPersonnelleLogement";
                            "montant";
                          ]
                          (log_variable_definition
                             [
                               "ContributionsSocialesAidesPersonnelleLogement";
                               "montant";
                               "output";
                             ]
                             embed_money
                             ((log_begin_call
                                 [
                                   "ContributionsSocialesAidesPersonnelleLogement";
                                   "montant";
                                 ]
                                 contributions_sociales_dot_montant_)
                                (log_variable_definition
                                   [
                                     "ContributionsSocialesAidesPersonnelleLogement";
                                     "montant";
                                     "input";
                                   ]
                                   embed_money
                                   (log_end_call
                                      [
                                        "CalculAidePersonnaliséeLogementLocatif";
                                        "traitement_aide_finale_minoration_forfaitaire";
                                      ]
                                      (log_variable_definition
                                         [
                                           "CalculAidePersonnaliséeLogementLocatif";
                                           "traitement_aide_finale_minoration_forfaitaire";
                                           "output";
                                         ]
                                         embed_money
                                         ((log_begin_call
                                             [
                                               "CalculAidePersonnaliséeLogementLocatif";
                                               "traitement_aide_finale_minoration_forfaitaire";
                                             ]
                                             traitement_aide_finale_minoration_forfaitaire_)
                                            (log_variable_definition
                                               [
                                                 "CalculAidePersonnaliséeLogementLocatif";
                                                 "traitement_aide_finale_minoration_forfaitaire";
                                                 "input";
                                               ]
                                               embed_money param_)))))))
                     -$ money_of_cents_string "50")
                   +$ log_end_call
                        [
                          "ContributionsSocialesAidesPersonnelleLogement";
                          "montant";
                        ]
                        (log_variable_definition
                           [
                             "ContributionsSocialesAidesPersonnelleLogement";
                             "montant";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "ContributionsSocialesAidesPersonnelleLogement";
                                 "montant";
                               ]
                               contributions_sociales_dot_montant_)
                              (log_variable_definition
                                 [
                                   "ContributionsSocialesAidesPersonnelleLogement";
                                   "montant";
                                   "input";
                                 ]
                                 embed_money
                                 (log_end_call
                                    [
                                      "CalculAidePersonnaliséeLogementLocatif";
                                      "traitement_aide_finale_minoration_forfaitaire";
                                    ]
                                    (log_variable_definition
                                       [
                                         "CalculAidePersonnaliséeLogementLocatif";
                                         "traitement_aide_finale_minoration_forfaitaire";
                                         "output";
                                       ]
                                       embed_money
                                       ((log_begin_call
                                           [
                                             "CalculAidePersonnaliséeLogementLocatif";
                                             "traitement_aide_finale_minoration_forfaitaire";
                                           ]
                                           traitement_aide_finale_minoration_forfaitaire_)
                                          (log_variable_definition
                                             [
                                               "CalculAidePersonnaliséeLogementLocatif";
                                               "traitement_aide_finale_minoration_forfaitaire";
                                               "input";
                                             ]
                                             embed_money param_)))))))
                   >=$ money_of_cents_string "0"
                 then
                   money_round
                     (log_end_call
                        [
                          "CalculAidePersonnaliséeLogementLocatif";
                          "traitement_aide_finale_minoration_forfaitaire";
                        ]
                        (log_variable_definition
                           [
                             "CalculAidePersonnaliséeLogementLocatif";
                             "traitement_aide_finale_minoration_forfaitaire";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "CalculAidePersonnaliséeLogementLocatif";
                                 "traitement_aide_finale_minoration_forfaitaire";
                               ]
                               traitement_aide_finale_minoration_forfaitaire_)
                              (log_variable_definition
                                 [
                                   "CalculAidePersonnaliséeLogementLocatif";
                                   "traitement_aide_finale_minoration_forfaitaire";
                                   "input";
                                 ]
                                 embed_money param_)))
                     -$ log_end_call
                          [
                            "ContributionsSocialesAidesPersonnelleLogement";
                            "montant";
                          ]
                          (log_variable_definition
                             [
                               "ContributionsSocialesAidesPersonnelleLogement";
                               "montant";
                               "output";
                             ]
                             embed_money
                             ((log_begin_call
                                 [
                                   "ContributionsSocialesAidesPersonnelleLogement";
                                   "montant";
                                 ]
                                 contributions_sociales_dot_montant_)
                                (log_variable_definition
                                   [
                                     "ContributionsSocialesAidesPersonnelleLogement";
                                     "montant";
                                     "input";
                                   ]
                                   embed_money
                                   (log_end_call
                                      [
                                        "CalculAidePersonnaliséeLogementLocatif";
                                        "traitement_aide_finale_minoration_forfaitaire";
                                      ]
                                      (log_variable_definition
                                         [
                                           "CalculAidePersonnaliséeLogementLocatif";
                                           "traitement_aide_finale_minoration_forfaitaire";
                                           "output";
                                         ]
                                         embed_money
                                         ((log_begin_call
                                             [
                                               "CalculAidePersonnaliséeLogementLocatif";
                                               "traitement_aide_finale_minoration_forfaitaire";
                                             ]
                                             traitement_aide_finale_minoration_forfaitaire_)
                                            (log_variable_definition
                                               [
                                                 "CalculAidePersonnaliséeLogementLocatif";
                                                 "traitement_aide_finale_minoration_forfaitaire";
                                                 "input";
                                               ]
                                               embed_money param_)))))))
                     -$ money_of_cents_string "50")
                   +$ log_end_call
                        [
                          "ContributionsSocialesAidesPersonnelleLogement";
                          "montant";
                        ]
                        (log_variable_definition
                           [
                             "ContributionsSocialesAidesPersonnelleLogement";
                             "montant";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "ContributionsSocialesAidesPersonnelleLogement";
                                 "montant";
                               ]
                               contributions_sociales_dot_montant_)
                              (log_variable_definition
                                 [
                                   "ContributionsSocialesAidesPersonnelleLogement";
                                   "montant";
                                   "input";
                                 ]
                                 embed_money
                                 (log_end_call
                                    [
                                      "CalculAidePersonnaliséeLogementLocatif";
                                      "traitement_aide_finale_minoration_forfaitaire";
                                    ]
                                    (log_variable_definition
                                       [
                                         "CalculAidePersonnaliséeLogementLocatif";
                                         "traitement_aide_finale_minoration_forfaitaire";
                                         "output";
                                       ]
                                       embed_money
                                       ((log_begin_call
                                           [
                                             "CalculAidePersonnaliséeLogementLocatif";
                                             "traitement_aide_finale_minoration_forfaitaire";
                                           ]
                                           traitement_aide_finale_minoration_forfaitaire_)
                                          (log_variable_definition
                                             [
                                               "CalculAidePersonnaliséeLogementLocatif";
                                               "traitement_aide_finale_minoration_forfaitaire";
                                               "input";
                                             ]
                                             embed_money param_)))))))
                 else money_of_cents_string "0")
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 601;
                    start_column = 10;
                    end_line = 601;
                    end_column = 40;
                    law_headings =
                      [
                        "Secteur locatif";
                        "Calcul du montant de l'aide personnalisée au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 601;
                start_column = 10;
                end_line = 601;
                end_column = 40;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let taux_loyer_eligible_arrondi_ : decimal =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementLocatif"; "taux_loyer_éligible_arrondi"]
      embed_decimal
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default [||]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/archives.catala_fr";
                             start_line = 287;
                             start_column = 14;
                             end_line = 287;
                             end_column = 33;
                             law_headings =
                               [
                                 "Article 14";
                                 "Arrêté du 27 septembre 2019 relatif au \
                                  calcul des aides personnelles au logement et \
                                  de la prime de déménagement";
                                 "Articles valables du 1er octobre 2020 au 1er \
                                  octobre 2021";
                                 "Archives législatives et réglementaires";
                               ];
                           }
                           (date_courante_ >=@ date_of_numbers 2020 10 1
                           && date_courante_ <@ date_of_numbers 2021 10 1))
                       (fun (_ : _) ->
                         decimal_round
                           (taux_loyer_eligible_formule_
                           *& decimal_of_string "100000.")
                         /& decimal_of_string "100000."));
                 |]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/arrete_2019-09-27.catala_fr";
                       start_line = 423;
                       start_column = 14;
                       end_line = 423;
                       end_column = 33;
                       law_headings =
                         [
                           "Article 14";
                           "Chapitre III : Calcul des aides personnelles au \
                            logement en secteur locatif";
                           "Arrêté du 27 septembre 2019 relatif au calcul des \
                            aides personnelles au logement et de la prime de \
                            déménagement";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2021 10 1))
                 (fun (_ : _) ->
                   decimal_round
                     (taux_loyer_eligible_formule_
                     *& decimal_of_string "100000.")
                   /& decimal_of_string "100000."));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 576;
                start_column = 10;
                end_line = 576;
                end_column = 17;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let traitement_aide_finale_reduction_loyer_solidarite_ : money -> money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementLocatif";
        "traitement_aide_finale_réduction_loyer_solidarité";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_legislatif.catala_fr";
                     start_line = 823;
                     start_column = 14;
                     end_line = 823;
                     end_column = 36;
                     law_headings =
                       [
                         "Article L832-3";
                         "Chapitre Ier : Champ d'application";
                         "Titre III : Aide personnalisée au logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie législative";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   log_end_call
                     [
                       "CalculAidePersonnaliséeLogementLocatif";
                       "traitement_aide_finale_contributions_sociales_arrondi";
                     ]
                     (log_variable_definition
                        [
                          "CalculAidePersonnaliséeLogementLocatif";
                          "traitement_aide_finale_contributions_sociales_arrondi";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAidePersonnaliséeLogementLocatif";
                              "traitement_aide_finale_contributions_sociales_arrondi";
                            ]
                            traitement_aide_finale_contributions_sociales_arrondi_)
                           (log_variable_definition
                              [
                                "CalculAidePersonnaliséeLogementLocatif";
                                "traitement_aide_finale_contributions_sociales_arrondi";
                                "input";
                              ]
                              embed_money param_)))
                   -$ (reduction_loyer_solidarite_ *$ fraction_l832_3_)
                   >=$ money_of_cents_string "0"
                 then
                   log_end_call
                     [
                       "CalculAidePersonnaliséeLogementLocatif";
                       "traitement_aide_finale_contributions_sociales_arrondi";
                     ]
                     (log_variable_definition
                        [
                          "CalculAidePersonnaliséeLogementLocatif";
                          "traitement_aide_finale_contributions_sociales_arrondi";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAidePersonnaliséeLogementLocatif";
                              "traitement_aide_finale_contributions_sociales_arrondi";
                            ]
                            traitement_aide_finale_contributions_sociales_arrondi_)
                           (log_variable_definition
                              [
                                "CalculAidePersonnaliséeLogementLocatif";
                                "traitement_aide_finale_contributions_sociales_arrondi";
                                "input";
                              ]
                              embed_money param_)))
                   -$ (reduction_loyer_solidarite_ *$ fraction_l832_3_)
                 else money_of_cents_string "0")
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 602;
                    start_column = 10;
                    end_line = 602;
                    end_column = 36;
                    law_headings =
                      [
                        "Secteur locatif";
                        "Calcul du montant de l'aide personnalisée au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 602;
                start_column = 10;
                end_line = 602;
                end_column = 36;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let taux_prise_compte_ressources_ : decimal =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementLocatif"; "taux_prise_compte_ressources"]
      embed_decimal
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 2032;
                 start_column = 14;
                 end_line = 2032;
                 end_column = 42;
                 law_headings =
                   [
                     "Article D823-17";
                     "Sous-section 2 : Calcul de l'aide en secteur locatif";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             taux_composition_familiale_ +& taux_loyer_eligible_arrondi_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 585;
                start_column = 11;
                end_line = 585;
                end_column = 39;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let traitement_aide_finale_montant_minimal_ : money -> money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementLocatif";
        "traitement_aide_finale_montant_minimal";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 1984;
                     start_column = 14;
                     end_line = 1984;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D823-16";
                         "Sous-section 2 : Calcul de l'aide en secteur locatif";
                         "Section 1 : Calcul, liquidation et versement des \
                          aides";
                         "Chapitre III : Modalités de liquidation et de \
                          versement";
                         "Titre II : Dispositions communes aux aides \
                          personnelles au logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   log_end_call
                     [
                       "CalculAidePersonnaliséeLogementLocatif";
                       "traitement_aide_finale_réduction_loyer_solidarité";
                     ]
                     (log_variable_definition
                        [
                          "CalculAidePersonnaliséeLogementLocatif";
                          "traitement_aide_finale_réduction_loyer_solidarité";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAidePersonnaliséeLogementLocatif";
                              "traitement_aide_finale_réduction_loyer_solidarité";
                            ]
                            traitement_aide_finale_reduction_loyer_solidarite_)
                           (log_variable_definition
                              [
                                "CalculAidePersonnaliséeLogementLocatif";
                                "traitement_aide_finale_réduction_loyer_solidarité";
                                "input";
                              ]
                              embed_money param_)))
                   <$ montant_minimal_aide_d823_16_
                 then money_of_cents_string "0"
                 else
                   log_end_call
                     [
                       "CalculAidePersonnaliséeLogementLocatif";
                       "traitement_aide_finale_réduction_loyer_solidarité";
                     ]
                     (log_variable_definition
                        [
                          "CalculAidePersonnaliséeLogementLocatif";
                          "traitement_aide_finale_réduction_loyer_solidarité";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAidePersonnaliséeLogementLocatif";
                              "traitement_aide_finale_réduction_loyer_solidarité";
                            ]
                            traitement_aide_finale_reduction_loyer_solidarite_)
                           (log_variable_definition
                              [
                                "CalculAidePersonnaliséeLogementLocatif";
                                "traitement_aide_finale_réduction_loyer_solidarité";
                                "input";
                              ]
                              embed_money param_))))
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 603;
                    start_column = 10;
                    end_line = 603;
                    end_column = 25;
                    law_headings =
                      [
                        "Secteur locatif";
                        "Calcul du montant de l'aide personnalisée au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 603;
                start_column = 10;
                end_line = 603;
                end_column = 25;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let participation_personnelle_ : money =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementLocatif"; "participation_personnelle"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 2003;
                 start_column = 14;
                 end_line = 2003;
                 end_column = 39;
                 law_headings =
                   [
                     "Article D823-17";
                     "Sous-section 2 : Calcul de l'aide en secteur locatif";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             participation_minimale_
             +$ (ressources_menage_arrondies_ -$ abattement_forfaitaire_d823_17_)
                *$ taux_prise_compte_ressources_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 591;
                start_column = 10;
                end_line = 591;
                end_column = 35;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let aide_finale_formule_ : money =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementLocatif"; "aide_finale_formule"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1862;
                 start_column = 14;
                 end_line = 1862;
                 end_column = 33;
                 law_headings =
                   [
                     "Article D823-16";
                     "Sous-section 2 : Calcul de l'aide en secteur locatif";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             if
               loyer_eligible_ +$ montant_forfaitaire_charges_d823_16_
               -$ participation_personnelle_
               <$ money_of_cents_string "0"
             then money_of_cents_string "0"
             else
               loyer_eligible_ +$ montant_forfaitaire_charges_d823_16_
               -$ participation_personnelle_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 596;
                start_column = 10;
                end_line = 596;
                end_column = 29;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let (_ : unit) =
    if
      try
        plafond_degressivite_d823_16_
        >=$ plafond_loyer_d823_16_2_ *$ decimal_of_string "2.5"
      with EmptyError ->
        raise
          (NoValueProvided
             {
               filename =
                 "examples/aides_logement/code_construction_reglementaire.catala_fr";
               start_line = 1929;
               start_column = 13;
               end_line = 1929;
               end_column = 76;
               law_headings =
                 [
                   "Article D823-16";
                   "Sous-section 2 : Calcul de l'aide en secteur locatif";
                   "Section 1 : Calcul, liquidation et versement des aides";
                   "Chapitre III : Modalités de liquidation et de versement";
                   "Titre II : Dispositions communes aux aides personnelles au \
                    logement";
                   "Livre VIII : Aides personnelles au logement";
                   "Partie réglementaire";
                   "Code de la construction et de l'habitation";
                 ];
             })
    then ()
    else raise AssertionFailed
  in
  let (_ : unit) =
    if
      try
        fraction_l832_3_ >=& decimal_of_string "0.9"
        && fraction_l832_3_ <=& decimal_of_string "0.98"
      with EmptyError ->
        raise
          (NoValueProvided
             {
               filename =
                 "examples/aides_logement/code_construction_legislatif.catala_fr";
               start_line = 833;
               start_column = 13;
               end_line = 833;
               end_column = 63;
               law_headings =
                 [
                   "Article L832-3";
                   "Chapitre Ier : Champ d'application";
                   "Titre III : Aide personnalisée au logement";
                   "Livre VIII : Aides personnelles au logement";
                   "Partie législative";
                   "Code de la construction et de l'habitation";
                 ];
             })
    then ()
    else raise AssertionFailed
  in
  {
    CalculAidePersonnaliseeLogementLocatifOut
    .montant_forfaitaire_charges_d823_16_out =
      montant_forfaitaire_charges_d823_16_;
    CalculAidePersonnaliseeLogementLocatifOut.plafond_loyer_d823_16_2_out =
      plafond_loyer_d823_16_2_;
    CalculAidePersonnaliseeLogementLocatifOut.participation_minimale_out =
      participation_minimale_;
    CalculAidePersonnaliseeLogementLocatifOut.taux_composition_familiale_out =
      taux_composition_familiale_;
    CalculAidePersonnaliseeLogementLocatifOut.participation_personnelle_out =
      participation_personnelle_;
    CalculAidePersonnaliseeLogementLocatifOut.aide_finale_formule_out =
      aide_finale_formule_;
    CalculAidePersonnaliseeLogementLocatifOut
    .traitement_aide_finale_montant_minimal_out =
      traitement_aide_finale_montant_minimal_;
  }

let calcul_aide_personnalisee_logement_foyer
    (calcul_aide_personnalisee_logement_foyer_in :
      CalculAidePersonnaliseeLogementFoyerIn.t) :
    CalculAidePersonnaliseeLogementFoyerOut.t =
  let mode_occupation_ : ModeOccupation.t =
    calcul_aide_personnalisee_logement_foyer_in
      .CalculAidePersonnaliseeLogementFoyerIn.mode_occupation_in
  in
  let ressources_menage_arrondies_ : money =
    calcul_aide_personnalisee_logement_foyer_in
      .CalculAidePersonnaliseeLogementFoyerIn.ressources_menage_arrondies_in
  in
  let nombre_personnes_a_charge_ : integer =
    calcul_aide_personnalisee_logement_foyer_in
      .CalculAidePersonnaliseeLogementFoyerIn.nombre_personnes_a_charge_in
  in
  let situation_familiale_calcul_apl_ : SituationFamilialeCalculAPL.t =
    calcul_aide_personnalisee_logement_foyer_in
      .CalculAidePersonnaliseeLogementFoyerIn.situation_familiale_calcul_apl_in
  in
  let zone_ : ZoneDHabitation.t =
    calcul_aide_personnalisee_logement_foyer_in
      .CalculAidePersonnaliseeLogementFoyerIn.zone_in
  in
  let date_courante_ : date =
    calcul_aide_personnalisee_logement_foyer_in
      .CalculAidePersonnaliseeLogementFoyerIn.date_courante_in
  in
  let redevance_ : money =
    calcul_aide_personnalisee_logement_foyer_in
      .CalculAidePersonnaliseeLogementFoyerIn.redevance_in
  in
  let condition_2_du_832_25_ : unit -> bool =
    calcul_aide_personnalisee_logement_foyer_in
      .CalculAidePersonnaliseeLogementFoyerIn.condition_2_du_832_25_in
  in
  let n_nombre_parts_d832_25_ : unit -> decimal =
    calcul_aide_personnalisee_logement_foyer_in
      .CalculAidePersonnaliseeLogementFoyerIn.n_nombre_parts_d832_25_in
  in
  let coefficient_r_d832_25_ : money =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementFoyer"; "coefficient_r_d832_25"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 2796;
                 start_column = 14;
                 end_line = 2796;
                 end_column = 35;
                 law_headings =
                   [
                     "Article 30";
                     "Chapitre V : Calcul de l'aide personnalisée au logement \
                      en secteur logement-foyer";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) -> money_of_cents_string "121726")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 643;
                start_column = 10;
                end_line = 643;
                end_column = 31;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let montant_forfaitaire_d832_24_ : money =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementFoyer"; "montant_forfaitaire_d832_24"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 2771;
                 start_column = 14;
                 end_line = 2771;
                 end_column = 41;
                 law_headings =
                   [
                     "Article 28";
                     "Chapitre V : Calcul de l'aide personnalisée au logement \
                      en secteur logement-foyer";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) -> money_of_cents_string "500")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 650;
                start_column = 11;
                end_line = 650;
                end_column = 38;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let montant_minimal_aide_d823_24_ : money =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementFoyer"; "montant_minimal_aide_d823_24"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 2782;
                 start_column = 14;
                 end_line = 2782;
                 end_column = 42;
                 law_headings =
                   [
                     "Article 29";
                     "Chapitre V : Calcul de l'aide personnalisée au logement \
                      en secteur logement-foyer";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) -> money_of_cents_string "1000")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 652;
                start_column = 11;
                end_line = 652;
                end_column = 39;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let condition_2_du_832_25_ : bool =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementFoyer"; "condition_2_du_832_25"]
      embed_bool
      (try
         handle_default
           [| (fun (_ : _) -> condition_2_du_832_25_ ()) |]
           (fun (_ : _) -> true)
           (fun (_ : _) ->
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 3921;
                     start_column = 14;
                     end_line = 3921;
                     end_column = 35;
                     law_headings =
                       [
                         "Article D832-25";
                         "Sous-Section 2 : Conditions d'octroi de l'aide \
                          personnalisée au logement aux personnes résidant \
                          dans un logement-foyer";
                         "Section 3 : Logements-foyers";
                         "Chapitre II : Modalités de liquidation et de \
                          versement de l'aide personnalisée au logement";
                         "Titre III : Aide personnalisée au logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 match mode_occupation_ with
                 | ModeOccupation.Locataire _ -> false
                 | ModeOccupation.ResidentLogementFoyer logement_foyer_ -> (
                   match logement_foyer_.LogementFoyer.type_user with
                   | TypeLogementFoyer.LogementPersonnesAgeesOuHandicapees _ ->
                     false
                   | TypeLogementFoyer.ResidenceSociale _ ->
                     logement_foyer_.LogementFoyer.date_conventionnement
                     >=@ date_of_numbers 1994 12 31
                   | TypeLogementFoyer
                     .FoyerJeunesTrvailleursOuMigrantsConventionneL353_2Avant1995
                       _ ->
                     logement_foyer_.LogementFoyer.date_conventionnement
                     >=@ date_of_numbers 1990 9 30
                   | TypeLogementFoyer.Autre _ -> false)
                 | ModeOccupation.AccessionProprieteLocalUsageExclusifHabitation
                     _ ->
                   false
                 | ModeOccupation.SousLocataire _ -> false
                 | ModeOccupation.LocationAccession _ -> false))
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 640;
                start_column = 12;
                end_line = 640;
                end_column = 33;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let contributions_sociales_dot_date_courante_ : date =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogementFoyer";
          "contributions_sociales.date_courante";
        ]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 674;
                 start_column = 14;
                 end_line = 674;
                 end_column = 50;
                 law_headings =
                   [
                     "Secteur logement-foyer";
                     "Calcul du montant de l'aide personnalisée au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 544;
             start_column = 10;
             end_line = 544;
             end_column = 23;
             law_headings =
               [
                 "Calcul des contributions sociales s'appliquant aux aides \
                  personnelles au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : ContributionsSocialesAidesPersonnelleLogementOut.t =
    log_end_call
      [
        "CalculAidePersonnaliséeLogementFoyer";
        "contributions_sociales";
        "ContributionsSocialesAidesPersonnelleLogement";
      ]
      ((log_begin_call
          [
            "CalculAidePersonnaliséeLogementFoyer";
            "contributions_sociales";
            "ContributionsSocialesAidesPersonnelleLogement";
          ]
          contributions_sociales_aides_personnelle_logement)
         {
           ContributionsSocialesAidesPersonnelleLogementIn.date_courante_in =
             contributions_sociales_dot_date_courante_;
         })
  in
  let contributions_sociales_dot_montant_ : money -> money =
    result_.ContributionsSocialesAidesPersonnelleLogementOut.montant_out
  in
  let plafond_equivalence_loyer_eligible_ : money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementFoyer";
        "plafond_équivalence_loyer_éligible";
      ]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/arrete_2019-09-27.catala_fr";
                       start_line = 2717;
                       start_column = 14;
                       end_line = 2717;
                       end_column = 48;
                       law_headings =
                         [
                           "Article 27";
                           "Chapitre V : Calcul de l'aide personnalisée au \
                            logement en secteur logement-foyer";
                           "Arrêté du 27 septembre 2019 relatif au calcul des \
                            aides personnelles au logement et de la prime de \
                            déménagement";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2021 10 1))
                 (fun (_ : _) ->
                   match zone_ with
                   | ZoneDHabitation.Zone1 _ ->
                     if nombre_personnes_a_charge_ = integer_of_string "0" then
                       match situation_familiale_calcul_apl_ with
                       | SituationFamilialeCalculAPL.PersonneSeule _ ->
                         money_of_cents_string "44630"
                       | SituationFamilialeCalculAPL.Couple _ ->
                         money_of_cents_string "52321"
                     else if nombre_personnes_a_charge_ = integer_of_string "1"
                     then money_of_cents_string "55788"
                     else if nombre_personnes_a_charge_ = integer_of_string "2"
                     then money_of_cents_string "59704"
                     else if nombre_personnes_a_charge_ = integer_of_string "3"
                     then money_of_cents_string "63635"
                     else
                       money_of_cents_string "68637"
                       +$ money_of_cents_string "7119"
                          *$ decimal_of_integer
                               (nombre_personnes_a_charge_
                              -! integer_of_string "4")
                   | ZoneDHabitation.Zone2 _ ->
                     if nombre_personnes_a_charge_ = integer_of_string "0" then
                       match situation_familiale_calcul_apl_ with
                       | SituationFamilialeCalculAPL.PersonneSeule _ ->
                         money_of_cents_string "40814"
                       | SituationFamilialeCalculAPL.Couple _ ->
                         money_of_cents_string "47632"
                     else if nombre_personnes_a_charge_ = integer_of_string "1"
                     then money_of_cents_string "50787"
                     else if nombre_personnes_a_charge_ = integer_of_string "2"
                     then money_of_cents_string "54365"
                     else if nombre_personnes_a_charge_ = integer_of_string "3"
                     then money_of_cents_string "57929"
                     else
                       money_of_cents_string "61727"
                       +$ money_of_cents_string "6434"
                          *$ decimal_of_integer
                               (nombre_personnes_a_charge_
                              -! integer_of_string "4")
                   | ZoneDHabitation.Zone3 _ ->
                     if nombre_personnes_a_charge_ = integer_of_string "0" then
                       match situation_familiale_calcul_apl_ with
                       | SituationFamilialeCalculAPL.PersonneSeule _ ->
                         money_of_cents_string "38740"
                       | SituationFamilialeCalculAPL.Couple _ ->
                         money_of_cents_string "45057"
                     else if nombre_personnes_a_charge_ = integer_of_string "1"
                     then money_of_cents_string "47802"
                     else if nombre_personnes_a_charge_ = integer_of_string "2"
                     then money_of_cents_string "50957"
                     else if nombre_personnes_a_charge_ = integer_of_string "3"
                     then money_of_cents_string "54110"
                     else
                       money_of_cents_string "57657"
                       +$ money_of_cents_string "5971"
                          *$ decimal_of_integer
                               (nombre_personnes_a_charge_
                              -! integer_of_string "4")));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename = "examples/aides_logement/archives.catala_fr";
                       start_line = 501;
                       start_column = 14;
                       end_line = 501;
                       end_column = 48;
                       law_headings =
                         [
                           "Article 27";
                           "Arrêté du 27 septembre 2019 relatif au calcul des \
                            aides personnelles au logement et de la prime de \
                            déménagement";
                           "Articles valables du 1er octobre 2020 au 1er \
                            octobre 2021";
                           "Archives législatives et réglementaires";
                         ];
                     }
                     (date_courante_ <@ date_of_numbers 2021 10 1
                     && date_courante_ >=@ date_of_numbers 2020 10 1))
                 (fun (_ : _) ->
                   match zone_ with
                   | ZoneDHabitation.Zone1 _ ->
                     if nombre_personnes_a_charge_ = integer_of_string "0" then
                       match situation_familiale_calcul_apl_ with
                       | SituationFamilialeCalculAPL.PersonneSeule _ ->
                         money_of_cents_string "44443"
                       | SituationFamilialeCalculAPL.Couple _ ->
                         money_of_cents_string "52101"
                     else if nombre_personnes_a_charge_ = integer_of_string "1"
                     then money_of_cents_string "55555"
                     else if nombre_personnes_a_charge_ = integer_of_string "2"
                     then money_of_cents_string "59454"
                     else if nombre_personnes_a_charge_ = integer_of_string "3"
                     then money_of_cents_string "63369"
                     else
                       money_of_cents_string "68350"
                       +$ money_of_cents_string "7089"
                          *$ decimal_of_integer
                               (nombre_personnes_a_charge_
                              -! integer_of_string "4")
                   | ZoneDHabitation.Zone2 _ ->
                     if nombre_personnes_a_charge_ = integer_of_string "0" then
                       match situation_familiale_calcul_apl_ with
                       | SituationFamilialeCalculAPL.PersonneSeule _ ->
                         money_of_cents_string "40643"
                       | SituationFamilialeCalculAPL.Couple _ ->
                         money_of_cents_string "47433"
                     else if nombre_personnes_a_charge_ = integer_of_string "1"
                     then money_of_cents_string "50575"
                     else if nombre_personnes_a_charge_ = integer_of_string "2"
                     then money_of_cents_string "54138"
                     else if nombre_personnes_a_charge_ = integer_of_string "3"
                     then money_of_cents_string "57687"
                     else
                       money_of_cents_string "61469"
                       +$ money_of_cents_string "6407"
                          *$ decimal_of_integer
                               (nombre_personnes_a_charge_
                              -! integer_of_string "4")
                   | ZoneDHabitation.Zone3 _ ->
                     if nombre_personnes_a_charge_ = integer_of_string "0" then
                       match situation_familiale_calcul_apl_ with
                       | SituationFamilialeCalculAPL.PersonneSeule _ ->
                         money_of_cents_string "38578"
                       | SituationFamilialeCalculAPL.Couple _ ->
                         money_of_cents_string "44869"
                     else if nombre_personnes_a_charge_ = integer_of_string "1"
                     then money_of_cents_string "47602"
                     else if nombre_personnes_a_charge_ = integer_of_string "2"
                     then money_of_cents_string "50744"
                     else if nombre_personnes_a_charge_ = integer_of_string "3"
                     then money_of_cents_string "53884"
                     else
                       money_of_cents_string "57416"
                       +$ money_of_cents_string "5946"
                          *$ decimal_of_integer
                               (nombre_personnes_a_charge_
                              -! integer_of_string "4")));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 646;
                start_column = 10;
                end_line = 646;
                end_column = 44;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let traitement_aide_finale_minoration_forfaitaire_ : money -> money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementFoyer";
        "traitement_aide_finale_minoration_forfaitaire";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 3848;
                     start_column = 14;
                     end_line = 3848;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D832-24";
                         "Sous-Section 2 : Conditions d'octroi de l'aide \
                          personnalisée au logement aux personnes résidant \
                          dans un logement-foyer";
                         "Section 3 : Logements-foyers";
                         "Chapitre II : Modalités de liquidation et de \
                          versement de l'aide personnalisée au logement";
                         "Titre III : Aide personnalisée au logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   param_ -$ montant_forfaitaire_d832_24_
                   >=$ money_of_cents_string "0"
                 then param_ -$ montant_forfaitaire_d832_24_
                 else money_of_cents_string "0")
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 668;
                    start_column = 10;
                    end_line = 668;
                    end_column = 32;
                    law_headings =
                      [
                        "Secteur logement-foyer";
                        "Calcul du montant de l'aide personnalisée au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 668;
                start_column = 10;
                end_line = 668;
                end_column = 32;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let calcul_nombre_parts_dot_condition_2_du_832_25_ : bool =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogementFoyer";
          "calcul_nombre_parts.condition_2_du_832_25";
        ]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4008;
                 start_column = 14;
                 end_line = 4008;
                 end_column = 55;
                 law_headings =
                   [
                     "Article D832-25";
                     "Sous-Section 2 : Conditions d'octroi de l'aide \
                      personnalisée au logement aux personnes résidant dans un \
                      logement-foyer";
                     "Section 3 : Logements-foyers";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> condition_2_du_832_25_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 625;
             start_column = 10;
             end_line = 625;
             end_column = 31;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_nombre_parts_dot_nombre_personnes_a_charge_ : integer =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogementFoyer";
          "calcul_nombre_parts.nombre_personnes_à_charge";
        ]
        embed_integer
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4004;
                 start_column = 14;
                 end_line = 4004;
                 end_column = 59;
                 law_headings =
                   [
                     "Article D832-25";
                     "Sous-Section 2 : Conditions d'octroi de l'aide \
                      personnalisée au logement aux personnes résidant dans un \
                      logement-foyer";
                     "Section 3 : Logements-foyers";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> nombre_personnes_a_charge_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 626;
             start_column = 10;
             end_line = 626;
             end_column = 35;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_nombre_parts_dot_situation_familiale_calcul_apl_ :
      SituationFamilialeCalculAPL.t =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogementFoyer";
          "calcul_nombre_parts.situation_familiale_calcul_apl";
        ]
        embed_situation_familiale_calcul_a_p_l
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4006;
                 start_column = 14;
                 end_line = 4006;
                 end_column = 64;
                 law_headings =
                   [
                     "Article D832-25";
                     "Sous-Section 2 : Conditions d'octroi de l'aide \
                      personnalisée au logement aux personnes résidant dans un \
                      logement-foyer";
                     "Section 3 : Logements-foyers";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> situation_familiale_calcul_apl_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 627;
             start_column = 10;
             end_line = 627;
             end_column = 40;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : CalculNombrePartLogementFoyerOut.t =
    log_end_call
      [
        "CalculAidePersonnaliséeLogementFoyer";
        "calcul_nombre_parts";
        "CalculNombrePartLogementFoyer";
      ]
      ((log_begin_call
          [
            "CalculAidePersonnaliséeLogementFoyer";
            "calcul_nombre_parts";
            "CalculNombrePartLogementFoyer";
          ]
          calcul_nombre_part_logement_foyer)
         {
           CalculNombrePartLogementFoyerIn.condition_2_du_832_25_in =
             calcul_nombre_parts_dot_condition_2_du_832_25_;
           CalculNombrePartLogementFoyerIn.nombre_personnes_a_charge_in =
             calcul_nombre_parts_dot_nombre_personnes_a_charge_;
           CalculNombrePartLogementFoyerIn.situation_familiale_calcul_apl_in =
             calcul_nombre_parts_dot_situation_familiale_calcul_apl_;
         })
  in
  let calcul_nombre_parts_dot_n_nombre_parts_d832_25_ : decimal =
    result_.CalculNombrePartLogementFoyerOut.n_nombre_parts_d832_25_out
  in
  let montant_forfaitaire_d832_27_ : money =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementFoyer"; "montant_forfaitaire_d832_27"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 2915;
                 start_column = 14;
                 end_line = 2915;
                 end_column = 41;
                 law_headings =
                   [
                     "Article 32";
                     "Chapitre V : Calcul de l'aide personnalisée au logement \
                      en secteur logement-foyer";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) ->
             if condition_2_du_832_25_ then money_of_cents_string "1500"
             else money_of_cents_string "2668")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 651;
                start_column = 11;
                end_line = 651;
                end_column = 38;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let coefficient_multiplicateur_d832_25_ : money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementFoyer";
        "coefficient_multiplicateur_d832_25";
      ]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 2806;
                 start_column = 14;
                 end_line = 2806;
                 end_column = 48;
                 law_headings =
                   [
                     "Article 30";
                     "Chapitre V : Calcul de l'aide personnalisée au logement \
                      en secteur logement-foyer";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) ->
             if condition_2_du_832_25_ then money_of_cents_string "2142091"
             else money_of_cents_string "1339340")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 642;
                start_column = 10;
                end_line = 642;
                end_column = 44;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let equivalence_loyer_eligible_ : money =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementFoyer"; "équivalence_loyer_éligible"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3822;
                 start_column = 14;
                 end_line = 3822;
                 end_column = 40;
                 law_headings =
                   [
                     "Article D832-24";
                     "Sous-Section 2 : Conditions d'octroi de l'aide \
                      personnalisée au logement aux personnes résidant dans un \
                      logement-foyer";
                     "Section 3 : Logements-foyers";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             if redevance_ >=$ plafond_equivalence_loyer_eligible_ then
               plafond_equivalence_loyer_eligible_
             else redevance_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 645;
                start_column = 10;
                end_line = 645;
                end_column = 36;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let n_nombre_parts_d832_25_ : decimal =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementFoyer"; "n_nombre_parts_d832_25"]
      embed_decimal
      (try
         handle_default
           [| (fun (_ : _) -> n_nombre_parts_d832_25_ ()) |]
           (fun (_ : _) -> true)
           (fun (_ : _) ->
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 4010;
                     start_column = 14;
                     end_line = 4010;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D832-25";
                         "Sous-Section 2 : Conditions d'octroi de l'aide \
                          personnalisée au logement aux personnes résidant \
                          dans un logement-foyer";
                         "Section 3 : Logements-foyers";
                         "Chapitre II : Modalités de liquidation et de \
                          versement de l'aide personnalisée au logement";
                         "Titre III : Aide personnalisée au logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) -> calcul_nombre_parts_dot_n_nombre_parts_d832_25_))
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 644;
                start_column = 19;
                end_line = 644;
                end_column = 41;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let depense_nette_minimale_d832_27_ : money -> money =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementFoyer"; "dépense_nette_minimale_d832_27"]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 4206;
                     start_column = 14;
                     end_line = 4206;
                     end_column = 44;
                     law_headings =
                       [
                         "Article D832-27";
                         "Sous-Section 2 : Conditions d'octroi de l'aide \
                          personnalisée au logement aux personnes résidant \
                          dans un logement-foyer";
                         "Section 3 : Logements-foyers";
                         "Chapitre II : Modalités de liquidation et de \
                          versement de l'aide personnalisée au logement";
                         "Titre III : Aide personnalisée au logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) -> equivalence_loyer_eligible_ -$ param_)
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 649;
                    start_column = 11;
                    end_line = 649;
                    end_column = 41;
                    law_headings =
                      [
                        "Secteur logement-foyer";
                        "Calcul du montant de l'aide personnalisée au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 649;
                start_column = 11;
                end_line = 649;
                end_column = 41;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_ : money
      =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogementFoyer";
          "calcul_équivalence_loyer_minimale.ressources_ménage_arrondies";
        ]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3838;
                 start_column = 14;
                 end_line = 3838;
                 end_column = 75;
                 law_headings =
                   [
                     "Article D832-24";
                     "Sous-Section 2 : Conditions d'octroi de l'aide \
                      personnalisée au logement aux personnes résidant dans un \
                      logement-foyer";
                     "Section 3 : Logements-foyers";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> ressources_menage_arrondies_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 613;
             start_column = 10;
             end_line = 613;
             end_column = 37;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_ : bool =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogementFoyer";
          "calcul_équivalence_loyer_minimale.condition_2_du_832_25";
        ]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3836;
                 start_column = 14;
                 end_line = 3836;
                 end_column = 69;
                 law_headings =
                   [
                     "Article D832-24";
                     "Sous-Section 2 : Conditions d'octroi de l'aide \
                      personnalisée au logement aux personnes résidant dans un \
                      logement-foyer";
                     "Section 3 : Logements-foyers";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> condition_2_du_832_25_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 614;
             start_column = 10;
             end_line = 614;
             end_column = 31;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_ : decimal =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogementFoyer";
          "calcul_équivalence_loyer_minimale.n_nombre_parts_d832_25";
        ]
        embed_decimal
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3840;
                 start_column = 14;
                 end_line = 3840;
                 end_column = 70;
                 law_headings =
                   [
                     "Article D832-24";
                     "Sous-Section 2 : Conditions d'octroi de l'aide \
                      personnalisée au logement aux personnes résidant dans un \
                      logement-foyer";
                     "Section 3 : Logements-foyers";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> n_nombre_parts_d832_25_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 615;
             start_column = 10;
             end_line = 615;
             end_column = 32;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : CalculEquivalenceLoyerMinimaleOut.t =
    log_end_call
      [
        "CalculAidePersonnaliséeLogementFoyer";
        "calcul_équivalence_loyer_minimale";
        "CalculÉquivalenceLoyerMinimale";
      ]
      ((log_begin_call
          [
            "CalculAidePersonnaliséeLogementFoyer";
            "calcul_équivalence_loyer_minimale";
            "CalculÉquivalenceLoyerMinimale";
          ]
          calcul_equivalence_loyer_minimale)
         {
           CalculEquivalenceLoyerMinimaleIn.ressources_menage_arrondies_in =
             calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_;
           CalculEquivalenceLoyerMinimaleIn.condition_2_du_832_25_in =
             calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_;
           CalculEquivalenceLoyerMinimaleIn.n_nombre_parts_d832_25_in =
             calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_;
         })
  in
  let calcul_equivalence_loyer_minimale_dot_montant_ : money =
    result_.CalculEquivalenceLoyerMinimaleOut.montant_out
  in
  let coefficient_prise_en_charge_d832_25_formule_ : decimal =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementFoyer";
        "coefficient_prise_en_charge_d832_25_formule";
      ]
      embed_decimal
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 4022;
                       start_column = 5;
                       end_line = 4022;
                       end_column = 26;
                       law_headings =
                         [
                           "Article D832-25";
                           "Sous-Section 2 : Conditions d'octroi de l'aide \
                            personnalisée au logement aux personnes résidant \
                            dans un logement-foyer";
                           "Section 3 : Logements-foyers";
                           "Chapitre II : Modalités de liquidation et de \
                            versement de l'aide personnalisée au logement";
                           "Titre III : Aide personnalisée au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     condition_2_du_832_25_)
                 (fun (_ : _) ->
                   decimal_of_string "0.9"
                   -& ressources_menage_arrondies_
                      /$ (coefficient_multiplicateur_d832_25_
                        *$ n_nombre_parts_d832_25_)));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3939;
                 start_column = 14;
                 end_line = 3939;
                 end_column = 49;
                 law_headings =
                   [
                     "Article D832-25";
                     "Sous-Section 2 : Conditions d'octroi de l'aide \
                      personnalisée au logement aux personnes résidant dans un \
                      logement-foyer";
                     "Section 3 : Logements-foyers";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             decimal_of_string "0.95"
             -& (ressources_menage_arrondies_
                -$ (coefficient_r_d832_25_ *$ n_nombre_parts_d832_25_))
                /$ (coefficient_multiplicateur_d832_25_
                  *$ n_nombre_parts_d832_25_))
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 662;
                start_column = 10;
                end_line = 662;
                end_column = 17;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let abattement_depense_nette_minimale_d832_27_ : money -> money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementFoyer";
        "abattement_dépense_nette_minimale_d832_27";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 4210;
                     start_column = 14;
                     end_line = 4210;
                     end_column = 55;
                     law_headings =
                       [
                         "Article D832-27";
                         "Sous-Section 2 : Conditions d'octroi de l'aide \
                          personnalisée au logement aux personnes résidant \
                          dans un logement-foyer";
                         "Section 3 : Logements-foyers";
                         "Chapitre II : Modalités de liquidation et de \
                          versement de l'aide personnalisée au logement";
                         "Titre III : Aide personnalisée au logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   log_end_call
                     [
                       "CalculAidePersonnaliséeLogementFoyer";
                       "dépense_nette_minimale_d832_27";
                     ]
                     (log_variable_definition
                        [
                          "CalculAidePersonnaliséeLogementFoyer";
                          "dépense_nette_minimale_d832_27";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAidePersonnaliséeLogementFoyer";
                              "dépense_nette_minimale_d832_27";
                            ]
                            depense_nette_minimale_d832_27_)
                           (log_variable_definition
                              [
                                "CalculAidePersonnaliséeLogementFoyer";
                                "dépense_nette_minimale_d832_27";
                                "input";
                              ]
                              embed_money param_)))
                   <=$ montant_forfaitaire_d832_27_
                 then
                   montant_forfaitaire_d832_27_
                   -$ log_end_call
                        [
                          "CalculAidePersonnaliséeLogementFoyer";
                          "dépense_nette_minimale_d832_27";
                        ]
                        (log_variable_definition
                           [
                             "CalculAidePersonnaliséeLogementFoyer";
                             "dépense_nette_minimale_d832_27";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "CalculAidePersonnaliséeLogementFoyer";
                                 "dépense_nette_minimale_d832_27";
                               ]
                               depense_nette_minimale_d832_27_)
                              (log_variable_definition
                                 [
                                   "CalculAidePersonnaliséeLogementFoyer";
                                   "dépense_nette_minimale_d832_27";
                                   "input";
                                 ]
                                 embed_money param_)))
                 else money_of_cents_string "0")
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 647;
                    start_column = 11;
                    end_line = 647;
                    end_column = 52;
                    law_headings =
                      [
                        "Secteur logement-foyer";
                        "Calcul du montant de l'aide personnalisée au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 647;
                start_column = 11;
                end_line = 647;
                end_column = 52;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let equivalence_loyer_minimale_ : money =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementFoyer"; "équivalence_loyer_minimale"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3834;
                 start_column = 14;
                 end_line = 3834;
                 end_column = 40;
                 law_headings =
                   [
                     "Article D832-24";
                     "Sous-Section 2 : Conditions d'octroi de l'aide \
                      personnalisée au logement aux personnes résidant dans un \
                      logement-foyer";
                     "Section 3 : Logements-foyers";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> calcul_equivalence_loyer_minimale_dot_montant_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 653;
                start_column = 10;
                end_line = 653;
                end_column = 36;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let coefficient_prise_en_charge_d832_25_arrondi_ : decimal =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementFoyer";
        "coefficient_prise_en_charge_d832_25_arrondi";
      ]
      embed_decimal
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 4039;
                       start_column = 5;
                       end_line = 4039;
                       end_column = 26;
                       law_headings =
                         [
                           "Article D832-25";
                           "Sous-Section 2 : Conditions d'octroi de l'aide \
                            personnalisée au logement aux personnes résidant \
                            dans un logement-foyer";
                           "Section 3 : Logements-foyers";
                           "Chapitre II : Modalités de liquidation et de \
                            versement de l'aide personnalisée au logement";
                           "Titre III : Aide personnalisée au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     condition_2_du_832_25_)
                 (fun (_ : _) ->
                   decimal_round
                     ((coefficient_prise_en_charge_d832_25_formule_
                     -& decimal_of_string "0.005")
                     *& decimal_of_string "100.")
                   /& decimal_of_string "100."));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3955;
                 start_column = 14;
                 end_line = 3955;
                 end_column = 49;
                 law_headings =
                   [
                     "Article D832-25";
                     "Sous-Section 2 : Conditions d'octroi de l'aide \
                      personnalisée au logement aux personnes résidant dans un \
                      logement-foyer";
                     "Section 3 : Logements-foyers";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             decimal_round
               ((coefficient_prise_en_charge_d832_25_formule_
               -& decimal_of_string "0.005")
               *& decimal_of_string "100.")
             /& decimal_of_string "100.")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 663;
                start_column = 10;
                end_line = 663;
                end_column = 17;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let traitement_aide_finale_abattement_ : money -> money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementFoyer";
        "traitement_aide_finale_abattement";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 3862;
                     start_column = 14;
                     end_line = 3862;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D832-24";
                         "Sous-Section 2 : Conditions d'octroi de l'aide \
                          personnalisée au logement aux personnes résidant \
                          dans un logement-foyer";
                         "Section 3 : Logements-foyers";
                         "Chapitre II : Modalités de liquidation et de \
                          versement de l'aide personnalisée au logement";
                         "Titre III : Aide personnalisée au logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   log_end_call
                     [
                       "CalculAidePersonnaliséeLogementFoyer";
                       "traitement_aide_finale_minoration_forfaitaire";
                     ]
                     (log_variable_definition
                        [
                          "CalculAidePersonnaliséeLogementFoyer";
                          "traitement_aide_finale_minoration_forfaitaire";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAidePersonnaliséeLogementFoyer";
                              "traitement_aide_finale_minoration_forfaitaire";
                            ]
                            traitement_aide_finale_minoration_forfaitaire_)
                           (log_variable_definition
                              [
                                "CalculAidePersonnaliséeLogementFoyer";
                                "traitement_aide_finale_minoration_forfaitaire";
                                "input";
                              ]
                              embed_money param_)))
                   -$ log_end_call
                        [
                          "CalculAidePersonnaliséeLogementFoyer";
                          "abattement_dépense_nette_minimale_d832_27";
                        ]
                        (log_variable_definition
                           [
                             "CalculAidePersonnaliséeLogementFoyer";
                             "abattement_dépense_nette_minimale_d832_27";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "CalculAidePersonnaliséeLogementFoyer";
                                 "abattement_dépense_nette_minimale_d832_27";
                               ]
                               abattement_depense_nette_minimale_d832_27_)
                              (log_variable_definition
                                 [
                                   "CalculAidePersonnaliséeLogementFoyer";
                                   "abattement_dépense_nette_minimale_d832_27";
                                   "input";
                                 ]
                                 embed_money
                                 (log_end_call
                                    [
                                      "CalculAidePersonnaliséeLogementFoyer";
                                      "traitement_aide_finale_minoration_forfaitaire";
                                    ]
                                    (log_variable_definition
                                       [
                                         "CalculAidePersonnaliséeLogementFoyer";
                                         "traitement_aide_finale_minoration_forfaitaire";
                                         "output";
                                       ]
                                       embed_money
                                       ((log_begin_call
                                           [
                                             "CalculAidePersonnaliséeLogementFoyer";
                                             "traitement_aide_finale_minoration_forfaitaire";
                                           ]
                                           traitement_aide_finale_minoration_forfaitaire_)
                                          (log_variable_definition
                                             [
                                               "CalculAidePersonnaliséeLogementFoyer";
                                               "traitement_aide_finale_minoration_forfaitaire";
                                               "input";
                                             ]
                                             embed_money param_)))))))
                   >=$ money_of_cents_string "0"
                 then
                   log_end_call
                     [
                       "CalculAidePersonnaliséeLogementFoyer";
                       "traitement_aide_finale_minoration_forfaitaire";
                     ]
                     (log_variable_definition
                        [
                          "CalculAidePersonnaliséeLogementFoyer";
                          "traitement_aide_finale_minoration_forfaitaire";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAidePersonnaliséeLogementFoyer";
                              "traitement_aide_finale_minoration_forfaitaire";
                            ]
                            traitement_aide_finale_minoration_forfaitaire_)
                           (log_variable_definition
                              [
                                "CalculAidePersonnaliséeLogementFoyer";
                                "traitement_aide_finale_minoration_forfaitaire";
                                "input";
                              ]
                              embed_money param_)))
                   -$ log_end_call
                        [
                          "CalculAidePersonnaliséeLogementFoyer";
                          "abattement_dépense_nette_minimale_d832_27";
                        ]
                        (log_variable_definition
                           [
                             "CalculAidePersonnaliséeLogementFoyer";
                             "abattement_dépense_nette_minimale_d832_27";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "CalculAidePersonnaliséeLogementFoyer";
                                 "abattement_dépense_nette_minimale_d832_27";
                               ]
                               abattement_depense_nette_minimale_d832_27_)
                              (log_variable_definition
                                 [
                                   "CalculAidePersonnaliséeLogementFoyer";
                                   "abattement_dépense_nette_minimale_d832_27";
                                   "input";
                                 ]
                                 embed_money
                                 (log_end_call
                                    [
                                      "CalculAidePersonnaliséeLogementFoyer";
                                      "traitement_aide_finale_minoration_forfaitaire";
                                    ]
                                    (log_variable_definition
                                       [
                                         "CalculAidePersonnaliséeLogementFoyer";
                                         "traitement_aide_finale_minoration_forfaitaire";
                                         "output";
                                       ]
                                       embed_money
                                       ((log_begin_call
                                           [
                                             "CalculAidePersonnaliséeLogementFoyer";
                                             "traitement_aide_finale_minoration_forfaitaire";
                                           ]
                                           traitement_aide_finale_minoration_forfaitaire_)
                                          (log_variable_definition
                                             [
                                               "CalculAidePersonnaliséeLogementFoyer";
                                               "traitement_aide_finale_minoration_forfaitaire";
                                               "input";
                                             ]
                                             embed_money param_)))))))
                 else money_of_cents_string "0")
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 669;
                    start_column = 10;
                    end_line = 669;
                    end_column = 20;
                    law_headings =
                      [
                        "Secteur logement-foyer";
                        "Calcul du montant de l'aide personnalisée au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 669;
                start_column = 10;
                end_line = 669;
                end_column = 20;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let coefficient_prise_en_charge_d832_25_seuil_ : decimal =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementFoyer";
        "coefficient_prise_en_charge_d832_25_seuil";
      ]
      embed_decimal
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 4045;
                       start_column = 5;
                       end_line = 4045;
                       end_column = 26;
                       law_headings =
                         [
                           "Article D832-25";
                           "Sous-Section 2 : Conditions d'octroi de l'aide \
                            personnalisée au logement aux personnes résidant \
                            dans un logement-foyer";
                           "Section 3 : Logements-foyers";
                           "Chapitre II : Modalités de liquidation et de \
                            versement de l'aide personnalisée au logement";
                           "Titre III : Aide personnalisée au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     condition_2_du_832_25_)
                 (fun (_ : _) ->
                   if
                     coefficient_prise_en_charge_d832_25_arrondi_
                     >=& decimal_of_string "0.9"
                   then decimal_of_string "0.9"
                   else coefficient_prise_en_charge_d832_25_arrondi_));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3958;
                 start_column = 14;
                 end_line = 3958;
                 end_column = 49;
                 law_headings =
                   [
                     "Article D832-25";
                     "Sous-Section 2 : Conditions d'octroi de l'aide \
                      personnalisée au logement aux personnes résidant dans un \
                      logement-foyer";
                     "Section 3 : Logements-foyers";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             if
               coefficient_prise_en_charge_d832_25_arrondi_
               >=& decimal_of_string "0.95"
             then decimal_of_string "0.95"
             else coefficient_prise_en_charge_d832_25_arrondi_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 664;
                start_column = 10;
                end_line = 664;
                end_column = 15;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let traitement_aide_finale_contributions_sociales_arrondi_ : money -> money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementFoyer";
        "traitement_aide_finale_contributions_sociales_arrondi";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 3879;
                     start_column = 14;
                     end_line = 3879;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D832-24";
                         "Sous-Section 2 : Conditions d'octroi de l'aide \
                          personnalisée au logement aux personnes résidant \
                          dans un logement-foyer";
                         "Section 3 : Logements-foyers";
                         "Chapitre II : Modalités de liquidation et de \
                          versement de l'aide personnalisée au logement";
                         "Titre III : Aide personnalisée au logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   money_round
                     (log_end_call
                        [
                          "CalculAidePersonnaliséeLogementFoyer";
                          "traitement_aide_finale_abattement";
                        ]
                        (log_variable_definition
                           [
                             "CalculAidePersonnaliséeLogementFoyer";
                             "traitement_aide_finale_abattement";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "CalculAidePersonnaliséeLogementFoyer";
                                 "traitement_aide_finale_abattement";
                               ]
                               traitement_aide_finale_abattement_)
                              (log_variable_definition
                                 [
                                   "CalculAidePersonnaliséeLogementFoyer";
                                   "traitement_aide_finale_abattement";
                                   "input";
                                 ]
                                 embed_money param_)))
                     -$ log_end_call
                          [
                            "ContributionsSocialesAidesPersonnelleLogement";
                            "montant";
                          ]
                          (log_variable_definition
                             [
                               "ContributionsSocialesAidesPersonnelleLogement";
                               "montant";
                               "output";
                             ]
                             embed_money
                             ((log_begin_call
                                 [
                                   "ContributionsSocialesAidesPersonnelleLogement";
                                   "montant";
                                 ]
                                 contributions_sociales_dot_montant_)
                                (log_variable_definition
                                   [
                                     "ContributionsSocialesAidesPersonnelleLogement";
                                     "montant";
                                     "input";
                                   ]
                                   embed_money
                                   (log_end_call
                                      [
                                        "CalculAidePersonnaliséeLogementFoyer";
                                        "traitement_aide_finale_abattement";
                                      ]
                                      (log_variable_definition
                                         [
                                           "CalculAidePersonnaliséeLogementFoyer";
                                           "traitement_aide_finale_abattement";
                                           "output";
                                         ]
                                         embed_money
                                         ((log_begin_call
                                             [
                                               "CalculAidePersonnaliséeLogementFoyer";
                                               "traitement_aide_finale_abattement";
                                             ]
                                             traitement_aide_finale_abattement_)
                                            (log_variable_definition
                                               [
                                                 "CalculAidePersonnaliséeLogementFoyer";
                                                 "traitement_aide_finale_abattement";
                                                 "input";
                                               ]
                                               embed_money param_)))))))
                     -$ money_of_cents_string "50")
                   +$ log_end_call
                        [
                          "ContributionsSocialesAidesPersonnelleLogement";
                          "montant";
                        ]
                        (log_variable_definition
                           [
                             "ContributionsSocialesAidesPersonnelleLogement";
                             "montant";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "ContributionsSocialesAidesPersonnelleLogement";
                                 "montant";
                               ]
                               contributions_sociales_dot_montant_)
                              (log_variable_definition
                                 [
                                   "ContributionsSocialesAidesPersonnelleLogement";
                                   "montant";
                                   "input";
                                 ]
                                 embed_money
                                 (log_end_call
                                    [
                                      "CalculAidePersonnaliséeLogementFoyer";
                                      "traitement_aide_finale_abattement";
                                    ]
                                    (log_variable_definition
                                       [
                                         "CalculAidePersonnaliséeLogementFoyer";
                                         "traitement_aide_finale_abattement";
                                         "output";
                                       ]
                                       embed_money
                                       ((log_begin_call
                                           [
                                             "CalculAidePersonnaliséeLogementFoyer";
                                             "traitement_aide_finale_abattement";
                                           ]
                                           traitement_aide_finale_abattement_)
                                          (log_variable_definition
                                             [
                                               "CalculAidePersonnaliséeLogementFoyer";
                                               "traitement_aide_finale_abattement";
                                               "input";
                                             ]
                                             embed_money param_)))))))
                   >=$ money_of_cents_string "0"
                 then
                   money_round
                     (log_end_call
                        [
                          "CalculAidePersonnaliséeLogementFoyer";
                          "traitement_aide_finale_abattement";
                        ]
                        (log_variable_definition
                           [
                             "CalculAidePersonnaliséeLogementFoyer";
                             "traitement_aide_finale_abattement";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "CalculAidePersonnaliséeLogementFoyer";
                                 "traitement_aide_finale_abattement";
                               ]
                               traitement_aide_finale_abattement_)
                              (log_variable_definition
                                 [
                                   "CalculAidePersonnaliséeLogementFoyer";
                                   "traitement_aide_finale_abattement";
                                   "input";
                                 ]
                                 embed_money param_)))
                     -$ log_end_call
                          [
                            "ContributionsSocialesAidesPersonnelleLogement";
                            "montant";
                          ]
                          (log_variable_definition
                             [
                               "ContributionsSocialesAidesPersonnelleLogement";
                               "montant";
                               "output";
                             ]
                             embed_money
                             ((log_begin_call
                                 [
                                   "ContributionsSocialesAidesPersonnelleLogement";
                                   "montant";
                                 ]
                                 contributions_sociales_dot_montant_)
                                (log_variable_definition
                                   [
                                     "ContributionsSocialesAidesPersonnelleLogement";
                                     "montant";
                                     "input";
                                   ]
                                   embed_money
                                   (log_end_call
                                      [
                                        "CalculAidePersonnaliséeLogementFoyer";
                                        "traitement_aide_finale_abattement";
                                      ]
                                      (log_variable_definition
                                         [
                                           "CalculAidePersonnaliséeLogementFoyer";
                                           "traitement_aide_finale_abattement";
                                           "output";
                                         ]
                                         embed_money
                                         ((log_begin_call
                                             [
                                               "CalculAidePersonnaliséeLogementFoyer";
                                               "traitement_aide_finale_abattement";
                                             ]
                                             traitement_aide_finale_abattement_)
                                            (log_variable_definition
                                               [
                                                 "CalculAidePersonnaliséeLogementFoyer";
                                                 "traitement_aide_finale_abattement";
                                                 "input";
                                               ]
                                               embed_money param_)))))))
                     -$ money_of_cents_string "50")
                   +$ log_end_call
                        [
                          "ContributionsSocialesAidesPersonnelleLogement";
                          "montant";
                        ]
                        (log_variable_definition
                           [
                             "ContributionsSocialesAidesPersonnelleLogement";
                             "montant";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "ContributionsSocialesAidesPersonnelleLogement";
                                 "montant";
                               ]
                               contributions_sociales_dot_montant_)
                              (log_variable_definition
                                 [
                                   "ContributionsSocialesAidesPersonnelleLogement";
                                   "montant";
                                   "input";
                                 ]
                                 embed_money
                                 (log_end_call
                                    [
                                      "CalculAidePersonnaliséeLogementFoyer";
                                      "traitement_aide_finale_abattement";
                                    ]
                                    (log_variable_definition
                                       [
                                         "CalculAidePersonnaliséeLogementFoyer";
                                         "traitement_aide_finale_abattement";
                                         "output";
                                       ]
                                       embed_money
                                       ((log_begin_call
                                           [
                                             "CalculAidePersonnaliséeLogementFoyer";
                                             "traitement_aide_finale_abattement";
                                           ]
                                           traitement_aide_finale_abattement_)
                                          (log_variable_definition
                                             [
                                               "CalculAidePersonnaliséeLogementFoyer";
                                               "traitement_aide_finale_abattement";
                                               "input";
                                             ]
                                             embed_money param_)))))))
                 else money_of_cents_string "0")
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 670;
                    start_column = 10;
                    end_line = 670;
                    end_column = 40;
                    law_headings =
                      [
                        "Secteur logement-foyer";
                        "Calcul du montant de l'aide personnalisée au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 670;
                start_column = 10;
                end_line = 670;
                end_column = 40;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let aide_finale_formule_ : money =
    log_variable_definition
      ["CalculAidePersonnaliséeLogementFoyer"; "aide_finale_formule"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3801;
                 start_column = 14;
                 end_line = 3801;
                 end_column = 33;
                 law_headings =
                   [
                     "Article D832-24";
                     "Sous-Section 2 : Conditions d'octroi de l'aide \
                      personnalisée au logement aux personnes résidant dans un \
                      logement-foyer";
                     "Section 3 : Logements-foyers";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             if
               (equivalence_loyer_eligible_ -$ equivalence_loyer_minimale_)
               *$ coefficient_prise_en_charge_d832_25_seuil_
               <$ money_of_cents_string "0"
             then money_of_cents_string "0"
             else
               (equivalence_loyer_eligible_ -$ equivalence_loyer_minimale_)
               *$ coefficient_prise_en_charge_d832_25_seuil_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 666;
                start_column = 10;
                end_line = 666;
                end_column = 29;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let traitement_aide_finale_montant_minimal_ : money -> money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementFoyer";
        "traitement_aide_finale_montant_minimal";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 3904;
                     start_column = 14;
                     end_line = 3904;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D832-24";
                         "Sous-Section 2 : Conditions d'octroi de l'aide \
                          personnalisée au logement aux personnes résidant \
                          dans un logement-foyer";
                         "Section 3 : Logements-foyers";
                         "Chapitre II : Modalités de liquidation et de \
                          versement de l'aide personnalisée au logement";
                         "Titre III : Aide personnalisée au logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   log_end_call
                     [
                       "CalculAidePersonnaliséeLogementFoyer";
                       "traitement_aide_finale_contributions_sociales_arrondi";
                     ]
                     (log_variable_definition
                        [
                          "CalculAidePersonnaliséeLogementFoyer";
                          "traitement_aide_finale_contributions_sociales_arrondi";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAidePersonnaliséeLogementFoyer";
                              "traitement_aide_finale_contributions_sociales_arrondi";
                            ]
                            traitement_aide_finale_contributions_sociales_arrondi_)
                           (log_variable_definition
                              [
                                "CalculAidePersonnaliséeLogementFoyer";
                                "traitement_aide_finale_contributions_sociales_arrondi";
                                "input";
                              ]
                              embed_money param_)))
                   <$ montant_minimal_aide_d823_24_
                 then money_of_cents_string "0"
                 else
                   log_end_call
                     [
                       "CalculAidePersonnaliséeLogementFoyer";
                       "traitement_aide_finale_contributions_sociales_arrondi";
                     ]
                     (log_variable_definition
                        [
                          "CalculAidePersonnaliséeLogementFoyer";
                          "traitement_aide_finale_contributions_sociales_arrondi";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAidePersonnaliséeLogementFoyer";
                              "traitement_aide_finale_contributions_sociales_arrondi";
                            ]
                            traitement_aide_finale_contributions_sociales_arrondi_)
                           (log_variable_definition
                              [
                                "CalculAidePersonnaliséeLogementFoyer";
                                "traitement_aide_finale_contributions_sociales_arrondi";
                                "input";
                              ]
                              embed_money param_))))
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 671;
                    start_column = 10;
                    end_line = 671;
                    end_column = 25;
                    law_headings =
                      [
                        "Secteur logement-foyer";
                        "Calcul du montant de l'aide personnalisée au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 671;
                start_column = 10;
                end_line = 671;
                end_column = 25;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  {
    CalculAidePersonnaliseeLogementFoyerOut
    .coefficient_multiplicateur_d832_25_out =
      coefficient_multiplicateur_d832_25_;
    CalculAidePersonnaliseeLogementFoyerOut.coefficient_r_d832_25_out =
      coefficient_r_d832_25_;
    CalculAidePersonnaliseeLogementFoyerOut.n_nombre_parts_d832_25_out =
      n_nombre_parts_d832_25_;
    CalculAidePersonnaliseeLogementFoyerOut.equivalence_loyer_eligible_out =
      equivalence_loyer_eligible_;
    CalculAidePersonnaliseeLogementFoyerOut
    .plafond_equivalence_loyer_eligible_out =
      plafond_equivalence_loyer_eligible_;
    CalculAidePersonnaliseeLogementFoyerOut.equivalence_loyer_minimale_out =
      equivalence_loyer_minimale_;
    CalculAidePersonnaliseeLogementFoyerOut
    .coefficient_prise_en_charge_d832_25_seuil_out =
      coefficient_prise_en_charge_d832_25_seuil_;
    CalculAidePersonnaliseeLogementFoyerOut.aide_finale_formule_out =
      aide_finale_formule_;
    CalculAidePersonnaliseeLogementFoyerOut
    .traitement_aide_finale_montant_minimal_out =
      traitement_aide_finale_montant_minimal_;
  }

let calcul_aide_personnalisee_logement_accession_propriete
    (calcul_aide_personnalisee_logement_accession_propriete_in :
      CalculAidePersonnaliseeLogementAccessionProprieteIn.t) :
    CalculAidePersonnaliseeLogementAccessionProprieteOut.t =
  let mensualite_principale_ : money =
    calcul_aide_personnalisee_logement_accession_propriete_in
      .CalculAidePersonnaliseeLogementAccessionProprieteIn
       .mensualite_principale_in
  in
  let ressources_menage_arrondies_ : money =
    calcul_aide_personnalisee_logement_accession_propriete_in
      .CalculAidePersonnaliseeLogementAccessionProprieteIn
       .ressources_menage_arrondies_in
  in
  let nombre_personnes_a_charge_ : integer =
    calcul_aide_personnalisee_logement_accession_propriete_in
      .CalculAidePersonnaliseeLogementAccessionProprieteIn
       .nombre_personnes_a_charge_in
  in
  let situation_familiale_calcul_apl_ : SituationFamilialeCalculAPL.t =
    calcul_aide_personnalisee_logement_accession_propriete_in
      .CalculAidePersonnaliseeLogementAccessionProprieteIn
       .situation_familiale_calcul_apl_in
  in
  let type_travaux_logement_ : TypeTravauxLogementD83215.t =
    calcul_aide_personnalisee_logement_accession_propriete_in
      .CalculAidePersonnaliseeLogementAccessionProprieteIn
       .type_travaux_logement_in
  in
  let date_signature_pret_ : date =
    calcul_aide_personnalisee_logement_accession_propriete_in
      .CalculAidePersonnaliseeLogementAccessionProprieteIn
       .date_signature_pret_in
  in
  let local_habite_premiere_fois_beneficiaire_ : bool =
    calcul_aide_personnalisee_logement_accession_propriete_in
      .CalculAidePersonnaliseeLogementAccessionProprieteIn
       .local_habite_premiere_fois_beneficiaire_in
  in
  let date_entree_logement_ : date =
    calcul_aide_personnalisee_logement_accession_propriete_in
      .CalculAidePersonnaliseeLogementAccessionProprieteIn
       .date_entree_logement_in
  in
  let copropriete_ : bool =
    calcul_aide_personnalisee_logement_accession_propriete_in
      .CalculAidePersonnaliseeLogementAccessionProprieteIn.copropriete_in
  in
  let situation_r822_11_13_17_ : bool =
    calcul_aide_personnalisee_logement_accession_propriete_in
      .CalculAidePersonnaliseeLogementAccessionProprieteIn
       .situation_r822_11_13_17_in
  in
  let zone_ : ZoneDHabitation.t =
    calcul_aide_personnalisee_logement_accession_propriete_in
      .CalculAidePersonnaliseeLogementAccessionProprieteIn.zone_in
  in
  let type_pret_ : TypePret.t =
    calcul_aide_personnalisee_logement_accession_propriete_in
      .CalculAidePersonnaliseeLogementAccessionProprieteIn.type_pret_in
  in
  let anciennete_logement_ : NeufOuAncien.t =
    calcul_aide_personnalisee_logement_accession_propriete_in
      .CalculAidePersonnaliseeLogementAccessionProprieteIn
       .anciennete_logement_in
  in
  let date_courante_ : date =
    calcul_aide_personnalisee_logement_accession_propriete_in
      .CalculAidePersonnaliseeLogementAccessionProprieteIn.date_courante_in
  in
  let montant_forfaitaire_d832_10_ : money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "montant_forfaitaire_d832_10";
      ]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 2578;
                 start_column = 14;
                 end_line = 2578;
                 end_column = 41;
                 law_headings =
                   [
                     "Article 20";
                     "Chapitre IV : Calcul de l'aide personnalisée au logement \
                      en secteur accession";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) -> money_of_cents_string "500")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 720;
                start_column = 11;
                end_line = 720;
                end_column = 38;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let montant_minimal_aide_d832_10_ : money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "montant_minimal_aide_d832_10";
      ]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 2589;
                 start_column = 14;
                 end_line = 2589;
                 end_column = 42;
                 law_headings =
                   [
                     "Article 21";
                     "Chapitre IV : Calcul de l'aide personnalisée au logement \
                      en secteur accession";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) -> money_of_cents_string "1000")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 721;
                start_column = 11;
                end_line = 721;
                end_column = 39;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let coefficient_multiplicateur_d832_11_ : money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "coefficient_multiplicateur_d832_11";
      ]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 2598;
                 start_column = 15;
                 end_line = 2598;
                 end_column = 49;
                 law_headings =
                   [
                     "Article 22";
                     "Chapitre IV : Calcul de l'aide personnalisée au logement \
                      en secteur accession";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) -> money_of_cents_string "2211133")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 723;
                start_column = 11;
                end_line = 723;
                end_column = 45;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let coefficient_multiplicateur_d832_18_ : decimal =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "coefficient_multiplicateur_d832_18";
      ]
      embed_decimal
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 2690;
                 start_column = 14;
                 end_line = 2690;
                 end_column = 48;
                 law_headings =
                   [
                     "Article 26";
                     "Chapitre IV : Calcul de l'aide personnalisée au logement \
                      en secteur accession";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) -> decimal_of_string "16.25")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 724;
                start_column = 11;
                end_line = 724;
                end_column = 45;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let montant_limite_tranches_d832_15_1_ : money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "montant_limite_tranches_d832_15_1";
      ]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 2613;
                 start_column = 14;
                 end_line = 2613;
                 end_column = 47;
                 law_headings =
                   [
                     "Article 23";
                     "Chapitre IV : Calcul de l'aide personnalisée au logement \
                      en secteur accession";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) -> money_of_cents_string "560085")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 725;
                start_column = 11;
                end_line = 725;
                end_column = 44;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let taux_tranche_inferieure_d832_15_1_ : decimal =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "taux_tranche_inférieure_d832_15_1";
      ]
      embed_decimal
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 2614;
                 start_column = 14;
                 end_line = 2614;
                 end_column = 47;
                 law_headings =
                   [
                     "Article 23";
                     "Chapitre IV : Calcul de l'aide personnalisée au logement \
                      en secteur accession";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) -> decimal_of_string "0.208")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 726;
                start_column = 11;
                end_line = 726;
                end_column = 44;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let taux_tranche_superieure_d832_15_1_ : decimal =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "taux_tranche_supérieure_d832_15_1";
      ]
      embed_decimal
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 2615;
                 start_column = 14;
                 end_line = 2615;
                 end_column = 47;
                 law_headings =
                   [
                     "Article 23";
                     "Chapitre IV : Calcul de l'aide personnalisée au logement \
                      en secteur accession";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) -> decimal_of_string "0.416")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 727;
                start_column = 11;
                end_line = 727;
                end_column = 44;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let taux_francs_vers_euros_ : decimal =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "taux_francs_vers_euros";
      ]
      embed_decimal
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/autres_sources.catala_fr";
                 start_line = 275;
                 start_column = 14;
                 end_line = 275;
                 end_column = 36;
                 law_headings =
                   [
                     "Article premier";
                     "Règlement (CE) n°2866/98 du conseil du 31 décembre 1998 \
                      concernant les taux de conversion entre l'euro et les \
                      monnaies des États membres adoptant l'euro";
                   ];
               }
               true)
           (fun (_ : _) ->
             decimal_of_string "1." /& decimal_of_string "6.55957")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 728;
                start_column = 11;
                end_line = 728;
                end_column = 33;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let calcul_nombre_parts_dot_nombre_personnes_a_charge_ : integer =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogementAccessionPropriété";
          "calcul_nombre_parts.nombre_personnes_à_charge";
        ]
        embed_integer
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3352;
                 start_column = 14;
                 end_line = 3352;
                 end_column = 59;
                 law_headings =
                   [
                     "Article D832-11";
                     "Section 2 : Accession à la propriété";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> nombre_personnes_a_charge_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 681;
             start_column = 10;
             end_line = 681;
             end_column = 35;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_nombre_parts_dot_situation_familiale_calcul_apl_ :
      SituationFamilialeCalculAPL.t =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogementAccessionPropriété";
          "calcul_nombre_parts.situation_familiale_calcul_apl";
        ]
        embed_situation_familiale_calcul_a_p_l
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3354;
                 start_column = 14;
                 end_line = 3354;
                 end_column = 64;
                 law_headings =
                   [
                     "Article D832-11";
                     "Section 2 : Accession à la propriété";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> situation_familiale_calcul_apl_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 682;
             start_column = 10;
             end_line = 682;
             end_column = 40;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : CalculNombrePartsAccessionProprieteOut.t =
    log_end_call
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "calcul_nombre_parts";
        "CalculNombrePartsAccessionPropriété";
      ]
      ((log_begin_call
          [
            "CalculAidePersonnaliséeLogementAccessionPropriété";
            "calcul_nombre_parts";
            "CalculNombrePartsAccessionPropriété";
          ]
          calcul_nombre_parts_accession_propriete)
         {
           CalculNombrePartsAccessionProprieteIn.nombre_personnes_a_charge_in =
             calcul_nombre_parts_dot_nombre_personnes_a_charge_;
           CalculNombrePartsAccessionProprieteIn
           .situation_familiale_calcul_apl_in =
             calcul_nombre_parts_dot_situation_familiale_calcul_apl_;
         })
  in
  let calcul_nombre_parts_dot_n_nombre_parts_d832_11_ : decimal =
    result_.CalculNombrePartsAccessionProprieteOut.n_nombre_parts_d832_11_out
  in
  let coefficient_multiplicateur_d832_17_3_ : decimal =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "coefficient_multiplicateur_d832_17_3";
      ]
      embed_decimal
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 2672;
                 start_column = 14;
                 end_line = 2672;
                 end_column = 50;
                 law_headings =
                   [
                     "Article 25";
                     "Chapitre IV : Calcul de l'aide personnalisée au logement \
                      en secteur accession";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) ->
             match anciennete_logement_ with
             | NeufOuAncien.Neuf _ ->
               if date_signature_pret_ <=@ date_of_numbers 1998 10 1 then
                 decimal_of_string "0.0226"
               else decimal_of_string "0.0234"
             | NeufOuAncien.Ancien ameliore_par_occupant_ -> (
               match ameliore_par_occupant_ with
               | AmelioreParOccupant.Oui _ -> decimal_of_string "0.0172"
               | AmelioreParOccupant.Non _ ->
                 if date_signature_pret_ <=@ date_of_numbers 1998 10 1 then
                   decimal_of_string "0.0226"
                 else decimal_of_string "0.0234"))
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 722;
                start_column = 11;
                end_line = 722;
                end_column = 47;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let contributions_sociales_dot_date_courante_ : date =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogementAccessionPropriété";
          "contributions_sociales.date_courante";
        ]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 744;
                 start_column = 14;
                 end_line = 744;
                 end_column = 50;
                 law_headings =
                   [
                     "Secteur accession à la propriété";
                     "Calcul du montant de l'aide personnalisée au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 544;
             start_column = 10;
             end_line = 544;
             end_column = 23;
             law_headings =
               [
                 "Calcul des contributions sociales s'appliquant aux aides \
                  personnelles au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : ContributionsSocialesAidesPersonnelleLogementOut.t =
    log_end_call
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "contributions_sociales";
        "ContributionsSocialesAidesPersonnelleLogement";
      ]
      ((log_begin_call
          [
            "CalculAidePersonnaliséeLogementAccessionPropriété";
            "contributions_sociales";
            "ContributionsSocialesAidesPersonnelleLogement";
          ]
          contributions_sociales_aides_personnelle_logement)
         {
           ContributionsSocialesAidesPersonnelleLogementIn.date_courante_in =
             contributions_sociales_dot_date_courante_;
         })
  in
  let contributions_sociales_dot_montant_ : money -> money =
    result_.ContributionsSocialesAidesPersonnelleLogementOut.montant_out
  in
  let montant_forfaitaire_charges_d832_10_ : money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "montant_forfaitaire_charges_d832_10";
      ]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default [||]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/arrete_2019-09-27.catala_fr";
                             start_line = 2646;
                             start_column = 7;
                             end_line = 2646;
                             end_column = 18;
                             law_headings =
                               [
                                 "Article 24";
                                 "Chapitre IV : Calcul de l'aide personnalisée \
                                  au logement en secteur accession";
                                 "Arrêté du 27 septembre 2019 relatif au \
                                  calcul des aides personnelles au logement et \
                                  de la prime de déménagement";
                               ];
                           }
                           (date_courante_ >=@ date_of_numbers 2021 10 1
                           && copropriete_))
                       (fun (_ : _) ->
                         (match situation_familiale_calcul_apl_ with
                         | SituationFamilialeCalculAPL.PersonneSeule _ ->
                           money_of_cents_string "2710"
                         | SituationFamilialeCalculAPL.Couple _ ->
                           money_of_cents_string "5422")
                         +$ money_of_cents_string "1229"
                            *$ decimal_of_integer nombre_personnes_a_charge_));
                   (fun (_ : _) ->
                     handle_default [||]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/archives.catala_fr";
                             start_line = 464;
                             start_column = 7;
                             end_line = 464;
                             end_column = 18;
                             law_headings =
                               [
                                 "Article 24";
                                 "Arrêté du 27 septembre 2019 relatif au \
                                  calcul des aides personnelles au logement et \
                                  de la prime de déménagement";
                                 "Articles valables du 1er octobre 2020 au 1er \
                                  octobre 2021";
                                 "Archives législatives et réglementaires";
                               ];
                           }
                           ((date_courante_ <@ date_of_numbers 2021 10 1
                            && date_courante_ >=@ date_of_numbers 2020 10 1)
                           && copropriete_))
                       (fun (_ : _) ->
                         (match situation_familiale_calcul_apl_ with
                         | SituationFamilialeCalculAPL.PersonneSeule _ ->
                           money_of_cents_string "2699"
                         | SituationFamilialeCalculAPL.Couple _ ->
                           money_of_cents_string "5399")
                         +$ money_of_cents_string "1224"
                            *$ decimal_of_integer nombre_personnes_a_charge_));
                 |]
                 (fun (_ : _) -> false)
                 (fun (_ : _) -> raise EmptyError));
           |]
           (fun (_ : _) -> true)
           (fun (_ : _) ->
             handle_default
               [|
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 2567;
                           start_column = 29;
                           end_line = 2567;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 19";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2021 10 1))
                     (fun (_ : _) ->
                       money_of_cents_string "5422"
                       +$ money_of_cents_string "1229"
                          *$ decimal_of_integer nombre_personnes_a_charge_));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/archives.catala_fr";
                           start_line = 429;
                           start_column = 29;
                           end_line = 429;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 19";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                               "Articles valables du 1er octobre 2020 au 1er \
                                octobre 2021";
                               "Archives législatives et réglementaires";
                             ];
                         }
                         (date_courante_ <@ date_of_numbers 2021 10 1
                         && date_courante_ >=@ date_of_numbers 2020 10 1))
                     (fun (_ : _) ->
                       money_of_cents_string "5399"
                       +$ money_of_cents_string "1224"
                          *$ decimal_of_integer nombre_personnes_a_charge_));
               |]
               (fun (_ : _) -> false)
               (fun (_ : _) -> raise EmptyError))
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 719;
                start_column = 11;
                end_line = 719;
                end_column = 46;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let traitement_aide_finale_minoration_forfaitaire_ : money -> money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "traitement_aide_finale_minoration_forfaitaire";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 3194;
                     start_column = 14;
                     end_line = 3194;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D832-10";
                         "Section 2 : Accession à la propriété";
                         "Chapitre II : Modalités de liquidation et de \
                          versement de l'aide personnalisée au logement";
                         "Titre III : Aide personnalisée au logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   param_ -$ montant_forfaitaire_d832_10_
                   >=$ money_of_cents_string "0"
                 then param_ -$ montant_forfaitaire_d832_10_
                 else money_of_cents_string "0")
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 738;
                    start_column = 10;
                    end_line = 738;
                    end_column = 32;
                    law_headings =
                      [
                        "Secteur accession à la propriété";
                        "Calcul du montant de l'aide personnalisée au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 738;
                start_column = 10;
                end_line = 738;
                end_column = 32;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let ressources_menage_avec_d832_18_ : money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "ressources_ménage_avec_d832_18";
      ]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 3660;
                       start_column = 5;
                       end_line = 3660;
                       end_column = 28;
                       law_headings =
                         [
                           "Article D832-18";
                           "Section 2 : Accession à la propriété";
                           "Chapitre II : Modalités de liquidation et de \
                            versement de l'aide personnalisée au logement";
                           "Titre III : Aide personnalisée au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     situation_r822_11_13_17_)
                 (fun (_ : _) -> ressources_menage_arrondies_));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3652;
                 start_column = 14;
                 end_line = 3652;
                 end_column = 44;
                 law_headings =
                   [
                     "Article D832-18";
                     "Section 2 : Accession à la propriété";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             if
               ressources_menage_arrondies_
               <=$ mensualite_principale_ *$ coefficient_multiplicateur_d832_18_
             then mensualite_principale_ *$ coefficient_multiplicateur_d832_18_
             else ressources_menage_arrondies_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 718;
                start_column = 11;
                end_line = 718;
                end_column = 41;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let calcul_plafond_mensualite_d832_10_3_ : date -> money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "calcul_plafond_mensualité_d832_10_3";
      ]
      unembeddable
      (try
         fun (param_ : date) ->
           try
             handle_default
               [|
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 621;
                           start_column = 5;
                           end_line = 624;
                           end_column = 33;
                           law_headings =
                             [
                               "Article 17";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 1992 6 30
                         && param_ <@ date_of_numbers 1994 11 27
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> true
                            | NeufOuAncien.Ancien _ -> false)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> true
                         | TypePret.D331_63_64 _ -> false
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       (match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "208500"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "251500"
                         else
                           money_of_cents_string "294500"
                           +$ money_of_cents_string "43000"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "186000"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "223900"
                         else
                           money_of_cents_string "261800"
                           +$ money_of_cents_string "37900"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "173600"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "208200"
                         else
                           money_of_cents_string "242800"
                           +$ money_of_cents_string "35600"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1"))
                       *$ taux_francs_vers_euros_));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 665;
                           start_column = 5;
                           end_line = 668;
                           end_column = 33;
                           law_headings =
                             [
                               "Article 17";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 1992 6 30
                         && param_ <@ date_of_numbers 1994 11 27
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> false
                            | NeufOuAncien.Ancien _ -> true)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> true
                         | TypePret.D331_63_64 _ -> false
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       (match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "167800"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "202500"
                         else
                           money_of_cents_string "237200"
                           +$ money_of_cents_string "37400"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "146900"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "180100"
                         else
                           money_of_cents_string "210600"
                           +$ money_of_cents_string "30500"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "139700"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "167600"
                         else
                           money_of_cents_string "195500"
                           +$ money_of_cents_string "27900"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1"))
                       *$ taux_francs_vers_euros_));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 710;
                           start_column = 5;
                           end_line = 712;
                           end_column = 33;
                           law_headings =
                             [
                               "Article 17";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 1994 11 27
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> true
                            | NeufOuAncien.Ancien _ -> false)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> true
                         | TypePret.D331_63_64 _ -> false
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       (match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "184000"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "220000"
                         else
                           money_of_cents_string "260000"
                           +$ money_of_cents_string "38000"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "164200"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "197700"
                         else
                           money_of_cents_string "231200"
                           +$ money_of_cents_string "33500"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "153200"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "183700"
                         else
                           money_of_cents_string "214200"
                           +$ money_of_cents_string "30500"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1"))
                       *$ taux_francs_vers_euros_));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 753;
                           start_column = 5;
                           end_line = 755;
                           end_column = 33;
                           law_headings =
                             [
                               "Article 17";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 1994 11 27
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> false
                            | NeufOuAncien.Ancien _ -> true)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> true
                         | TypePret.D331_63_64 _ -> false
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       (match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "148100"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "178700"
                         else
                           money_of_cents_string "209300"
                           +$ money_of_cents_string "30600"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "132000"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "158900"
                         else
                           money_of_cents_string "185800"
                           +$ money_of_cents_string "26900"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "123300"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "147900"
                         else
                           money_of_cents_string "172500"
                           +$ money_of_cents_string "24600"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1"))
                       *$ taux_francs_vers_euros_));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 804;
                           start_column = 5;
                           end_line = 807;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 1992 6 30
                         && param_ <@ date_of_numbers 1994 11 27
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> true
                            | NeufOuAncien.Ancien _ -> false)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       (match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "208500"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "251500"
                         else
                           money_of_cents_string "294500"
                           +$ money_of_cents_string "43000"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "186000"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "223900"
                         else
                           money_of_cents_string "261800"
                           +$ money_of_cents_string "37900"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "173600"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "208200"
                         else
                           money_of_cents_string "242800"
                           +$ money_of_cents_string "34600"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1"))
                       *$ taux_francs_vers_euros_));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 848;
                           start_column = 5;
                           end_line = 854;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 1992 6 30
                         && param_ <@ date_of_numbers 1994 11 27
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> false
                            | NeufOuAncien.Ancien ameliore_par_occupant_ -> (
                              match ameliore_par_occupant_ with
                              | AmelioreParOccupant.Oui _ -> false
                              | AmelioreParOccupant.Non _ -> true))
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       (match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "167800"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "202500"
                         else
                           money_of_cents_string "237200"
                           +$ money_of_cents_string "34700"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "149600"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "223900"
                         else
                           money_of_cents_string "261800"
                           +$ money_of_cents_string "37900"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "139700"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "208200"
                         else
                           money_of_cents_string "242800"
                           +$ money_of_cents_string "34600"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1"))
                       *$ taux_francs_vers_euros_));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 895;
                           start_column = 5;
                           end_line = 901;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 1992 6 30
                         && param_ <@ date_of_numbers 1994 11 27
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> false
                            | NeufOuAncien.Ancien ameliore_par_occupant_ -> (
                              match ameliore_par_occupant_ with
                              | AmelioreParOccupant.Oui _ -> true
                              | AmelioreParOccupant.Non _ -> false))
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       (if nombre_personnes_a_charge_ = integer_of_string "0"
                       then
                        match situation_familiale_calcul_apl_ with
                        | SituationFamilialeCalculAPL.PersonneSeule _ ->
                          money_of_cents_string "86900"
                        | SituationFamilialeCalculAPL.Couple _ ->
                          money_of_cents_string "97100"
                       else
                         money_of_cents_string "107300"
                         +$ money_of_cents_string "10200"
                            *$ decimal_of_integer
                                 (nombre_personnes_a_charge_
                                -! integer_of_string "1"))
                       *$ taux_francs_vers_euros_));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 927;
                           start_column = 5;
                           end_line = 930;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 1994 11 27
                         && param_ <@ date_of_numbers 2000 6 30
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> true
                            | NeufOuAncien.Ancien _ -> false)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       (match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "198100"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "239000"
                         else
                           money_of_cents_string "279900"
                           +$ money_of_cents_string "40900"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "176800"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "212800"
                         else
                           money_of_cents_string "248800"
                           +$ money_of_cents_string "36000"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "165000"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "197900"
                         else
                           money_of_cents_string "230800"
                           +$ money_of_cents_string "32900"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1"))
                       *$ taux_francs_vers_euros_));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 971;
                           start_column = 5;
                           end_line = 974;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 1994 11 27
                         && param_ <@ date_of_numbers 2000 6 30
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> false
                            | NeufOuAncien.Ancien _ -> true)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       (match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "159500"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "192500"
                         else
                           money_of_cents_string "225500"
                           +$ money_of_cents_string "33000"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "142200"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "171200"
                         else
                           money_of_cents_string "200200"
                           +$ money_of_cents_string "29000"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "132800"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "159300"
                         else
                           money_of_cents_string "185800"
                           +$ money_of_cents_string "26500"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1"))
                       *$ taux_francs_vers_euros_));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1016;
                           start_column = 5;
                           end_line = 1019;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2000 6 30
                         && param_ <=@ date_of_numbers 2001 6 30
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> true
                            | NeufOuAncien.Ancien _ -> false)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       (match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "200100"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "141400"
                         else
                           money_of_cents_string "282700"
                           +$ money_of_cents_string "41300"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "178600"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "215000"
                         else
                           money_of_cents_string "251400"
                           +$ money_of_cents_string "36400"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "166700"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "199900"
                         else
                           money_of_cents_string "233100"
                           +$ money_of_cents_string "33200"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1"))
                       *$ taux_francs_vers_euros_));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1060;
                           start_column = 5;
                           end_line = 1063;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2000 6 30
                         && param_ <=@ date_of_numbers 2001 6 30
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> false
                            | NeufOuAncien.Ancien _ -> true)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       (match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "161100"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "194400"
                         else
                           money_of_cents_string "227700"
                           +$ money_of_cents_string "33300"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "143600"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "172900"
                         else
                           money_of_cents_string "202200"
                           +$ money_of_cents_string "29300"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "134100"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "160900"
                         else
                           money_of_cents_string "187700"
                           +$ money_of_cents_string "26800"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1"))
                       *$ taux_francs_vers_euros_));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1107;
                           start_column = 5;
                           end_line = 1110;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2001 7 1
                         && param_ <@ date_of_numbers 2001 12 31
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> true
                            | NeufOuAncien.Ancien _ -> false)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       (match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "202500"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "244300"
                         else
                           money_of_cents_string "286100"
                           +$ money_of_cents_string "41800"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "180700"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "217500"
                         else
                           money_of_cents_string "254300"
                           +$ money_of_cents_string "36800"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "168700"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "202300"
                         else
                           money_of_cents_string "235900"
                           +$ money_of_cents_string "33600"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1"))
                       *$ taux_francs_vers_euros_));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1150;
                           start_column = 5;
                           end_line = 1153;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2002 1 1
                         && param_ <@ date_of_numbers 2002 6 30
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> true
                            | NeufOuAncien.Ancien _ -> false)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "30871"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "37243"
                         else
                           money_of_cents_string "43615"
                           +$ money_of_cents_string "6372"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "27548"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "33148"
                         else
                           money_of_cents_string "38768"
                           +$ money_of_cents_string "5610"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "25718"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "30840"
                         else
                           money_of_cents_string "35962"
                           +$ money_of_cents_string "5122"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1196;
                           start_column = 5;
                           end_line = 1199;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2001 7 1
                         && param_ <@ date_of_numbers 2001 12 31
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> false
                            | NeufOuAncien.Ancien _ -> true)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       (match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "163000"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "196700"
                         else
                           money_of_cents_string "230400"
                           +$ money_of_cents_string "33700"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "145300"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "175000"
                         else
                           money_of_cents_string "204700"
                           +$ money_of_cents_string "29700"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "135700"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "162800"
                         else
                           money_of_cents_string "189900"
                           +$ money_of_cents_string "27100"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1"))
                       *$ taux_francs_vers_euros_));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1239;
                           start_column = 5;
                           end_line = 1242;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2002 1 1
                         && param_ <@ date_of_numbers 2002 6 30
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> false
                            | NeufOuAncien.Ancien _ -> true)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "24849"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "29987"
                         else
                           money_of_cents_string "35125"
                           +$ money_of_cents_string "5138"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "22151"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "26679"
                         else
                           money_of_cents_string "31207"
                           +$ money_of_cents_string "4528"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "20687"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "24818"
                         else
                           money_of_cents_string "28949"
                           +$ money_of_cents_string "4131"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1284;
                           start_column = 5;
                           end_line = 1287;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2002 6 30
                         && param_ <@ date_of_numbers 2003 6 30
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> true
                            | NeufOuAncien.Ancien _ -> false)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "31241"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "37689"
                         else
                           money_of_cents_string "44137"
                           +$ money_of_cents_string "6448"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "27879"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "33556"
                         else
                           money_of_cents_string "39233"
                           +$ money_of_cents_string "5677"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "26027"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "31210"
                         else
                           money_of_cents_string "36393"
                           +$ money_of_cents_string "5183"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1328;
                           start_column = 5;
                           end_line = 1331;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2002 6 30
                         && param_ <@ date_of_numbers 2003 6 30
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> false
                            | NeufOuAncien.Ancien _ -> true)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "25147"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "30347"
                         else
                           money_of_cents_string "35547"
                           +$ money_of_cents_string "5200"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "22417"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "26999"
                         else
                           money_of_cents_string "31581"
                           +$ money_of_cents_string "4582"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "20935"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "25116"
                         else
                           money_of_cents_string "29297"
                           +$ money_of_cents_string "4181"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1373;
                           start_column = 5;
                           end_line = 1376;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2003 6 30
                         && param_ <@ date_of_numbers 2005 8 31
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> true
                            | NeufOuAncien.Ancien _ -> false)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "31616"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "38141"
                         else
                           money_of_cents_string "44666"
                           +$ money_of_cents_string "6525"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "28214"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "33959"
                         else
                           money_of_cents_string "39704"
                           +$ money_of_cents_string "5745"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "26339"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "31584"
                         else
                           money_of_cents_string "36829"
                           +$ money_of_cents_string "5245"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1417;
                           start_column = 5;
                           end_line = 1420;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2003 6 30
                         && param_ <@ date_of_numbers 2005 8 31
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> false
                            | NeufOuAncien.Ancien _ -> true)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "25449"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "30711"
                         else
                           money_of_cents_string "35973"
                           +$ money_of_cents_string "5262"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "22686"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "27323"
                         else
                           money_of_cents_string "31960"
                           +$ money_of_cents_string "4637"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "21186"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "25417"
                         else
                           money_of_cents_string "26948"
                           +$ money_of_cents_string "4231"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1462;
                           start_column = 5;
                           end_line = 1465;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2005 8 31
                         && param_ <@ date_of_numbers 2006 12 31
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> true
                            | NeufOuAncien.Ancien _ -> false)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "32185"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "38827"
                         else
                           money_of_cents_string "45469"
                           +$ money_of_cents_string "6642"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "28722"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "34570"
                         else
                           money_of_cents_string "40418"
                           +$ money_of_cents_string "5848"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "26813"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "32152"
                         else
                           money_of_cents_string "37491"
                           +$ money_of_cents_string "5339"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1506;
                           start_column = 5;
                           end_line = 1509;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2005 8 31
                         && param_ <@ date_of_numbers 2006 12 31
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> false
                            | NeufOuAncien.Ancien _ -> true)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "25907"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "31264"
                         else
                           money_of_cents_string "36621"
                           +$ money_of_cents_string "5357"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "23094"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "27814"
                         else
                           money_of_cents_string "32534"
                           +$ money_of_cents_string "4720"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "21567"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "25874"
                         else
                           money_of_cents_string "30881"
                           +$ money_of_cents_string "4307"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1551;
                           start_column = 5;
                           end_line = 1554;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2006 12 31
                         && param_ <@ date_of_numbers 2007 12 31
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> true
                            | NeufOuAncien.Ancien _ -> false)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "33026"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "39914"
                         else
                           money_of_cents_string "46742"
                           +$ money_of_cents_string "6828"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "29526"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "35538"
                         else
                           money_of_cents_string "41550"
                           +$ money_of_cents_string "6012"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "27564"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "33052"
                         else
                           money_of_cents_string "38541"
                           +$ money_of_cents_string "5488"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1595;
                           start_column = 5;
                           end_line = 1598;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2006 12 31
                         && param_ <@ date_of_numbers 2007 12 31
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> false
                            | NeufOuAncien.Ancien _ -> true)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "26632"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "32139"
                         else
                           money_of_cents_string "37646"
                           +$ money_of_cents_string "5507"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "23741"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "28593"
                         else
                           money_of_cents_string "33445"
                           +$ money_of_cents_string "4852"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "22171"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "36598"
                         else
                           money_of_cents_string "31026"
                           +$ money_of_cents_string "4428"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1640;
                           start_column = 5;
                           end_line = 1643;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2007 12 31
                         && param_ <@ date_of_numbers 2008 12 31
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> true
                            | NeufOuAncien.Ancien _ -> false)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "33999"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "41016"
                         else
                           money_of_cents_string "48032"
                           +$ money_of_cents_string "7016"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "30341"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "36519"
                         else
                           money_of_cents_string "42697"
                           +$ money_of_cents_string "6178"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "28325"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "33964"
                         else
                           money_of_cents_string "39605"
                           +$ money_of_cents_string "5639"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1684;
                           start_column = 5;
                           end_line = 1687;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2007 12 31
                         && param_ <@ date_of_numbers 2008 12 31
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> false
                            | NeufOuAncien.Ancien _ -> true)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "27367"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "33026"
                         else
                           money_of_cents_string "38685"
                           +$ money_of_cents_string "5659"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "24396"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "29382"
                         else
                           money_of_cents_string "34368"
                           +$ money_of_cents_string "4986"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "22783"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "27332"
                         else
                           money_of_cents_string "31882"
                           +$ money_of_cents_string "4550"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1729;
                           start_column = 5;
                           end_line = 1732;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2008 12 31
                         && param_ <@ date_of_numbers 2009 12 31
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> true
                            | NeufOuAncien.Ancien _ -> false)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "35002"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "42226"
                         else
                           money_of_cents_string "49449"
                           +$ money_of_cents_string "7223"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "31236"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "37596"
                         else
                           money_of_cents_string "43957"
                           +$ money_of_cents_string "6360"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "29161"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "34966"
                         else
                           money_of_cents_string "40773"
                           +$ money_of_cents_string "5805"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1773;
                           start_column = 5;
                           end_line = 1776;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2008 12 31
                         && param_ <@ date_of_numbers 2009 12 31
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> false
                            | NeufOuAncien.Ancien _ -> true)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "28174"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "34000"
                         else
                           money_of_cents_string "39826"
                           +$ money_of_cents_string "5826"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "25116"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "30249"
                         else
                           money_of_cents_string "35382"
                           +$ money_of_cents_string "5133"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "23455"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "28138"
                         else
                           money_of_cents_string "32823"
                           +$ money_of_cents_string "4684"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1818;
                           start_column = 5;
                           end_line = 1821;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2009 12 31
                         && param_ <@ date_of_numbers 2010 12 31
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> true
                            | NeufOuAncien.Ancien _ -> false)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "35114"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "42361"
                         else
                           money_of_cents_string "49607"
                           +$ money_of_cents_string "7246"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "31336"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "37716"
                         else
                           money_of_cents_string "44098"
                           +$ money_of_cents_string "6380"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "29254"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "35078"
                         else
                           money_of_cents_string "40903"
                           +$ money_of_cents_string "5824"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1862;
                           start_column = 5;
                           end_line = 1865;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2009 12 31
                         && param_ <@ date_of_numbers 2010 12 31
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> false
                            | NeufOuAncien.Ancien _ -> true)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "28264"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "34109"
                         else
                           money_of_cents_string "39953"
                           +$ money_of_cents_string "5845"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "25196"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "30346"
                         else
                           money_of_cents_string "35495"
                           +$ money_of_cents_string "5149"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "23530"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "28228"
                         else
                           money_of_cents_string "32928"
                           +$ money_of_cents_string "4699"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1907;
                           start_column = 5;
                           end_line = 1910;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2010 12 31
                         && param_ <@ date_of_numbers 2011 12 31
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> true
                            | NeufOuAncien.Ancien _ -> false)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "35500"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "42827"
                         else
                           money_of_cents_string "50153"
                           +$ money_of_cents_string "7326"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "31681"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "38131"
                         else
                           money_of_cents_string "44583"
                           +$ money_of_cents_string "6450"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "29576"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "35464"
                         else
                           money_of_cents_string "41353"
                           +$ money_of_cents_string "5888"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1951;
                           start_column = 5;
                           end_line = 1954;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2010 12 31
                         && param_ <@ date_of_numbers 2011 12 31
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> false
                            | NeufOuAncien.Ancien _ -> true)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "28575"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "34484"
                         else
                           money_of_cents_string "40392"
                           +$ money_of_cents_string "5909"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "25473"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "30680"
                         else
                           money_of_cents_string "35885"
                           +$ money_of_cents_string "5206"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "23789"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "28539"
                         else
                           money_of_cents_string "33290"
                           +$ money_of_cents_string "4751"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 1996;
                           start_column = 5;
                           end_line = 1999;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2011 12 31
                         && param_ <@ date_of_numbers 2012 12 31
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> true
                            | NeufOuAncien.Ancien _ -> false)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "35855"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "43255"
                         else
                           money_of_cents_string "50655"
                           +$ money_of_cents_string "7399"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "31998"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "38512"
                         else
                           money_of_cents_string "45029"
                           +$ money_of_cents_string "6515"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "29872"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "35819"
                         else
                           money_of_cents_string "41767"
                           +$ money_of_cents_string "5947"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 2071;
                           start_column = 5;
                           end_line = 2074;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2011 12 31
                         && param_ <@ date_of_numbers 2012 12 31
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> false
                            | NeufOuAncien.Ancien _ -> true)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "28861"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "34829"
                         else
                           money_of_cents_string "40796"
                           +$ money_of_cents_string "5968"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "25728"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "30987"
                         else
                           money_of_cents_string "36244"
                           +$ money_of_cents_string "5258"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "24027"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "28824"
                         else
                           money_of_cents_string "33623"
                           +$ money_of_cents_string "4799"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 2118;
                           start_column = 5;
                           end_line = 2121;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2012 12 31
                         && param_ <@ date_of_numbers 2014 9 30
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> true
                            | NeufOuAncien.Ancien _ -> false)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "36626"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "44185"
                         else
                           money_of_cents_string "51744"
                           +$ money_of_cents_string "7558"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "32686"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "39340"
                         else
                           money_of_cents_string "45997"
                           +$ money_of_cents_string "6655"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "30514"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "36589"
                         else
                           money_of_cents_string "42665"
                           +$ money_of_cents_string "6075"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 2162;
                           start_column = 5;
                           end_line = 2165;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2012 12 31
                         && param_ <@ date_of_numbers 2014 9 30
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> false
                            | NeufOuAncien.Ancien _ -> true)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "29482"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "35578"
                         else
                           money_of_cents_string "41673"
                           +$ money_of_cents_string "6096"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "26281"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "31653"
                         else
                           money_of_cents_string "37023"
                           +$ money_of_cents_string "5371"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "24544"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "29444"
                         else
                           money_of_cents_string "34346"
                           +$ money_of_cents_string "4902"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 2207;
                           start_column = 5;
                           end_line = 2210;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2014 9 30
                         && param_ <@ date_of_numbers 2015 9 30
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> true
                            | NeufOuAncien.Ancien _ -> false)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "36835"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "44437"
                         else
                           money_of_cents_string "52039"
                           +$ money_of_cents_string "7601"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "32872"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "39564"
                         else
                           money_of_cents_string "46259"
                           +$ money_of_cents_string "6693"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "30688"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "36798"
                         else
                           money_of_cents_string "42908"
                           +$ money_of_cents_string "6110"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 2251;
                           start_column = 5;
                           end_line = 2254;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2014 9 30
                         && param_ <@ date_of_numbers 2015 9 30
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> false
                            | NeufOuAncien.Ancien _ -> true)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "29650"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "35781"
                         else
                           money_of_cents_string "41911"
                           +$ money_of_cents_string "6131"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "26431"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "31833"
                         else
                           money_of_cents_string "37234"
                           +$ money_of_cents_string "5402"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "24684"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "29612"
                         else
                           money_of_cents_string "34542"
                           +$ money_of_cents_string "4930"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 2296;
                           start_column = 5;
                           end_line = 2299;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2015 9 30
                         && param_ <@ date_of_numbers 2017 9 30
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> true
                            | NeufOuAncien.Ancien _ -> false)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "36864"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "44473"
                         else
                           money_of_cents_string "52081"
                           +$ money_of_cents_string "7607"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "32898"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "39596"
                         else
                           money_of_cents_string "46296"
                           +$ money_of_cents_string "6698"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "30713"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "36827"
                         else
                           money_of_cents_string "42942"
                           +$ money_of_cents_string "6115"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 2340;
                           start_column = 5;
                           end_line = 2343;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2015 9 30
                         && param_ <@ date_of_numbers 2017 9 30
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> false
                            | NeufOuAncien.Ancien _ -> true)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "29674"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "35810"
                         else
                           money_of_cents_string "41945"
                           +$ money_of_cents_string "6136"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "26452"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "31858"
                         else
                           money_of_cents_string "37264"
                           +$ money_of_cents_string "5406"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "24704"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "29636"
                         else
                           money_of_cents_string "34570"
                           +$ money_of_cents_string "4934"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 2385;
                           start_column = 5;
                           end_line = 2388;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2017 9 30
                         && param_ <@ date_of_numbers 2019 9 30
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> true
                            | NeufOuAncien.Ancien _ -> false)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "37140"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "44807"
                         else
                           money_of_cents_string "52472"
                           +$ money_of_cents_string "7664"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "33145"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "39893"
                         else
                           money_of_cents_string "46643"
                           +$ money_of_cents_string "6748"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "30943"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "37103"
                         else
                           money_of_cents_string "43264"
                           +$ money_of_cents_string "6161"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 2429;
                           start_column = 5;
                           end_line = 2432;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2017 9 30
                         && param_ <@ date_of_numbers 2019 9 30
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> false
                            | NeufOuAncien.Ancien _ -> true)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "29897"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "36079"
                         else
                           money_of_cents_string "42260"
                           +$ money_of_cents_string "6182"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "26650"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "32097"
                         else
                           money_of_cents_string "37543"
                           +$ money_of_cents_string "5447"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "24889"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "29858"
                         else
                           money_of_cents_string "34829"
                           +$ money_of_cents_string "4971"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 2474;
                           start_column = 5;
                           end_line = 2476;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2019 9 30
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> true
                            | NeufOuAncien.Ancien _ -> false)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "37252"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "44941"
                         else
                           money_of_cents_string "52629"
                           +$ money_of_cents_string "7687"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "33244"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "40013"
                         else
                           money_of_cents_string "46783"
                           +$ money_of_cents_string "6768"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "31036"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "37215"
                         else
                           money_of_cents_string "43394"
                           +$ money_of_cents_string "6179"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 2517;
                           start_column = 5;
                           end_line = 2519;
                           end_column = 36;
                           law_headings =
                             [
                               "Article 18";
                               "Chapitre IV : Calcul de l'aide personnalisée \
                                au logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (param_ >=@ date_of_numbers 2019 9 30
                         && (match anciennete_logement_ with
                            | NeufOuAncien.Neuf _ -> false
                            | NeufOuAncien.Ancien _ -> true)
                         &&
                         match type_pret_ with
                         | TypePret.D331_32 _ -> false
                         | TypePret.D331_63_64 _ -> true
                         | TypePret.D331_59_8 _ -> false
                         | TypePret.D331_76_1 _ -> false
                         | TypePret.Autre _ -> false))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "29986"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "36187"
                         else
                           money_of_cents_string "42386"
                           +$ money_of_cents_string "6201"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "26730"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "32193"
                         else
                           money_of_cents_string "37656"
                           +$ money_of_cents_string "5463"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "24964"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "29948"
                         else
                           money_of_cents_string "34934"
                           +$ money_of_cents_string "4986"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "1")));
               |]
               (fun (_ : _) -> false)
               (fun (_ : _) -> raise EmptyError)
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 709;
                    start_column = 11;
                    end_line = 709;
                    end_column = 46;
                    law_headings =
                      [
                        "Secteur accession à la propriété";
                        "Calcul du montant de l'aide personnalisée au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 709;
                start_column = 11;
                end_line = 709;
                end_column = 46;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let n_nombre_parts_d832_11_ : decimal =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "n_nombre_parts_d832_11";
      ]
      embed_decimal
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3350;
                 start_column = 14;
                 end_line = 3350;
                 end_column = 36;
                 law_headings =
                   [
                     "Article D832-11";
                     "Section 2 : Accession à la propriété";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> calcul_nombre_parts_dot_n_nombre_parts_d832_11_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 710;
                start_column = 11;
                end_line = 710;
                end_column = 33;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let depense_nette_minimale_d832_10_ : money -> money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "dépense_nette_minimale_d832_10";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default
               [|
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/code_construction_reglementaire.catala_fr";
                           start_line = 3599;
                           start_column = 5;
                           end_line = 3599;
                           end_column = 41;
                           law_headings =
                             [
                               "Article D832-17";
                               "Section 2 : Accession à la propriété";
                               "Chapitre II : Modalités de liquidation et de \
                                versement de l'aide personnalisée au logement";
                               "Titre III : Aide personnalisée au logement";
                               "Livre VIII : Aides personnelles au logement";
                               "Partie réglementaire";
                               "Code de la construction et de l'habitation";
                             ];
                         }
                         (date_signature_pret_ >=@ date_of_numbers 1999 6 30))
                     (fun (_ : _) ->
                       mensualite_principale_
                       +$ montant_forfaitaire_charges_d832_10_ -$ param_));
               |]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 3610;
                     start_column = 14;
                     end_line = 3610;
                     end_column = 44;
                     law_headings =
                       [
                         "Article D832-17";
                         "Section 2 : Accession à la propriété";
                         "Chapitre II : Modalités de liquidation et de \
                          versement de l'aide personnalisée au logement";
                         "Titre III : Aide personnalisée au logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) -> mensualite_principale_ -$ param_)
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 715;
                    start_column = 11;
                    end_line = 715;
                    end_column = 41;
                    law_headings =
                      [
                        "Secteur accession à la propriété";
                        "Calcul du montant de l'aide personnalisée au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 715;
                start_column = 11;
                end_line = 715;
                end_column = 41;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let plafond_mensualite_d832_10_3_base_ : money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "plafond_mensualité_d832_10_3_base";
      ]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 3437;
                       start_column = 5;
                       end_line = 3437;
                       end_column = 44;
                       law_headings =
                         [
                           "Article D832-14";
                           "Section 2 : Accession à la propriété";
                           "Chapitre II : Modalités de liquidation et de \
                            versement de l'aide personnalisée au logement";
                           "Titre III : Aide personnalisée au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     local_habite_premiere_fois_beneficiaire_)
                 (fun (_ : _) ->
                   if
                     log_end_call
                       [
                         "CalculAidePersonnaliséeLogementAccessionPropriété";
                         "calcul_plafond_mensualité_d832_10_3";
                       ]
                       (log_variable_definition
                          [
                            "CalculAidePersonnaliséeLogementAccessionPropriété";
                            "calcul_plafond_mensualité_d832_10_3";
                            "output";
                          ]
                          embed_money
                          ((log_begin_call
                              [
                                "CalculAidePersonnaliséeLogementAccessionPropriété";
                                "calcul_plafond_mensualité_d832_10_3";
                              ]
                              calcul_plafond_mensualite_d832_10_3_)
                             (log_variable_definition
                                [
                                  "CalculAidePersonnaliséeLogementAccessionPropriété";
                                  "calcul_plafond_mensualité_d832_10_3";
                                  "input";
                                ]
                                embed_date date_signature_pret_)))
                     <$ log_end_call
                          [
                            "CalculAidePersonnaliséeLogementAccessionPropriété";
                            "calcul_plafond_mensualité_d832_10_3";
                          ]
                          (log_variable_definition
                             [
                               "CalculAidePersonnaliséeLogementAccessionPropriété";
                               "calcul_plafond_mensualité_d832_10_3";
                               "output";
                             ]
                             embed_money
                             ((log_begin_call
                                 [
                                   "CalculAidePersonnaliséeLogementAccessionPropriété";
                                   "calcul_plafond_mensualité_d832_10_3";
                                 ]
                                 calcul_plafond_mensualite_d832_10_3_)
                                (log_variable_definition
                                   [
                                     "CalculAidePersonnaliséeLogementAccessionPropriété";
                                     "calcul_plafond_mensualité_d832_10_3";
                                     "input";
                                   ]
                                   embed_date date_entree_logement_)))
                   then
                     log_end_call
                       [
                         "CalculAidePersonnaliséeLogementAccessionPropriété";
                         "calcul_plafond_mensualité_d832_10_3";
                       ]
                       (log_variable_definition
                          [
                            "CalculAidePersonnaliséeLogementAccessionPropriété";
                            "calcul_plafond_mensualité_d832_10_3";
                            "output";
                          ]
                          embed_money
                          ((log_begin_call
                              [
                                "CalculAidePersonnaliséeLogementAccessionPropriété";
                                "calcul_plafond_mensualité_d832_10_3";
                              ]
                              calcul_plafond_mensualite_d832_10_3_)
                             (log_variable_definition
                                [
                                  "CalculAidePersonnaliséeLogementAccessionPropriété";
                                  "calcul_plafond_mensualité_d832_10_3";
                                  "input";
                                ]
                                embed_date date_entree_logement_)))
                   else
                     log_end_call
                       [
                         "CalculAidePersonnaliséeLogementAccessionPropriété";
                         "calcul_plafond_mensualité_d832_10_3";
                       ]
                       (log_variable_definition
                          [
                            "CalculAidePersonnaliséeLogementAccessionPropriété";
                            "calcul_plafond_mensualité_d832_10_3";
                            "output";
                          ]
                          embed_money
                          ((log_begin_call
                              [
                                "CalculAidePersonnaliséeLogementAccessionPropriété";
                                "calcul_plafond_mensualité_d832_10_3";
                              ]
                              calcul_plafond_mensualite_d832_10_3_)
                             (log_variable_definition
                                [
                                  "CalculAidePersonnaliséeLogementAccessionPropriété";
                                  "calcul_plafond_mensualité_d832_10_3";
                                  "input";
                                ]
                                embed_date date_signature_pret_)))));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3417;
                 start_column = 14;
                 end_line = 3417;
                 end_column = 42;
                 law_headings =
                   [
                     "Article D832-14";
                     "Section 2 : Accession à la propriété";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             log_end_call
               [
                 "CalculAidePersonnaliséeLogementAccessionPropriété";
                 "calcul_plafond_mensualité_d832_10_3";
               ]
               (log_variable_definition
                  [
                    "CalculAidePersonnaliséeLogementAccessionPropriété";
                    "calcul_plafond_mensualité_d832_10_3";
                    "output";
                  ]
                  embed_money
                  ((log_begin_call
                      [
                        "CalculAidePersonnaliséeLogementAccessionPropriété";
                        "calcul_plafond_mensualité_d832_10_3";
                      ]
                      calcul_plafond_mensualite_d832_10_3_)
                     (log_variable_definition
                        [
                          "CalculAidePersonnaliséeLogementAccessionPropriété";
                          "calcul_plafond_mensualité_d832_10_3";
                          "input";
                        ]
                        embed_date date_signature_pret_))))
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 707;
                start_column = 10;
                end_line = 707;
                end_column = 14;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_ : money
      =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogementAccessionPropriété";
          "calcul_équivalence_loyer_minimale.ressources_ménage_arrondies";
        ]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3555;
                 start_column = 14;
                 end_line = 3555;
                 end_column = 75;
                 law_headings =
                   [
                     "Article D832-15";
                     "Section 2 : Accession à la propriété";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> ressources_menage_arrondies_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 613;
             start_column = 10;
             end_line = 613;
             end_column = 37;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_ : bool =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogementAccessionPropriété";
          "calcul_équivalence_loyer_minimale.condition_2_du_832_25";
        ]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3554;
                 start_column = 14;
                 end_line = 3554;
                 end_column = 69;
                 law_headings =
                   [
                     "Article D832-15";
                     "Section 2 : Accession à la propriété";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> false))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 614;
             start_column = 10;
             end_line = 614;
             end_column = 31;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_ : decimal =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogementAccessionPropriété";
          "calcul_équivalence_loyer_minimale.n_nombre_parts_d832_25";
        ]
        embed_decimal
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3557;
                 start_column = 14;
                 end_line = 3557;
                 end_column = 70;
                 law_headings =
                   [
                     "Article D832-15";
                     "Section 2 : Accession à la propriété";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> n_nombre_parts_d832_11_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 615;
             start_column = 10;
             end_line = 615;
             end_column = 32;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : CalculEquivalenceLoyerMinimaleOut.t =
    log_end_call
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "calcul_équivalence_loyer_minimale";
        "CalculÉquivalenceLoyerMinimale";
      ]
      ((log_begin_call
          [
            "CalculAidePersonnaliséeLogementAccessionPropriété";
            "calcul_équivalence_loyer_minimale";
            "CalculÉquivalenceLoyerMinimale";
          ]
          calcul_equivalence_loyer_minimale)
         {
           CalculEquivalenceLoyerMinimaleIn.ressources_menage_arrondies_in =
             calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_;
           CalculEquivalenceLoyerMinimaleIn.condition_2_du_832_25_in =
             calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_;
           CalculEquivalenceLoyerMinimaleIn.n_nombre_parts_d832_25_in =
             calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_;
         })
  in
  let calcul_equivalence_loyer_minimale_dot_montant_ : money =
    result_.CalculEquivalenceLoyerMinimaleOut.montant_out
  in
  let coefficient_prise_en_charge_d832_10_formule_ : decimal =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "coefficient_prise_en_charge_d832_10_formule";
      ]
      embed_decimal
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3265;
                 start_column = 14;
                 end_line = 3265;
                 end_column = 49;
                 law_headings =
                   [
                     "Article D832-11";
                     "Section 2 : Accession à la propriété";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             decimal_of_string "0.95"
             -& ressources_menage_arrondies_
                /$ (coefficient_multiplicateur_d832_11_
                  *$ n_nombre_parts_d832_11_))
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 712;
                start_column = 10;
                end_line = 712;
                end_column = 17;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let abattement_depense_nette_minimale_d832_10_ : money -> money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "abattement_dépense_nette_minimale_d832_10";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 3621;
                     start_column = 14;
                     end_line = 3621;
                     end_column = 55;
                     law_headings =
                       [
                         "Article D832-17";
                         "Section 2 : Accession à la propriété";
                         "Chapitre II : Modalités de liquidation et de \
                          versement de l'aide personnalisée au logement";
                         "Titre III : Aide personnalisée au logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   log_end_call
                     [
                       "CalculAidePersonnaliséeLogementAccessionPropriété";
                       "dépense_nette_minimale_d832_10";
                     ]
                     (log_variable_definition
                        [
                          "CalculAidePersonnaliséeLogementAccessionPropriété";
                          "dépense_nette_minimale_d832_10";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAidePersonnaliséeLogementAccessionPropriété";
                              "dépense_nette_minimale_d832_10";
                            ]
                            depense_nette_minimale_d832_10_)
                           (log_variable_definition
                              [
                                "CalculAidePersonnaliséeLogementAccessionPropriété";
                                "dépense_nette_minimale_d832_10";
                                "input";
                              ]
                              embed_money param_)))
                   <=$ ressources_menage_avec_d832_18_
                       *$ coefficient_multiplicateur_d832_17_3_
                 then
                   ressources_menage_avec_d832_18_
                   *$ coefficient_multiplicateur_d832_17_3_
                   -$ log_end_call
                        [
                          "CalculAidePersonnaliséeLogementAccessionPropriété";
                          "dépense_nette_minimale_d832_10";
                        ]
                        (log_variable_definition
                           [
                             "CalculAidePersonnaliséeLogementAccessionPropriété";
                             "dépense_nette_minimale_d832_10";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "CalculAidePersonnaliséeLogementAccessionPropriété";
                                 "dépense_nette_minimale_d832_10";
                               ]
                               depense_nette_minimale_d832_10_)
                              (log_variable_definition
                                 [
                                   "CalculAidePersonnaliséeLogementAccessionPropriété";
                                   "dépense_nette_minimale_d832_10";
                                   "input";
                                 ]
                                 embed_money param_)))
                 else money_of_cents_string "0")
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 716;
                    start_column = 11;
                    end_line = 716;
                    end_column = 52;
                    law_headings =
                      [
                        "Secteur accession à la propriété";
                        "Calcul du montant de l'aide personnalisée au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 716;
                start_column = 11;
                end_line = 716;
                end_column = 52;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let plafond_mensualite_d832_10_3_coproprietaires_ : money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "plafond_mensualité_d832_10_3_copropriétaires";
      ]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default [||]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/archives.catala_fr";
                             start_line = 444;
                             start_column = 14;
                             end_line = 444;
                             end_column = 42;
                             law_headings =
                               [
                                 "Article 24";
                                 "Arrêté du 27 septembre 2019 relatif au \
                                  calcul des aides personnelles au logement et \
                                  de la prime de déménagement";
                                 "Articles valables du 1er octobre 2020 au 1er \
                                  octobre 2021";
                                 "Archives législatives et réglementaires";
                               ];
                           }
                           (date_courante_ <@ date_of_numbers 2021 10 1
                           && date_courante_ >=@ date_of_numbers 2020 10 1))
                       (fun (_ : _) ->
                         if copropriete_ then
                           plafond_mensualite_d832_10_3_base_
                           *$ decimal_of_string "0.75"
                         else plafond_mensualite_d832_10_3_base_));
                 |]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/arrete_2019-09-27.catala_fr";
                       start_line = 2627;
                       start_column = 14;
                       end_line = 2627;
                       end_column = 42;
                       law_headings =
                         [
                           "Article 24";
                           "Chapitre IV : Calcul de l'aide personnalisée au \
                            logement en secteur accession";
                           "Arrêté du 27 septembre 2019 relatif au calcul des \
                            aides personnelles au logement et de la prime de \
                            déménagement";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2021 10 1))
                 (fun (_ : _) ->
                   if copropriete_ then
                     plafond_mensualite_d832_10_3_base_
                     *$ decimal_of_string "0.75"
                   else plafond_mensualite_d832_10_3_base_));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 708;
                start_column = 10;
                end_line = 708;
                end_column = 25;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let mensualite_minimale_ : money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "mensualité_minimale";
      ]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 3496;
                       start_column = 5;
                       end_line = 3508;
                       end_column = 77;
                       law_headings =
                         [
                           "Article D832-15";
                           "Section 2 : Accession à la propriété";
                           "Chapitre II : Modalités de liquidation et de \
                            versement de l'aide personnalisée au logement";
                           "Titre III : Aide personnalisée au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     ((match type_travaux_logement_ with
                      | TypeTravauxLogementD83215
                        .TravauxPourAcquisitionD832_15_1 _ ->
                        true
                      | TypeTravauxLogementD83215
                        .TravauxSurLogementDejaAcquisD832_15_2 _ ->
                        false
                      | TypeTravauxLogementD83215.PasDeTravaux _ -> false)
                     ||
                     match type_travaux_logement_ with
                     | TypeTravauxLogementD83215.TravauxPourAcquisitionD832_15_1
                         _ ->
                       false
                     | TypeTravauxLogementD83215
                       .TravauxSurLogementDejaAcquisD832_15_2 _ ->
                       false
                     | TypeTravauxLogementD83215.PasDeTravaux _ -> true))
                 (fun (_ : _) ->
                   money_of_decimal
                     (((if
                        decimal_of_money ressources_menage_arrondies_
                        >=& decimal_of_money montant_limite_tranches_d832_15_1_
                            *& n_nombre_parts_d832_11_
                       then
                        (decimal_of_money ressources_menage_arrondies_
                        -& decimal_of_money montant_limite_tranches_d832_15_1_
                           *& n_nombre_parts_d832_11_)
                        *& taux_tranche_superieure_d832_15_1_
                       else decimal_of_string "0.")
                      +&
                      if
                        decimal_of_money ressources_menage_arrondies_
                        <=& decimal_of_money montant_limite_tranches_d832_15_1_
                            *& n_nombre_parts_d832_11_
                      then
                        decimal_of_money ressources_menage_arrondies_
                        *& taux_tranche_inferieure_d832_15_1_
                      else
                        decimal_of_money montant_limite_tranches_d832_15_1_
                        *& n_nombre_parts_d832_11_
                        *& taux_tranche_inferieure_d832_15_1_)
                     /& decimal_of_string "12.")));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 3549;
                       start_column = 5;
                       end_line = 3549;
                       end_column = 75;
                       law_headings =
                         [
                           "Article D832-15";
                           "Section 2 : Accession à la propriété";
                           "Chapitre II : Modalités de liquidation et de \
                            versement de l'aide personnalisée au logement";
                           "Titre III : Aide personnalisée au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     (match type_travaux_logement_ with
                     | TypeTravauxLogementD83215.TravauxPourAcquisitionD832_15_1
                         _ ->
                       false
                     | TypeTravauxLogementD83215
                       .TravauxSurLogementDejaAcquisD832_15_2 _ ->
                       true
                     | TypeTravauxLogementD83215.PasDeTravaux _ -> false))
                 (fun (_ : _) -> calcul_equivalence_loyer_minimale_dot_montant_));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 705;
                start_column = 10;
                end_line = 705;
                end_column = 29;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let coefficient_prise_en_charge_d832_10_arrondi_ : decimal =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "coefficient_prise_en_charge_d832_10_arrondi";
      ]
      embed_decimal
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3281;
                 start_column = 14;
                 end_line = 3281;
                 end_column = 49;
                 law_headings =
                   [
                     "Article D832-11";
                     "Section 2 : Accession à la propriété";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             decimal_round
               ((coefficient_prise_en_charge_d832_10_formule_
               -& decimal_of_string "0.005")
               *& decimal_of_string "100.")
             /& decimal_of_string "100.")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 713;
                start_column = 10;
                end_line = 713;
                end_column = 17;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let traitement_aide_finale_abattement_ : money -> money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "traitement_aide_finale_abattement";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 3208;
                     start_column = 14;
                     end_line = 3208;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D832-10";
                         "Section 2 : Accession à la propriété";
                         "Chapitre II : Modalités de liquidation et de \
                          versement de l'aide personnalisée au logement";
                         "Titre III : Aide personnalisée au logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   log_end_call
                     [
                       "CalculAidePersonnaliséeLogementAccessionPropriété";
                       "traitement_aide_finale_minoration_forfaitaire";
                     ]
                     (log_variable_definition
                        [
                          "CalculAidePersonnaliséeLogementAccessionPropriété";
                          "traitement_aide_finale_minoration_forfaitaire";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAidePersonnaliséeLogementAccessionPropriété";
                              "traitement_aide_finale_minoration_forfaitaire";
                            ]
                            traitement_aide_finale_minoration_forfaitaire_)
                           (log_variable_definition
                              [
                                "CalculAidePersonnaliséeLogementAccessionPropriété";
                                "traitement_aide_finale_minoration_forfaitaire";
                                "input";
                              ]
                              embed_money param_)))
                   -$ log_end_call
                        [
                          "CalculAidePersonnaliséeLogementAccessionPropriété";
                          "abattement_dépense_nette_minimale_d832_10";
                        ]
                        (log_variable_definition
                           [
                             "CalculAidePersonnaliséeLogementAccessionPropriété";
                             "abattement_dépense_nette_minimale_d832_10";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "CalculAidePersonnaliséeLogementAccessionPropriété";
                                 "abattement_dépense_nette_minimale_d832_10";
                               ]
                               abattement_depense_nette_minimale_d832_10_)
                              (log_variable_definition
                                 [
                                   "CalculAidePersonnaliséeLogementAccessionPropriété";
                                   "abattement_dépense_nette_minimale_d832_10";
                                   "input";
                                 ]
                                 embed_money
                                 (log_end_call
                                    [
                                      "CalculAidePersonnaliséeLogementAccessionPropriété";
                                      "traitement_aide_finale_minoration_forfaitaire";
                                    ]
                                    (log_variable_definition
                                       [
                                         "CalculAidePersonnaliséeLogementAccessionPropriété";
                                         "traitement_aide_finale_minoration_forfaitaire";
                                         "output";
                                       ]
                                       embed_money
                                       ((log_begin_call
                                           [
                                             "CalculAidePersonnaliséeLogementAccessionPropriété";
                                             "traitement_aide_finale_minoration_forfaitaire";
                                           ]
                                           traitement_aide_finale_minoration_forfaitaire_)
                                          (log_variable_definition
                                             [
                                               "CalculAidePersonnaliséeLogementAccessionPropriété";
                                               "traitement_aide_finale_minoration_forfaitaire";
                                               "input";
                                             ]
                                             embed_money param_)))))))
                   >=$ money_of_cents_string "0"
                 then
                   log_end_call
                     [
                       "CalculAidePersonnaliséeLogementAccessionPropriété";
                       "traitement_aide_finale_minoration_forfaitaire";
                     ]
                     (log_variable_definition
                        [
                          "CalculAidePersonnaliséeLogementAccessionPropriété";
                          "traitement_aide_finale_minoration_forfaitaire";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAidePersonnaliséeLogementAccessionPropriété";
                              "traitement_aide_finale_minoration_forfaitaire";
                            ]
                            traitement_aide_finale_minoration_forfaitaire_)
                           (log_variable_definition
                              [
                                "CalculAidePersonnaliséeLogementAccessionPropriété";
                                "traitement_aide_finale_minoration_forfaitaire";
                                "input";
                              ]
                              embed_money param_)))
                   -$ log_end_call
                        [
                          "CalculAidePersonnaliséeLogementAccessionPropriété";
                          "abattement_dépense_nette_minimale_d832_10";
                        ]
                        (log_variable_definition
                           [
                             "CalculAidePersonnaliséeLogementAccessionPropriété";
                             "abattement_dépense_nette_minimale_d832_10";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "CalculAidePersonnaliséeLogementAccessionPropriété";
                                 "abattement_dépense_nette_minimale_d832_10";
                               ]
                               abattement_depense_nette_minimale_d832_10_)
                              (log_variable_definition
                                 [
                                   "CalculAidePersonnaliséeLogementAccessionPropriété";
                                   "abattement_dépense_nette_minimale_d832_10";
                                   "input";
                                 ]
                                 embed_money
                                 (log_end_call
                                    [
                                      "CalculAidePersonnaliséeLogementAccessionPropriété";
                                      "traitement_aide_finale_minoration_forfaitaire";
                                    ]
                                    (log_variable_definition
                                       [
                                         "CalculAidePersonnaliséeLogementAccessionPropriété";
                                         "traitement_aide_finale_minoration_forfaitaire";
                                         "output";
                                       ]
                                       embed_money
                                       ((log_begin_call
                                           [
                                             "CalculAidePersonnaliséeLogementAccessionPropriété";
                                             "traitement_aide_finale_minoration_forfaitaire";
                                           ]
                                           traitement_aide_finale_minoration_forfaitaire_)
                                          (log_variable_definition
                                             [
                                               "CalculAidePersonnaliséeLogementAccessionPropriété";
                                               "traitement_aide_finale_minoration_forfaitaire";
                                               "input";
                                             ]
                                             embed_money param_)))))))
                 else money_of_cents_string "0")
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 739;
                    start_column = 10;
                    end_line = 739;
                    end_column = 20;
                    law_headings =
                      [
                        "Secteur accession à la propriété";
                        "Calcul du montant de l'aide personnalisée au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 739;
                start_column = 10;
                end_line = 739;
                end_column = 20;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let mensualite_eligible_ : money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "mensualité_éligible";
      ]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3169;
                 start_column = 14;
                 end_line = 3169;
                 end_column = 33;
                 law_headings =
                   [
                     "Article D832-10";
                     "Section 2 : Accession à la propriété";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             if
               mensualite_principale_
               >$ plafond_mensualite_d832_10_3_coproprietaires_
             then plafond_mensualite_d832_10_3_coproprietaires_
             else mensualite_principale_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 704;
                start_column = 10;
                end_line = 704;
                end_column = 29;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let coefficient_prise_en_charge_d832_10_seuil_ : decimal =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "coefficient_prise_en_charge_d832_10_seuil";
      ]
      embed_decimal
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3284;
                 start_column = 14;
                 end_line = 3284;
                 end_column = 49;
                 law_headings =
                   [
                     "Article D832-11";
                     "Section 2 : Accession à la propriété";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             if
               coefficient_prise_en_charge_d832_10_arrondi_
               >=& decimal_of_string "0.95"
             then decimal_of_string "0.95"
             else coefficient_prise_en_charge_d832_10_arrondi_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 714;
                start_column = 10;
                end_line = 714;
                end_column = 15;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let traitement_aide_finale_contributions_sociales_arrondi_ : money -> money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "traitement_aide_finale_contributions_sociales_arrondi";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 3225;
                     start_column = 14;
                     end_line = 3225;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D832-10";
                         "Section 2 : Accession à la propriété";
                         "Chapitre II : Modalités de liquidation et de \
                          versement de l'aide personnalisée au logement";
                         "Titre III : Aide personnalisée au logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   money_round
                     (log_end_call
                        [
                          "CalculAidePersonnaliséeLogementAccessionPropriété";
                          "traitement_aide_finale_abattement";
                        ]
                        (log_variable_definition
                           [
                             "CalculAidePersonnaliséeLogementAccessionPropriété";
                             "traitement_aide_finale_abattement";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "CalculAidePersonnaliséeLogementAccessionPropriété";
                                 "traitement_aide_finale_abattement";
                               ]
                               traitement_aide_finale_abattement_)
                              (log_variable_definition
                                 [
                                   "CalculAidePersonnaliséeLogementAccessionPropriété";
                                   "traitement_aide_finale_abattement";
                                   "input";
                                 ]
                                 embed_money param_)))
                     -$ log_end_call
                          [
                            "ContributionsSocialesAidesPersonnelleLogement";
                            "montant";
                          ]
                          (log_variable_definition
                             [
                               "ContributionsSocialesAidesPersonnelleLogement";
                               "montant";
                               "output";
                             ]
                             embed_money
                             ((log_begin_call
                                 [
                                   "ContributionsSocialesAidesPersonnelleLogement";
                                   "montant";
                                 ]
                                 contributions_sociales_dot_montant_)
                                (log_variable_definition
                                   [
                                     "ContributionsSocialesAidesPersonnelleLogement";
                                     "montant";
                                     "input";
                                   ]
                                   embed_money
                                   (log_end_call
                                      [
                                        "CalculAidePersonnaliséeLogementAccessionPropriété";
                                        "traitement_aide_finale_abattement";
                                      ]
                                      (log_variable_definition
                                         [
                                           "CalculAidePersonnaliséeLogementAccessionPropriété";
                                           "traitement_aide_finale_abattement";
                                           "output";
                                         ]
                                         embed_money
                                         ((log_begin_call
                                             [
                                               "CalculAidePersonnaliséeLogementAccessionPropriété";
                                               "traitement_aide_finale_abattement";
                                             ]
                                             traitement_aide_finale_abattement_)
                                            (log_variable_definition
                                               [
                                                 "CalculAidePersonnaliséeLogementAccessionPropriété";
                                                 "traitement_aide_finale_abattement";
                                                 "input";
                                               ]
                                               embed_money param_)))))))
                     -$ money_of_cents_string "50")
                   +$ log_end_call
                        [
                          "ContributionsSocialesAidesPersonnelleLogement";
                          "montant";
                        ]
                        (log_variable_definition
                           [
                             "ContributionsSocialesAidesPersonnelleLogement";
                             "montant";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "ContributionsSocialesAidesPersonnelleLogement";
                                 "montant";
                               ]
                               contributions_sociales_dot_montant_)
                              (log_variable_definition
                                 [
                                   "ContributionsSocialesAidesPersonnelleLogement";
                                   "montant";
                                   "input";
                                 ]
                                 embed_money
                                 (log_end_call
                                    [
                                      "CalculAidePersonnaliséeLogementAccessionPropriété";
                                      "traitement_aide_finale_abattement";
                                    ]
                                    (log_variable_definition
                                       [
                                         "CalculAidePersonnaliséeLogementAccessionPropriété";
                                         "traitement_aide_finale_abattement";
                                         "output";
                                       ]
                                       embed_money
                                       ((log_begin_call
                                           [
                                             "CalculAidePersonnaliséeLogementAccessionPropriété";
                                             "traitement_aide_finale_abattement";
                                           ]
                                           traitement_aide_finale_abattement_)
                                          (log_variable_definition
                                             [
                                               "CalculAidePersonnaliséeLogementAccessionPropriété";
                                               "traitement_aide_finale_abattement";
                                               "input";
                                             ]
                                             embed_money param_)))))))
                   >=$ money_of_cents_string "0"
                 then
                   money_round
                     (log_end_call
                        [
                          "CalculAidePersonnaliséeLogementAccessionPropriété";
                          "traitement_aide_finale_abattement";
                        ]
                        (log_variable_definition
                           [
                             "CalculAidePersonnaliséeLogementAccessionPropriété";
                             "traitement_aide_finale_abattement";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "CalculAidePersonnaliséeLogementAccessionPropriété";
                                 "traitement_aide_finale_abattement";
                               ]
                               traitement_aide_finale_abattement_)
                              (log_variable_definition
                                 [
                                   "CalculAidePersonnaliséeLogementAccessionPropriété";
                                   "traitement_aide_finale_abattement";
                                   "input";
                                 ]
                                 embed_money param_)))
                     -$ log_end_call
                          [
                            "ContributionsSocialesAidesPersonnelleLogement";
                            "montant";
                          ]
                          (log_variable_definition
                             [
                               "ContributionsSocialesAidesPersonnelleLogement";
                               "montant";
                               "output";
                             ]
                             embed_money
                             ((log_begin_call
                                 [
                                   "ContributionsSocialesAidesPersonnelleLogement";
                                   "montant";
                                 ]
                                 contributions_sociales_dot_montant_)
                                (log_variable_definition
                                   [
                                     "ContributionsSocialesAidesPersonnelleLogement";
                                     "montant";
                                     "input";
                                   ]
                                   embed_money
                                   (log_end_call
                                      [
                                        "CalculAidePersonnaliséeLogementAccessionPropriété";
                                        "traitement_aide_finale_abattement";
                                      ]
                                      (log_variable_definition
                                         [
                                           "CalculAidePersonnaliséeLogementAccessionPropriété";
                                           "traitement_aide_finale_abattement";
                                           "output";
                                         ]
                                         embed_money
                                         ((log_begin_call
                                             [
                                               "CalculAidePersonnaliséeLogementAccessionPropriété";
                                               "traitement_aide_finale_abattement";
                                             ]
                                             traitement_aide_finale_abattement_)
                                            (log_variable_definition
                                               [
                                                 "CalculAidePersonnaliséeLogementAccessionPropriété";
                                                 "traitement_aide_finale_abattement";
                                                 "input";
                                               ]
                                               embed_money param_)))))))
                     -$ money_of_cents_string "50")
                   +$ log_end_call
                        [
                          "ContributionsSocialesAidesPersonnelleLogement";
                          "montant";
                        ]
                        (log_variable_definition
                           [
                             "ContributionsSocialesAidesPersonnelleLogement";
                             "montant";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "ContributionsSocialesAidesPersonnelleLogement";
                                 "montant";
                               ]
                               contributions_sociales_dot_montant_)
                              (log_variable_definition
                                 [
                                   "ContributionsSocialesAidesPersonnelleLogement";
                                   "montant";
                                   "input";
                                 ]
                                 embed_money
                                 (log_end_call
                                    [
                                      "CalculAidePersonnaliséeLogementAccessionPropriété";
                                      "traitement_aide_finale_abattement";
                                    ]
                                    (log_variable_definition
                                       [
                                         "CalculAidePersonnaliséeLogementAccessionPropriété";
                                         "traitement_aide_finale_abattement";
                                         "output";
                                       ]
                                       embed_money
                                       ((log_begin_call
                                           [
                                             "CalculAidePersonnaliséeLogementAccessionPropriété";
                                             "traitement_aide_finale_abattement";
                                           ]
                                           traitement_aide_finale_abattement_)
                                          (log_variable_definition
                                             [
                                               "CalculAidePersonnaliséeLogementAccessionPropriété";
                                               "traitement_aide_finale_abattement";
                                               "input";
                                             ]
                                             embed_money param_)))))))
                 else money_of_cents_string "0")
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 740;
                    start_column = 10;
                    end_line = 740;
                    end_column = 40;
                    law_headings =
                      [
                        "Secteur accession à la propriété";
                        "Calcul du montant de l'aide personnalisée au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 740;
                start_column = 10;
                end_line = 740;
                end_column = 40;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let aide_finale_formule_ : money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "aide_finale_formule";
      ]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 3149;
                 start_column = 14;
                 end_line = 3149;
                 end_column = 33;
                 law_headings =
                   [
                     "Article D832-10";
                     "Section 2 : Accession à la propriété";
                     "Chapitre II : Modalités de liquidation et de versement \
                      de l'aide personnalisée au logement";
                     "Titre III : Aide personnalisée au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             if
               (mensualite_eligible_ +$ montant_forfaitaire_charges_d832_10_
              -$ mensualite_minimale_)
               *$ coefficient_prise_en_charge_d832_10_seuil_
               <$ money_of_cents_string "0"
             then money_of_cents_string "0"
             else
               (mensualite_eligible_ +$ montant_forfaitaire_charges_d832_10_
              -$ mensualite_minimale_)
               *$ coefficient_prise_en_charge_d832_10_seuil_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 736;
                start_column = 10;
                end_line = 736;
                end_column = 29;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let traitement_aide_finale_montant_minimal_ : money -> money =
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogementAccessionPropriété";
        "traitement_aide_finale_montant_minimal";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 3250;
                     start_column = 14;
                     end_line = 3250;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D832-10";
                         "Section 2 : Accession à la propriété";
                         "Chapitre II : Modalités de liquidation et de \
                          versement de l'aide personnalisée au logement";
                         "Titre III : Aide personnalisée au logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   log_end_call
                     [
                       "CalculAidePersonnaliséeLogementAccessionPropriété";
                       "traitement_aide_finale_contributions_sociales_arrondi";
                     ]
                     (log_variable_definition
                        [
                          "CalculAidePersonnaliséeLogementAccessionPropriété";
                          "traitement_aide_finale_contributions_sociales_arrondi";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAidePersonnaliséeLogementAccessionPropriété";
                              "traitement_aide_finale_contributions_sociales_arrondi";
                            ]
                            traitement_aide_finale_contributions_sociales_arrondi_)
                           (log_variable_definition
                              [
                                "CalculAidePersonnaliséeLogementAccessionPropriété";
                                "traitement_aide_finale_contributions_sociales_arrondi";
                                "input";
                              ]
                              embed_money param_)))
                   <$ montant_minimal_aide_d832_10_
                 then money_of_cents_string "0"
                 else
                   log_end_call
                     [
                       "CalculAidePersonnaliséeLogementAccessionPropriété";
                       "traitement_aide_finale_contributions_sociales_arrondi";
                     ]
                     (log_variable_definition
                        [
                          "CalculAidePersonnaliséeLogementAccessionPropriété";
                          "traitement_aide_finale_contributions_sociales_arrondi";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAidePersonnaliséeLogementAccessionPropriété";
                              "traitement_aide_finale_contributions_sociales_arrondi";
                            ]
                            traitement_aide_finale_contributions_sociales_arrondi_)
                           (log_variable_definition
                              [
                                "CalculAidePersonnaliséeLogementAccessionPropriété";
                                "traitement_aide_finale_contributions_sociales_arrondi";
                                "input";
                              ]
                              embed_money param_))))
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 741;
                    start_column = 10;
                    end_line = 741;
                    end_column = 25;
                    law_headings =
                      [
                        "Secteur accession à la propriété";
                        "Calcul du montant de l'aide personnalisée au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 741;
                start_column = 10;
                end_line = 741;
                end_column = 25;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  {
    CalculAidePersonnaliseeLogementAccessionProprieteOut.mensualite_eligible_out =
      mensualite_eligible_;
    CalculAidePersonnaliseeLogementAccessionProprieteOut.mensualite_minimale_out =
      mensualite_minimale_;
    CalculAidePersonnaliseeLogementAccessionProprieteOut
    .coefficient_prise_en_charge_d832_10_seuil_out =
      coefficient_prise_en_charge_d832_10_seuil_;
    CalculAidePersonnaliseeLogementAccessionProprieteOut.aide_finale_formule_out =
      aide_finale_formule_;
    CalculAidePersonnaliseeLogementAccessionProprieteOut
    .traitement_aide_finale_montant_minimal_out =
      traitement_aide_finale_montant_minimal_;
  }

let eligibilite_aides_personnelle_logement
    (eligibilite_aides_personnelle_logement_in :
      EligibiliteAidesPersonnelleLogementIn.t) :
    EligibiliteAidesPersonnelleLogementOut.t =
  let menage_ : Menage.t =
    eligibilite_aides_personnelle_logement_in
      .EligibiliteAidesPersonnelleLogementIn.menage_in
  in
  let demandeur_ : Demandeur.t =
    eligibilite_aides_personnelle_logement_in
      .EligibiliteAidesPersonnelleLogementIn.demandeur_in
  in
  let date_courante_ : date =
    eligibilite_aides_personnelle_logement_in
      .EligibiliteAidesPersonnelleLogementIn.date_courante_in
  in
  let condition_logement_residence_principale_ : unit -> bool =
    eligibilite_aides_personnelle_logement_in
      .EligibiliteAidesPersonnelleLogementIn
       .condition_logement_residence_principale_in
  in
  let condition_logement_surface_ : unit -> bool =
    eligibilite_aides_personnelle_logement_in
      .EligibiliteAidesPersonnelleLogementIn.condition_logement_surface_in
  in
  let condition_pret_ : Pret.t -> bool =
    log_variable_definition
      ["ÉligibilitéAidesPersonnelleLogement"; "condition_prêt"]
      unembeddable
      (try
         fun (param_ : Pret.t) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename = "examples/aides_logement/prologue.catala_fr";
                     start_line = 316;
                     start_column = 11;
                     end_line = 316;
                     end_column = 25;
                     law_headings =
                       [
                         "Éligibilité aux aides personnelles au logement";
                         "Déclarations des champs d'application";
                         "Prologue : aides au logement";
                       ];
                   }
                   true)
               (fun (_ : _) -> false)
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 316;
                    start_column = 11;
                    end_line = 316;
                    end_column = 25;
                    law_headings =
                      [
                        "Éligibilité aux aides personnelles au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 316;
                start_column = 11;
                end_line = 316;
                end_column = 25;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let condition_peuplement_logement_l822_10_ : bool =
    log_variable_definition
      [
        "ÉligibilitéAidesPersonnelleLogement";
        "condition_peuplement_logement_l822_10";
      ]
      embed_bool
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 327;
                 start_column = 11;
                 end_line = 327;
                 end_column = 48;
                 law_headings =
                   [
                     "Éligibilité aux aides personnelles au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> false)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 327;
                start_column = 11;
                end_line = 327;
                end_column = 48;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let seuil_l822_3_parts_propriete_ : decimal =
    log_variable_definition
      ["ÉligibilitéAidesPersonnelleLogement"; "seuil_l822_3_parts_propriété"]
      embed_decimal
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 105;
                 start_column = 14;
                 end_line = 105;
                 end_column = 42;
                 law_headings =
                   [
                     "Article R822-1";
                     "Section 1 : Conditions relatives au bénéficiaire";
                     "Chapitre II : Conditions générales d'attribution";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> decimal_of_string "0.1")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 338;
                start_column = 11;
                end_line = 338;
                end_column = 39;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let seuil_l822_3_parts_usufruit_ : decimal =
    log_variable_definition
      ["ÉligibilitéAidesPersonnelleLogement"; "seuil_l822_3_parts_usufruit"]
      embed_decimal
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 106;
                 start_column = 14;
                 end_line = 106;
                 end_column = 41;
                 law_headings =
                   [
                     "Article R822-1";
                     "Section 1 : Conditions relatives au bénéficiaire";
                     "Chapitre II : Conditions générales d'attribution";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> decimal_of_string "0.1")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 339;
                start_column = 11;
                end_line = 339;
                end_column = 38;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let seuil_l822_5_patrimoine_ : money =
    log_variable_definition
      ["ÉligibilitéAidesPersonnelleLogement"; "seuil_l822_5_patrimoine"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 926;
                 start_column = 14;
                 end_line = 926;
                 end_column = 37;
                 law_headings =
                   [
                     "Article R822-22";
                     "Sous-section 4 : Prise en compte du patrimoine";
                     "Section 2 : Conditions relatives aux ressources";
                     "Chapitre II : Conditions générales d'attribution";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> money_of_cents_string "3000000")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 340;
                start_column = 11;
                end_line = 340;
                end_column = 34;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let usufruit_ou_propriete_famille_ : bool =
    log_variable_definition
      ["ÉligibilitéAidesPersonnelleLogement"; "usufruit_ou_propriété_famille"]
      embed_bool
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_legislatif.catala_fr";
                 start_line = 146;
                 start_column = 14;
                 end_line = 146;
                 end_column = 43;
                 law_headings =
                   [
                     "Article L822-3";
                     "Chapitre II : Conditions générales d'attribution";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie législative";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             (match menage_.Menage.logement.Logement.proprietaire with
             | ParentOuAutre.DemandeurOuConjointOuParentOuViaPartsSocietes
                 parts_ ->
               true
             | ParentOuAutre.Autre _ -> false)
             ||
             match menage_.Menage.logement.Logement.usufruit with
             | ParentOuAutre.DemandeurOuConjointOuParentOuViaPartsSocietes
                 parts_ ->
               true
             | ParentOuAutre.Autre _ -> false)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 337;
                start_column = 11;
                end_line = 337;
                end_column = 40;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let nombre_personnes_logement_ : integer =
    log_variable_definition
      ["ÉligibilitéAidesPersonnelleLogement"; "nombre_personnes_logement"]
      embed_integer
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1034;
                 start_column = 14;
                 end_line = 1034;
                 end_column = 39;
                 law_headings =
                   [
                     "Article R822-25";
                     "Section 3 : Conditions relatives au logement";
                     "Chapitre II : Conditions générales d'attribution";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             (match menage_.Menage.situation_familiale with
             | SituationFamiliale.Celibataire _ -> integer_of_string "1"
             | SituationFamiliale.Maries _ -> integer_of_string "2"
             | SituationFamiliale.Pacses _ -> integer_of_string "2"
             | SituationFamiliale.Concubins _ -> integer_of_string "2"
             | SituationFamiliale.CelibataireSepareDeFait _ ->
               integer_of_string "1"
             | SituationFamiliale.ConcubinageDontSepareDeFait _ ->
               integer_of_string "2")
             +! menage_.Menage.nombre_autres_occupants_logement
             +! array_length menage_.Menage.personnes_a_charge)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 336;
                start_column = 11;
                end_line = 336;
                end_column = 36;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let condition_non_ouverture_l822_9_decence_logement_ : bool =
    log_variable_definition
      [
        "ÉligibilitéAidesPersonnelleLogement";
        "condition_non_ouverture_l822_9_decence_logement";
      ]
      embed_bool
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_legislatif.catala_fr";
                       start_line = 358;
                       start_column = 18;
                       end_line = 358;
                       end_column = 61;
                       law_headings =
                         [
                           "Article L822-9";
                           "Chapitre II : Conditions générales d'attribution";
                           "Titre II : Dispositions communes aux aides \
                            personnelles au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie législative";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     (not
                        menage_.Menage.logement.Logement.logement_decent_l89_462))
                 (fun (_ : _) -> true));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 325;
                 start_column = 11;
                 end_line = 325;
                 end_column = 58;
                 law_headings =
                   [
                     "Éligibilité aux aides personnelles au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> false)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 325;
                start_column = 11;
                end_line = 325;
                end_column = 58;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let condition_non_ouverture_l822_8_ : bool =
    log_variable_definition
      ["ÉligibilitéAidesPersonnelleLogement"; "condition_non_ouverture_l822_8"]
      embed_bool
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_legislatif.catala_fr";
                       start_line = 344;
                       start_column = 18;
                       end_line = 344;
                       end_column = 67;
                       law_headings =
                         [
                           "Article L822-8";
                           "Chapitre II : Conditions générales d'attribution";
                           "Titre II : Dispositions communes aux aides \
                            personnelles au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie législative";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     menage_.Menage.condition_rattache_foyer_fiscal_parent_ifi)
                 (fun (_ : _) -> true));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 324;
                 start_column = 11;
                 end_line = 324;
                 end_column = 41;
                 law_headings =
                   [
                     "Éligibilité aux aides personnelles au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> false)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 324;
                start_column = 11;
                end_line = 324;
                end_column = 41;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let condition_logement_surface_minimale_sans_seuil_m_carres_ : integer =
    log_variable_definition
      [
        "ÉligibilitéAidesPersonnelleLogement";
        "condition_logement_surface_minimale_sans_seuil_m_carrés";
      ]
      embed_integer
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1045;
                 start_column = 14;
                 end_line = 1045;
                 end_column = 69;
                 law_headings =
                   [
                     "Article R822-25";
                     "Section 3 : Conditions relatives au logement";
                     "Chapitre II : Conditions générales d'attribution";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             (match menage_.Menage.situation_familiale with
             | SituationFamiliale.Celibataire _ -> integer_of_string "9"
             | SituationFamiliale.Maries _ -> integer_of_string "16"
             | SituationFamiliale.Pacses _ -> integer_of_string "16"
             | SituationFamiliale.Concubins _ -> integer_of_string "16"
             | SituationFamiliale.CelibataireSepareDeFait _ ->
               integer_of_string "9"
             | SituationFamiliale.ConcubinageDontSepareDeFait _ ->
               integer_of_string "16")
             +! (menage_.Menage.nombre_autres_occupants_logement
                +! array_length menage_.Menage.personnes_a_charge)
                *! integer_of_string "9")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 321;
                start_column = 11;
                end_line = 321;
                end_column = 66;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let condition_logement_location_tiers_ : bool =
    log_variable_definition
      [
        "ÉligibilitéAidesPersonnelleLogement";
        "condition_logement_location_tiers";
      ]
      embed_bool
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default [||]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/code_construction_legislatif.catala_fr";
                             start_line = 203;
                             start_column = 5;
                             end_line = 207;
                             end_column = 39;
                             law_headings =
                               [
                                 "Article L822-4";
                                 "Chapitre II : Conditions générales \
                                  d'attribution";
                                 "Titre II : Dispositions communes aux aides \
                                  personnelles au logement";
                                 "Livre VIII : Aides personnelles au logement";
                                 "Partie législative";
                                 "Code de la construction et de l'habitation";
                               ];
                           }
                           (match
                              menage_.Menage.logement
                                .Logement.loue_ou_sous_loue_a_des_tiers
                            with
                           | LoueOuSousLoueADesTiers.Non _ -> true
                           | LoueOuSousLoueADesTiers.Oui personne_ ->
                             personne_
                               .PersonneSousLocation.age_personne_sous_location
                             <=! integer_of_string "30"
                             || personne_
                                  .PersonneSousLocation.conforme_article_l442_1))
                       (fun (_ : _) -> true));
                 |]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_legislatif.catala_fr";
                       start_line = 197;
                       start_column = 5;
                       end_line = 198;
                       end_column = 34;
                       law_headings =
                         [
                           "Article L822-4";
                           "Chapitre II : Conditions générales d'attribution";
                           "Titre II : Dispositions communes aux aides \
                            personnelles au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie législative";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     (match
                        menage_.Menage.logement
                          .Logement.loue_ou_sous_loue_a_des_tiers
                      with
                     | LoueOuSousLoueADesTiers.Non _ -> true
                     | LoueOuSousLoueADesTiers.Oui _ -> false))
                 (fun (_ : _) -> false));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 320;
                 start_column = 11;
                 end_line = 320;
                 end_column = 44;
                 law_headings =
                   [
                     "Éligibilité aux aides personnelles au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> false)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 320;
                start_column = 11;
                end_line = 320;
                end_column = 44;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let condition_logement_residence_principale_ : bool =
    log_variable_definition
      [
        "ÉligibilitéAidesPersonnelleLogement";
        "condition_logement_résidence_principale";
      ]
      embed_bool
      (try
         handle_default
           [| (fun (_ : _) -> condition_logement_residence_principale_ ()) |]
           (fun (_ : _) -> true)
           (fun (_ : _) ->
             handle_default
               [|
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/code_construction_legislatif.catala_fr";
                           start_line = 46;
                           start_column = 5;
                           end_line = 46;
                           end_column = 41;
                           law_headings =
                             [
                               "Article L821-2";
                               "Sous-section 1 : Aides personnelles au logement";
                               "Section 2 : Règles de non-cumul";
                               "Chapitre Ier : Principes généraux";
                               "Titre II : Dispositions communes aux aides \
                                personnelles au logement";
                               "Livre VIII : Aides personnelles au logement";
                               "Partie législative";
                               "Code de la construction et de l'habitation";
                             ];
                         }
                         menage_.Menage.logement.Logement.residence_principale)
                     (fun (_ : _) -> true));
               |]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename = "examples/aides_logement/prologue.catala_fr";
                     start_line = 318;
                     start_column = 12;
                     end_line = 318;
                     end_column = 51;
                     law_headings =
                       [
                         "Éligibilité aux aides personnelles au logement";
                         "Déclarations des champs d'application";
                         "Prologue : aides au logement";
                       ];
                   }
                   true)
               (fun (_ : _) -> false))
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 318;
                start_column = 12;
                end_line = 318;
                end_column = 51;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let ouverture_droits_retraite_dot_date_naissance_assure_ : date =
    try
      log_variable_definition
        [
          "ÉligibilitéAidesPersonnelleLogement";
          "ouverture_droits_retraite.date_naissance_assuré";
        ]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_sécurité_sociale.catala_fr";
                 start_line = 123;
                 start_column = 14;
                 end_line = 123;
                 end_column = 61;
                 law_headings =
                   [
                     "Article L161-17-2";
                     "Paragraphe 1 : Information et simplification des \
                      démarches des assurés.";
                     "Sous-section 4 : Assurance vieillesse";
                     "Section 1 : Bénéficiaires";
                     "Chapitre 1er : Dispositions relatives aux prestations";
                     "Titre VI : Dispositions relatives aux prestations et aux \
                      soins - Contrôle médical - Tutelle aux prestations \
                      sociales";
                     "Titre III: Titre III : Dispositions communes relatives \
                      au financement";
                     "Partie législative";
                     "Code de la sécurité sociale";
                   ];
               }
               true)
           (fun (_ : _) -> demandeur_.Demandeur.date_naissance))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 1034;
             start_column = 10;
             end_line = 1034;
             end_column = 31;
             law_headings =
               [
                 "Date d'ouverture des droits à la retraite";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : OuvertureDroitsRetraiteOut.t =
    log_end_call
      [
        "ÉligibilitéAidesPersonnelleLogement";
        "ouverture_droits_retraite";
        "OuvertureDroitsRetraite";
      ]
      ((log_begin_call
          [
            "ÉligibilitéAidesPersonnelleLogement";
            "ouverture_droits_retraite";
            "OuvertureDroitsRetraite";
          ]
          ouverture_droits_retraite)
         {
           OuvertureDroitsRetraiteIn.date_naissance_assure_in =
             ouverture_droits_retraite_dot_date_naissance_assure_;
         })
  in
  let ouverture_droits_retraite_dot_age_ouverture_droit_ : duration =
    result_.OuvertureDroitsRetraiteOut.age_ouverture_droit_out
  in
  let patrimoine_total_demandeur_ : money =
    log_variable_definition
      ["ÉligibilitéAidesPersonnelleLogement"; "patrimoine_total_demandeur"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_legislatif.catala_fr";
                 start_line = 245;
                 start_column = 14;
                 end_line = 245;
                 end_column = 40;
                 law_headings =
                   [
                     "Article L822-5";
                     "Chapitre II : Conditions générales d'attribution";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie législative";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             demandeur_.Demandeur.patrimoine
               .Patrimoine.produisant_revenu_periode_r822_3_3_r822_4
             +$ demandeur_.Demandeur.patrimoine
                  .Patrimoine.ne_produisant_pas_revenu_periode_r822_3_3_r822_4)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 335;
                start_column = 11;
                end_line = 335;
                end_column = 37;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let condition_nationalite_ : bool =
    log_variable_definition
      ["ÉligibilitéAidesPersonnelleLogement"; "condition_nationalité"]
      embed_bool
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_legislatif.catala_fr";
                       start_line = 108;
                       start_column = 5;
                       end_line = 110;
                       end_column = 78;
                       law_headings =
                         [
                           "Article L822-2";
                           "Chapitre II : Conditions générales d'attribution";
                           "Titre II : Dispositions communes aux aides \
                            personnelles au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie législative";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     (match demandeur_.Demandeur.nationalite with
                     | Nationalite.Francaise _ -> true
                     | Nationalite.Etrangere _ ->
                       demandeur_
                         .Demandeur
                          .satisfait_conditions_l512_2_code_securite_sociale))
                 (fun (_ : _) -> true));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 317;
                 start_column = 11;
                 end_line = 317;
                 end_column = 32;
                 law_headings =
                   [
                     "Éligibilité aux aides personnelles au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> false)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 317;
                start_column = 11;
                end_line = 317;
                end_column = 32;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let plafond_individuel_l815_9_secu_ : money =
    log_variable_definition
      ["ÉligibilitéAidesPersonnelleLogement"; "plafond_individuel_l815_9_sécu"]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_sécurité_sociale.catala_fr";
                       start_line = 329;
                       start_column = 5;
                       end_line = 330;
                       end_column = 35;
                       law_headings =
                         [
                           "Article D815-1";
                           "Section 1 : Ouverture du droit et liquidation de \
                            l'allocation de solidarité aux personnes âgées";
                           "Chapitre 5 : Allocation de solidarité aux \
                            personnes âgées";
                           "Titre I : Allocations aux personnes âgées";
                           "Livre VIII : Allocations aux personnes âgées - \
                            Allocation aux adultes handicapés - Aides à \
                            l'emploi pour la garde des jeunes enfants - \
                            Protection complémentaire en matière de santé";
                           "Partie réglementaire - Décrets simples";
                           "Code de la sécurité sociale";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2018 1 4
                     && date_courante_ <@ date_of_numbers 2019 1 1))
                 (fun (_ : _) -> money_of_cents_string "999840"));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_sécurité_sociale.catala_fr";
                       start_line = 334;
                       start_column = 5;
                       end_line = 335;
                       end_column = 35;
                       law_headings =
                         [
                           "Article D815-1";
                           "Section 1 : Ouverture du droit et liquidation de \
                            l'allocation de solidarité aux personnes âgées";
                           "Chapitre 5 : Allocation de solidarité aux \
                            personnes âgées";
                           "Titre I : Allocations aux personnes âgées";
                           "Livre VIII : Allocations aux personnes âgées - \
                            Allocation aux adultes handicapés - Aides à \
                            l'emploi pour la garde des jeunes enfants - \
                            Protection complémentaire en matière de santé";
                           "Partie réglementaire - Décrets simples";
                           "Code de la sécurité sociale";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2019 1 1
                     && date_courante_ <@ date_of_numbers 2020 1 1))
                 (fun (_ : _) -> money_of_cents_string "1041840"));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_sécurité_sociale.catala_fr";
                       start_line = 339;
                       start_column = 5;
                       end_line = 340;
                       end_column = 35;
                       law_headings =
                         [
                           "Article D815-1";
                           "Section 1 : Ouverture du droit et liquidation de \
                            l'allocation de solidarité aux personnes âgées";
                           "Chapitre 5 : Allocation de solidarité aux \
                            personnes âgées";
                           "Titre I : Allocations aux personnes âgées";
                           "Livre VIII : Allocations aux personnes âgées - \
                            Allocation aux adultes handicapés - Aides à \
                            l'emploi pour la garde des jeunes enfants - \
                            Protection complémentaire en matière de santé";
                           "Partie réglementaire - Décrets simples";
                           "Code de la sécurité sociale";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2020 1 4
                     && date_courante_ <@ date_of_numbers 2021 1 1))
                 (fun (_ : _) -> money_of_cents_string "1083840"));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/autres_sources.catala_fr";
                       start_line = 33;
                       start_column = 5;
                       end_line = 34;
                       end_column = 34;
                       law_headings =
                         [
                           "Allocation de solidarité aux personnes âgées";
                           "Circulaire de la CNAV 2022-3 du 11/01/2022 \
                            \"Revalorisation à compter du 1er janvier 2022\"";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2022 1 1
                     && date_courante_ <@ date_of_numbers 2023 1 1))
                 (fun (_ : _) -> money_of_cents_string "1100144"));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/autres_sources.catala_fr";
                       start_line = 70;
                       start_column = 5;
                       end_line = 71;
                       end_column = 34;
                       law_headings =
                         [
                           "Allocation de solidarité aux personnes âgées";
                           "Circulaire de la CNAV 2021-1 du 11/01/2021 \
                            \"Revalorisation à compter du 1er janvier 2021\"";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2021 1 1
                     && date_courante_ <@ date_of_numbers 2022 1 1))
                 (fun (_ : _) -> money_of_cents_string "1088175"));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 344;
                start_column = 11;
                end_line = 344;
                end_column = 41;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let condition_non_ouverture_l822_10_peuplement_logement_ : bool =
    log_variable_definition
      [
        "ÉligibilitéAidesPersonnelleLogement";
        "condition_non_ouverture_l822_10_peuplement_logement";
      ]
      embed_bool
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_legislatif.catala_fr";
                       start_line = 381;
                       start_column = 18;
                       end_line = 381;
                       end_column = 55;
                       law_headings =
                         [
                           "Article L822-10";
                           "Chapitre II : Conditions générales d'attribution";
                           "Titre II : Dispositions communes aux aides \
                            personnelles au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie législative";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     condition_peuplement_logement_l822_10_)
                 (fun (_ : _) -> true));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 326;
                 start_column = 11;
                 end_line = 326;
                 end_column = 62;
                 law_headings =
                   [
                     "Éligibilité aux aides personnelles au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> false)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 326;
                start_column = 11;
                end_line = 326;
                end_column = 62;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let condition_logement_mode_occupation_ : bool =
    log_variable_definition
      [
        "ÉligibilitéAidesPersonnelleLogement";
        "condition_logement_mode_occupation";
      ]
      embed_bool
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default
                       [|
                         (fun (_ : _) ->
                           handle_default [||]
                             (fun (_ : _) ->
                               log_decision_taken
                                 {
                                   filename =
                                     "examples/aides_logement/code_construction_legislatif.catala_fr";
                                   start_line = 171;
                                   start_column = 5;
                                   end_line = 177;
                                   end_column = 66;
                                   law_headings =
                                     [
                                       "Article L822-3";
                                       "Chapitre II : Conditions générales \
                                        d'attribution";
                                       "Titre II : Dispositions communes aux \
                                        aides personnelles au logement";
                                       "Livre VIII : Aides personnelles au \
                                        logement";
                                       "Partie législative";
                                       "Code de la construction et de \
                                        l'habitation";
                                     ];
                                 }
                                 (usufruit_ou_propriete_famille_
                                 && (match
                                       menage_.Menage.logement
                                         .Logement.proprietaire
                                     with
                                    | ParentOuAutre
                                      .DemandeurOuConjointOuParentOuViaPartsSocietes
                                        parts_ ->
                                      parts_
                                    | ParentOuAutre.Autre _ ->
                                      decimal_of_string "0.")
                                    <& seuil_l822_3_parts_propriete_
                                 && (match
                                       menage_.Menage.logement.Logement.usufruit
                                     with
                                    | ParentOuAutre
                                      .DemandeurOuConjointOuParentOuViaPartsSocietes
                                        parts_ ->
                                      parts_
                                    | ParentOuAutre.Autre _ ->
                                      decimal_of_string "0.")
                                    <& seuil_l822_3_parts_usufruit_))
                             (fun (_ : _) -> true));
                       |]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/code_construction_legislatif.catala_fr";
                             start_line = 156;
                             start_column = 5;
                             end_line = 158;
                             end_column = 30;
                             law_headings =
                               [
                                 "Article L822-3";
                                 "Chapitre II : Conditions générales \
                                  d'attribution";
                                 "Titre II : Dispositions communes aux aides \
                                  personnelles au logement";
                                 "Livre VIII : Aides personnelles au logement";
                                 "Partie législative";
                                 "Code de la construction et de l'habitation";
                               ];
                           }
                           (match
                              menage_.Menage.logement.Logement.mode_occupation
                            with
                           | ModeOccupation.Locataire _ ->
                             usufruit_ou_propriete_famille_
                           | ModeOccupation.ResidentLogementFoyer _ -> false
                           | ModeOccupation
                             .AccessionProprieteLocalUsageExclusifHabitation _
                             ->
                             false
                           | ModeOccupation.SousLocataire _ -> false
                           | ModeOccupation.LocationAccession _ -> false))
                       (fun (_ : _) -> false));
                 |]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_legislatif.catala_fr";
                       start_line = 125;
                       start_column = 5;
                       end_line = 131;
                       end_column = 33;
                       law_headings =
                         [
                           "Article L822-2";
                           "Chapitre II : Conditions générales d'attribution";
                           "Titre II : Dispositions communes aux aides \
                            personnelles au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie législative";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     (match
                        menage_.Menage.logement.Logement.mode_occupation
                      with
                     | ModeOccupation.Locataire _ -> true
                     | ModeOccupation.ResidentLogementFoyer _ -> true
                     | ModeOccupation
                       .AccessionProprieteLocalUsageExclusifHabitation _ ->
                       menage_.Menage.logement.Logement.residence_principale
                     | ModeOccupation.SousLocataire _ -> true
                     | ModeOccupation.LocationAccession _ -> true))
                 (fun (_ : _) -> true));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 319;
                 start_column = 11;
                 end_line = 319;
                 end_column = 45;
                 law_headings =
                   [
                     "Éligibilité aux aides personnelles au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> false)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 319;
                start_column = 11;
                end_line = 319;
                end_column = 45;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let condition_logement_surface_ : bool =
    log_variable_definition
      ["ÉligibilitéAidesPersonnelleLogement"; "condition_logement_surface"]
      embed_bool
      (try
         handle_default
           [| (fun (_ : _) -> condition_logement_surface_ ()) |]
           (fun (_ : _) -> true)
           (fun (_ : _) ->
             handle_default
               [|
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/code_construction_reglementaire.catala_fr";
                           start_line = 1057;
                           start_column = 5;
                           end_line = 1064;
                           end_column = 65;
                           law_headings =
                             [
                               "Article R822-25";
                               "Section 3 : Conditions relatives au logement";
                               "Chapitre II : Conditions générales \
                                d'attribution";
                               "Titre II : Dispositions communes aux aides \
                                personnelles au logement";
                               "Livre VIII : Aides personnelles au logement";
                               "Partie réglementaire";
                               "Code de la construction et de l'habitation";
                             ];
                         }
                         (if
                          condition_logement_surface_minimale_sans_seuil_m_carres_
                          >=! integer_of_string "70"
                          && nombre_personnes_logement_
                             >=! integer_of_string "8"
                         then
                          menage_.Menage.logement.Logement.surface_m_carres
                          >=! integer_of_string "70"
                         else
                           menage_.Menage.logement.Logement.surface_m_carres
                           >=! condition_logement_surface_minimale_sans_seuil_m_carres_))
                     (fun (_ : _) -> true));
               |]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename = "examples/aides_logement/prologue.catala_fr";
                     start_line = 323;
                     start_column = 12;
                     end_line = 323;
                     end_column = 38;
                     law_headings =
                       [
                         "Éligibilité aux aides personnelles au logement";
                         "Déclarations des champs d'application";
                         "Prologue : aides au logement";
                       ];
                   }
                   true)
               (fun (_ : _) -> false))
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 323;
                start_column = 12;
                end_line = 323;
                end_column = 38;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let age_l161_17_2_secu_ : duration =
    log_variable_definition
      ["ÉligibilitéAidesPersonnelleLogement"; "âge_l161_17_2_sécu"]
      embed_duration
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_sécurité_sociale.catala_fr";
                 start_line = 125;
                 start_column = 14;
                 end_line = 125;
                 end_column = 32;
                 law_headings =
                   [
                     "Article L161-17-2";
                     "Paragraphe 1 : Information et simplification des \
                      démarches des assurés.";
                     "Sous-section 4 : Assurance vieillesse";
                     "Section 1 : Bénéficiaires";
                     "Chapitre 1er : Dispositions relatives aux prestations";
                     "Titre VI : Dispositions relatives aux prestations et aux \
                      soins - Contrôle médical - Tutelle aux prestations \
                      sociales";
                     "Titre III: Titre III : Dispositions communes relatives \
                      au financement";
                     "Partie législative";
                     "Code de la sécurité sociale";
                   ];
               }
               true)
           (fun (_ : _) -> ouverture_droits_retraite_dot_age_ouverture_droit_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 343;
                start_column = 11;
                end_line = 343;
                end_column = 29;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let patrimoine_pris_en_compte_ : money =
    log_variable_definition
      ["ÉligibilitéAidesPersonnelleLogement"; "patrimoine_pris_en_compte"]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default
                       [|
                         (fun (_ : _) ->
                           handle_default [||]
                             (fun (_ : _) ->
                               log_decision_taken
                                 {
                                   filename =
                                     "examples/aides_logement/code_construction_legislatif.catala_fr";
                                   start_line = 285;
                                   start_column = 18;
                                   end_line = 285;
                                   end_column = 75;
                                   law_headings =
                                     [
                                       "Article L822-5";
                                       "Chapitre II : Conditions générales \
                                        d'attribution";
                                       "Titre II : Dispositions communes aux \
                                        aides personnelles au logement";
                                       "Livre VIII : Aides personnelles au \
                                        logement";
                                       "Partie législative";
                                       "Code de la construction et de \
                                        l'habitation";
                                     ];
                                 }
                                 menage_.Menage.logement
                                   .Logement
                                    .est_ehpad_ou_maison_autonomie_l313_12_asf)
                             (fun (_ : _) -> money_of_cents_string "0"));
                       |]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/code_construction_legislatif.catala_fr";
                             start_line = 266;
                             start_column = 18;
                             end_line = 268;
                             end_column = 45;
                             law_headings =
                               [
                                 "Article L822-5";
                                 "Chapitre II : Conditions générales \
                                  d'attribution";
                                 "Titre II : Dispositions communes aux aides \
                                  personnelles au logement";
                                 "Livre VIII : Aides personnelles au logement";
                                 "Partie législative";
                                 "Code de la construction et de l'habitation";
                               ];
                           }
                           (Array.fold_left
                              (fun (acc_ : bool) (prestation_ : _) ->
                                acc_
                                || prestation_
                                   = PrestationRecue
                                     .AllocationSoutienEnfantHandicape
                                       ()
                                || prestation_
                                   = PrestationRecue.AllocationAdulteHandicape
                                       ())
                              false menage_.Menage.prestations_recues))
                       (fun (_ : _) -> money_of_cents_string "0"));
                 |]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 943;
                       start_column = 5;
                       end_line = 943;
                       end_column = 59;
                       law_headings =
                         [
                           "Article R822-22";
                           "Sous-section 4 : Prise en compte du patrimoine";
                           "Section 2 : Conditions relatives aux ressources";
                           "Chapitre II : Conditions générales d'attribution";
                           "Titre II : Dispositions communes aux aides \
                            personnelles au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     (patrimoine_total_demandeur_ >=$ seuil_l822_5_patrimoine_))
                 (fun (_ : _) ->
                   demandeur_.Demandeur.patrimoine
                     .Patrimoine
                      .ne_produisant_pas_revenu_periode_r822_3_3_r822_4));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_legislatif.catala_fr";
                 start_line = 249;
                 start_column = 33;
                 end_line = 249;
                 end_column = 58;
                 law_headings =
                   [
                     "Article L822-5";
                     "Chapitre II : Conditions générales d'attribution";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie législative";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             if patrimoine_total_demandeur_ >$ seuil_l822_5_patrimoine_ then
               patrimoine_total_demandeur_
             else money_of_cents_string "0")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 341;
                start_column = 11;
                end_line = 341;
                end_column = 36;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let eligibilite_logement_ : bool =
    log_variable_definition
      ["ÉligibilitéAidesPersonnelleLogement"; "éligibilité_logement"]
      embed_bool
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default [||]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/code_construction_legislatif.catala_fr";
                             start_line = 72;
                             start_column = 5;
                             end_line = 74;
                             end_column = 56;
                             law_headings =
                               [
                                 "Chapitre II : Conditions générales \
                                  d'attribution";
                                 "Titre II : Dispositions communes aux aides \
                                  personnelles au logement";
                                 "Livre VIII : Aides personnelles au logement";
                                 "Partie législative";
                                 "Code de la construction et de l'habitation";
                               ];
                           }
                           (condition_non_ouverture_l822_8_
                          || condition_non_ouverture_l822_9_decence_logement_
                          || condition_non_ouverture_l822_10_peuplement_logement_
                           ))
                       (fun (_ : _) -> false));
                 |]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_legislatif.catala_fr";
                       start_line = 65;
                       start_column = 5;
                       end_line = 68;
                       end_column = 31;
                       law_headings =
                         [
                           "Chapitre II : Conditions générales d'attribution";
                           "Titre II : Dispositions communes aux aides \
                            personnelles au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie législative";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     (condition_logement_residence_principale_
                    && condition_logement_mode_occupation_
                    && condition_logement_location_tiers_
                    && condition_logement_surface_))
                 (fun (_ : _) -> true));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 328;
                 start_column = 11;
                 end_line = 328;
                 end_column = 31;
                 law_headings =
                   [
                     "Éligibilité aux aides personnelles au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> false)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 328;
                start_column = 11;
                end_line = 328;
                end_column = 31;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let age_l351_8_1_secu_ : duration =
    log_variable_definition
      ["ÉligibilitéAidesPersonnelleLogement"; "âge_l351_8_1_sécu"]
      embed_duration
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_sécurité_sociale.catala_fr";
                 start_line = 163;
                 start_column = 14;
                 end_line = 163;
                 end_column = 31;
                 law_headings =
                   [
                     "Article L351-8";
                     "Section 5 : Taux et montant de la pension";
                     "Chapitre 1er : Ouverture du droit, liquidation et calcul \
                      des pensions de retraite";
                     "Titre V : Assurance vieillesse - Assurance veuvage";
                     "Livre III : Dispositions relatives aux assurances \
                      sociales et à diverses catégories de personnes \
                      rattachées au régime générale";
                     "Partie législative";
                     "Code de la sécurité sociale";
                   ];
               }
               true)
           (fun (_ : _) -> age_l161_17_2_secu_ +^ duration_of_numbers 5 0 0)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 342;
                start_column = 11;
                end_line = 342;
                end_column = 28;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let eligibilite_ : bool =
    log_variable_definition
      ["ÉligibilitéAidesPersonnelleLogement"; "éligibilité"]
      embed_bool
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename = "examples/aides_logement/prologue.catala_fr";
                       start_line = 357;
                       start_column = 5;
                       end_line = 359;
                       end_column = 25;
                       law_headings =
                         [
                           "Éligibilité aux aides personnelles au logement";
                           "Déclarations des champs d'application";
                           "Prologue : aides au logement";
                         ];
                     }
                     (condition_nationalite_
                    && condition_logement_mode_occupation_
                    && eligibilite_logement_))
                 (fun (_ : _) -> true));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 347;
                 start_column = 10;
                 end_line = 347;
                 end_column = 21;
                 law_headings =
                   [
                     "Éligibilité aux aides personnelles au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> false)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 347;
                start_column = 10;
                end_line = 347;
                end_column = 21;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let condition_2_r823_4_ : PersonneACharge.t -> bool =
    log_variable_definition
      ["ÉligibilitéAidesPersonnelleLogement"; "condition_2_r823_4"]
      unembeddable
      (try
         fun (param_ : PersonneACharge.t) ->
           try
             handle_default
               [|
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/code_construction_reglementaire.catala_fr";
                           start_line = 1173;
                           start_column = 5;
                           end_line = 1189;
                           end_column = 10;
                           law_headings =
                             [
                               "Article R823-4";
                               "Section 1 : Calcul, liquidation et versement \
                                des aides";
                               "Chapitre III : Modalités de liquidation et de \
                                versement";
                               "Titre II : Dispositions communes aux aides \
                                personnelles au logement";
                               "Livre VIII : Aides personnelles au logement";
                               "Partie réglementaire";
                               "Code de la construction et de l'habitation";
                             ];
                         }
                         (match param_ with
                         | PersonneACharge.EnfantACharge enfant_ -> false
                         | PersonneACharge.AutrePersonneACharge parent_ ->
                           parent_.AutrePersonneACharge.parente
                           = Parente.Ascendant ()
                           && parent_.AutrePersonneACharge.ressources
                              <=$ plafond_individuel_l815_9_secu_
                                  *$ decimal_of_string "1.25"
                           && ((parent_.AutrePersonneACharge.date_naissance
                                +@ age_l351_8_1_secu_
                                <=@ date_courante_
                               || parent_
                                    .AutrePersonneACharge
                                     .titulaire_allocation_personne_agee
                                  && parent_.AutrePersonneACharge.date_naissance
                                     +@ duration_of_numbers 65 0 0
                                     <=@ date_courante_)
                              || parent_.AutrePersonneACharge.date_naissance
                                 +@ age_l161_17_2_secu_
                                 <=@ date_courante_
                                 && parent_
                                      .AutrePersonneACharge
                                       .beneficiaire_l161_19_l351_8_l643_3_secu
                              )))
                     (fun (_ : _) -> true));
               |]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename = "examples/aides_logement/prologue.catala_fr";
                     start_line = 351;
                     start_column = 10;
                     end_line = 351;
                     end_column = 28;
                     law_headings =
                       [
                         "Éligibilité aux aides personnelles au logement";
                         "Déclarations des champs d'application";
                         "Prologue : aides au logement";
                       ];
                   }
                   true)
               (fun (_ : _) -> false)
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 351;
                    start_column = 10;
                    end_line = 351;
                    end_column = 28;
                    law_headings =
                      [
                        "Éligibilité aux aides personnelles au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 351;
                start_column = 10;
                end_line = 351;
                end_column = 28;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let prise_en_compte_personne_a_charge_ : PersonneACharge.t -> bool =
    log_variable_definition
      [
        "ÉligibilitéAidesPersonnelleLogement";
        "prise_en_compte_personne_à_charge";
      ]
      unembeddable
      (try
         fun (param_ : PersonneACharge.t) ->
           try
             handle_default
               [|
                 (fun (_ : _) ->
                   handle_default
                     [|
                       (fun (_ : _) ->
                         handle_default [||]
                           (fun (_ : _) ->
                             log_decision_taken
                               {
                                 filename =
                                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                                 start_line = 1213;
                                 start_column = 4;
                                 end_line = 1219;
                                 end_column = 49;
                                 law_headings =
                                   [
                                     "Article R823-4";
                                     "Section 1 : Calcul, liquidation et \
                                      versement des aides";
                                     "Chapitre III : Modalités de liquidation \
                                      et de versement";
                                     "Titre II : Dispositions communes aux \
                                      aides personnelles au logement";
                                     "Livre VIII : Aides personnelles au \
                                      logement";
                                     "Partie réglementaire";
                                     "Code de la construction et de \
                                      l'habitation";
                                   ];
                               }
                               (match param_ with
                               | PersonneACharge.EnfantACharge enfant_ -> false
                               | PersonneACharge.AutrePersonneACharge parent_ ->
                                 parent_
                                   .AutrePersonneACharge
                                    .incapacite_80_pourcent_ou_restriction_emploi
                                 && parent_.AutrePersonneACharge.ressources
                                    <=$ plafond_individuel_l815_9_secu_
                                        *$ decimal_of_string "1.25"))
                           (fun (_ : _) -> true));
                     |]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/code_construction_reglementaire.catala_fr";
                           start_line = 1194;
                           start_column = 5;
                           end_line = 1194;
                           end_column = 44;
                           law_headings =
                             [
                               "Article R823-4";
                               "Section 1 : Calcul, liquidation et versement \
                                des aides";
                               "Chapitre III : Modalités de liquidation et de \
                                versement";
                               "Titre II : Dispositions communes aux aides \
                                personnelles au logement";
                               "Livre VIII : Aides personnelles au logement";
                               "Partie réglementaire";
                               "Code de la construction et de l'habitation";
                             ];
                         }
                         (log_end_call
                            [
                              "ÉligibilitéAidesPersonnelleLogement";
                              "condition_2_r823_4";
                            ]
                            (log_variable_definition
                               [
                                 "ÉligibilitéAidesPersonnelleLogement";
                                 "condition_2_r823_4";
                                 "output";
                               ]
                               embed_bool
                               ((log_begin_call
                                   [
                                     "ÉligibilitéAidesPersonnelleLogement";
                                     "condition_2_r823_4";
                                   ]
                                   condition_2_r823_4_)
                                  (log_variable_definition
                                     [
                                       "ÉligibilitéAidesPersonnelleLogement";
                                       "condition_2_r823_4";
                                       "input";
                                     ]
                                     embed_personne_a_charge param_)))))
                     (fun (_ : _) -> true));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/code_construction_reglementaire.catala_fr";
                           start_line = 1150;
                           start_column = 5;
                           end_line = 1152;
                           end_column = 44;
                           law_headings =
                             [
                               "Article R823-4";
                               "Section 1 : Calcul, liquidation et versement \
                                des aides";
                               "Chapitre III : Modalités de liquidation et de \
                                versement";
                               "Titre II : Dispositions communes aux aides \
                                personnelles au logement";
                               "Livre VIII : Aides personnelles au logement";
                               "Partie réglementaire";
                               "Code de la construction et de l'habitation";
                             ];
                         }
                         (match param_ with
                         | PersonneACharge.EnfantACharge enfant_ ->
                           enfant_.EnfantACharge.age <=! integer_of_string "21"
                         | PersonneACharge.AutrePersonneACharge parent_ -> false))
                     (fun (_ : _) -> true));
               |]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename = "examples/aides_logement/prologue.catala_fr";
                     start_line = 329;
                     start_column = 11;
                     end_line = 329;
                     end_column = 44;
                     law_headings =
                       [
                         "Éligibilité aux aides personnelles au logement";
                         "Déclarations des champs d'application";
                         "Prologue : aides au logement";
                       ];
                   }
                   true)
               (fun (_ : _) -> false)
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 329;
                    start_column = 11;
                    end_line = 329;
                    end_column = 44;
                    law_headings =
                      [
                        "Éligibilité aux aides personnelles au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 329;
                start_column = 11;
                end_line = 329;
                end_column = 44;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let personnes_a_charge_prises_en_compte_ : PersonneACharge.t array =
    log_variable_definition
      [
        "ÉligibilitéAidesPersonnelleLogement";
        "personnes_à_charge_prises_en_compte";
      ]
      (embed_array embed_personne_a_charge)
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1138;
                 start_column = 14;
                 end_line = 1138;
                 end_column = 49;
                 law_headings =
                   [
                     "Article R823-4";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             array_filter
               (fun (personne_a_charge_ : _) ->
                 log_end_call
                   [
                     "ÉligibilitéAidesPersonnelleLogement";
                     "prise_en_compte_personne_à_charge";
                   ]
                   (log_variable_definition
                      [
                        "ÉligibilitéAidesPersonnelleLogement";
                        "prise_en_compte_personne_à_charge";
                        "output";
                      ]
                      embed_bool
                      ((log_begin_call
                          [
                            "ÉligibilitéAidesPersonnelleLogement";
                            "prise_en_compte_personne_à_charge";
                          ]
                          prise_en_compte_personne_a_charge_)
                         (log_variable_definition
                            [
                              "ÉligibilitéAidesPersonnelleLogement";
                              "prise_en_compte_personne_à_charge";
                              "input";
                            ]
                            embed_personne_a_charge personne_a_charge_))))
               menage_.Menage.personnes_a_charge)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 331;
                start_column = 11;
                end_line = 331;
                end_column = 46;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let coefficents_enfants_garde_alternee_pris_en_compte_ : decimal array =
    log_variable_definition
      [
        "ÉligibilitéAidesPersonnelleLogement";
        "coefficents_enfants_garde_alternée_pris_en_compte";
      ]
      (embed_array embed_decimal)
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 363;
                 start_column = 14;
                 end_line = 363;
                 end_column = 63;
                 law_headings =
                   [
                     "Éligibilité aux aides personnelles au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) ->
             Array.map
               (fun (personne_a_charge_ : _) ->
                 match personne_a_charge_ with
                 | PersonneACharge.EnfantACharge enfant_ -> (
                   match enfant_.EnfantACharge.situation_garde_alternee with
                   | SituationGardeAlternee.PasDeGardeAlternee _ ->
                     decimal_of_string "0."
                   | SituationGardeAlternee
                     .GardeAlterneeCoefficientPriseEnCharge coeff_ ->
                     coeff_)
                 | PersonneACharge.AutrePersonneACharge _ ->
                   decimal_of_string "0.")
               (array_filter
                  (fun (personne_a_charge_ : _) ->
                    match personne_a_charge_ with
                    | PersonneACharge.EnfantACharge enfant_ -> (
                      match enfant_.EnfantACharge.situation_garde_alternee with
                      | SituationGardeAlternee.PasDeGardeAlternee _ -> false
                      | SituationGardeAlternee
                        .GardeAlterneeCoefficientPriseEnCharge _ ->
                        true)
                    | PersonneACharge.AutrePersonneACharge _ -> false)
                  personnes_a_charge_prises_en_compte_))
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 349;
                start_column = 10;
                end_line = 349;
                end_column = 59;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let nombre_personnes_a_charge_prises_en_compte_ : integer =
    log_variable_definition
      [
        "ÉligibilitéAidesPersonnelleLogement";
        "nombre_personnes_à_charge_prises_en_compte";
      ]
      embed_integer
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 361;
                 start_column = 14;
                 end_line = 361;
                 end_column = 56;
                 law_headings =
                   [
                     "Éligibilité aux aides personnelles au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> array_length personnes_a_charge_prises_en_compte_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 348;
                start_column = 10;
                end_line = 348;
                end_column = 52;
                law_headings =
                  [
                    "Éligibilité aux aides personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let (_ : unit) =
    if
      try seuil_l822_3_parts_usufruit_ <& decimal_of_string "0.2"
      with EmptyError ->
        raise
          (NoValueProvided
             {
               filename =
                 "examples/aides_logement/code_construction_legislatif.catala_fr";
               start_line = 182;
               start_column = 13;
               end_line = 182;
               end_column = 48;
               law_headings =
                 [
                   "Article L822-3";
                   "Chapitre II : Conditions générales d'attribution";
                   "Titre II : Dispositions communes aux aides personnelles au \
                    logement";
                   "Livre VIII : Aides personnelles au logement";
                   "Partie législative";
                   "Code de la construction et de l'habitation";
                 ];
             })
    then ()
    else raise AssertionFailed
  in
  let (_ : unit) =
    if
      try seuil_l822_3_parts_propriete_ <& decimal_of_string "0.2"
      with EmptyError ->
        raise
          (NoValueProvided
             {
               filename =
                 "examples/aides_logement/code_construction_legislatif.catala_fr";
               start_line = 181;
               start_column = 13;
               end_line = 181;
               end_column = 49;
               law_headings =
                 [
                   "Article L822-3";
                   "Chapitre II : Conditions générales d'attribution";
                   "Titre II : Dispositions communes aux aides personnelles au \
                    logement";
                   "Livre VIII : Aides personnelles au logement";
                   "Partie législative";
                   "Code de la construction et de l'habitation";
                 ];
             })
    then ()
    else raise AssertionFailed
  in
  {
    EligibiliteAidesPersonnelleLogementOut.date_courante_out = date_courante_;
    EligibiliteAidesPersonnelleLogementOut.eligibilite_out = eligibilite_;
    EligibiliteAidesPersonnelleLogementOut
    .nombre_personnes_a_charge_prises_en_compte_out =
      nombre_personnes_a_charge_prises_en_compte_;
    EligibiliteAidesPersonnelleLogementOut
    .coefficents_enfants_garde_alternee_pris_en_compte_out =
      coefficents_enfants_garde_alternee_pris_en_compte_;
    EligibiliteAidesPersonnelleLogementOut.condition_2_r823_4_out =
      condition_2_r823_4_;
  }

let ressources_aides_personnelle_logement
    (ressources_aides_personnelle_logement_in :
      RessourcesAidesPersonnelleLogementIn.t) :
    RessourcesAidesPersonnelleLogementOut.t =
  let ressources_demandeur_ : money =
    ressources_aides_personnelle_logement_in
      .RessourcesAidesPersonnelleLogementIn.ressources_demandeur_in
  in
  let ressources_conjoint_ : money =
    ressources_aides_personnelle_logement_in
      .RessourcesAidesPersonnelleLogementIn.ressources_conjoint_in
  in
  let personnes_vivant_habituellement_foyer_ :
      PersonneVivantHabituellementAuFoyer.t array =
    ressources_aides_personnelle_logement_in
      .RessourcesAidesPersonnelleLogementIn
       .personnes_vivant_habituellement_foyer_in
  in
  let demandeur_exerce_activite_remuneree_ : bool =
    ressources_aides_personnelle_logement_in
      .RessourcesAidesPersonnelleLogementIn
       .demandeur_exerce_activite_remuneree_in
  in
  let conjoint_exerce_activite_remuneree_ : bool =
    ressources_aides_personnelle_logement_in
      .RessourcesAidesPersonnelleLogementIn
       .conjoint_exerce_activite_remuneree_in
  in
  let personnes_a_charge_ : PersonneACharge.t array =
    ressources_aides_personnelle_logement_in
      .RessourcesAidesPersonnelleLogementIn.personnes_a_charge_in
  in
  let situation_familiale_ : SituationFamiliale.t =
    ressources_aides_personnelle_logement_in
      .RessourcesAidesPersonnelleLogementIn.situation_familiale_in
  in
  let mode_occupation_ : ModeOccupation.t =
    ressources_aides_personnelle_logement_in
      .RessourcesAidesPersonnelleLogementIn.mode_occupation_in
  in
  let condition_age_bourse_enseignement_superieur_ : bool =
    ressources_aides_personnelle_logement_in
      .RessourcesAidesPersonnelleLogementIn
       .condition_age_bourse_enseignement_superieur_in
  in
  let demandeur_poursuit_des_etudes_ : bool =
    ressources_aides_personnelle_logement_in
      .RessourcesAidesPersonnelleLogementIn.demandeur_poursuit_des_etudes_in
  in
  let date_demande_ou_reexamen_droit_ : date =
    ressources_aides_personnelle_logement_in
      .RessourcesAidesPersonnelleLogementIn.date_demande_ou_reexamen_droit_in
  in
  let paiement_logement_distinct_professionnel_ :
      PaiementLogementDistinctProfessionnel.t =
    ressources_aides_personnelle_logement_in
      .RessourcesAidesPersonnelleLogementIn
       .paiement_logement_distinct_professionnel_in
  in
  let ressources_menage_arrondies_base_ : money =
    ressources_aides_personnelle_logement_in
      .RessourcesAidesPersonnelleLogementIn.ressources_menage_arrondies_base_in
  in
  let ressources_menage_arrondies_seuil_ : money =
    log_variable_definition
      [
        "RessourcesAidesPersonnelleLogement"; "ressources_ménage_arrondies_seuil";
      ]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 522;
                 start_column = 46;
                 end_line = 522;
                 end_column = 52;
                 law_headings =
                   [
                     "Prise en compte des ressources pour les aides \
                      personnelles au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 524;
                start_column = 10;
                end_line = 524;
                end_column = 15;
                law_headings =
                  [
                    "Prise en compte des ressources pour les aides \
                     personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let montant_forfaitaire_r_822_8_ : money =
    log_variable_definition
      ["RessourcesAidesPersonnelleLogement"; "montant_forfaitaire_r_822_8"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 21;
                 start_column = 14;
                 end_line = 21;
                 end_column = 41;
                 law_headings =
                   [
                     "Article 4";
                     "Chapitre II : Dispositions applicables aux ressources";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) -> money_of_cents_string "258900")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 528;
                start_column = 11;
                end_line = 528;
                end_column = 38;
                law_headings =
                  [
                    "Prise en compte des ressources pour les aides \
                     personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let montant_forfaitaire_r_822_7_ : money =
    log_variable_definition
      ["RessourcesAidesPersonnelleLogement"; "montant_forfaitaire_r_822_7"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 11;
                 start_column = 14;
                 end_line = 11;
                 end_column = 41;
                 law_headings =
                   [
                     "Article 3";
                     "Chapitre II : Dispositions applicables aux ressources";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) -> money_of_cents_string "9500")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 530;
                start_column = 11;
                end_line = 530;
                end_column = 38;
                law_headings =
                  [
                    "Prise en compte des ressources pour les aides \
                     personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let ressources_forfaitaires_r822_20_ : money =
    log_variable_definition
      ["RessourcesAidesPersonnelleLogement"; "ressources_forfaitaires_r822_20"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 532;
                 start_column = 51;
                 end_line = 532;
                 end_column = 57;
                 law_headings =
                   [
                     "Prise en compte des ressources pour les aides \
                      personnelles au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 532;
                start_column = 11;
                end_line = 532;
                end_column = 42;
                law_headings =
                  [
                    "Prise en compte des ressources pour les aides \
                     personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let ressources_personnes_vivant_habituellement_foyer_ : money =
    log_variable_definition
      [
        "RessourcesAidesPersonnelleLogement";
        "ressources_personnes_vivant_habituellement_foyer";
      ]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 129;
                 start_column = 14;
                 end_line = 129;
                 end_column = 62;
                 law_headings =
                   [
                     "Article R822-2";
                     "Sous-section 1 : Modalités générales de l'appréciation \
                      des ressources";
                     "Section 2 : Conditions relatives aux ressources";
                     "Chapitre II : Conditions générales d'attribution";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             Array.fold_left
               (fun (acc_ : money) (personne_ : _) ->
                 acc_
                 +$ personne_.PersonneVivantHabituellementAuFoyer.ressources)
               (money_of_cents_string "0")
               personnes_vivant_habituellement_foyer_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 526;
                start_column = 11;
                end_line = 526;
                end_column = 59;
                law_headings =
                  [
                    "Prise en compte des ressources pour les aides \
                     personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let abattement_r_822_10_ : money =
    log_variable_definition
      ["RessourcesAidesPersonnelleLogement"; "abattement_r_822_10"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 519;
                 start_column = 14;
                 end_line = 519;
                 end_column = 33;
                 law_headings =
                   [
                     "Article R822-10";
                     "Sous-section 2 : Principes de neutralisation et \
                      d'abattement";
                     "Section 2 : Conditions relatives aux ressources";
                     "Chapitre II : Conditions générales d'attribution";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match situation_familiale_ with
             | SituationFamiliale.Celibataire _ ->
               if array_length personnes_a_charge_ = integer_of_string "0" then
                 money_of_cents_string "0"
               else if
                 array_length personnes_a_charge_ <=! integer_of_string "2"
               then money_of_cents_string "90100"
               else money_of_cents_string "135000"
             | SituationFamiliale.Maries _ -> money_of_cents_string "0"
             | SituationFamiliale.Pacses _ -> money_of_cents_string "0"
             | SituationFamiliale.Concubins _ -> money_of_cents_string "0"
             | SituationFamiliale.CelibataireSepareDeFait _ ->
               if array_length personnes_a_charge_ = integer_of_string "0" then
                 money_of_cents_string "0"
               else if
                 array_length personnes_a_charge_ <=! integer_of_string "2"
               then money_of_cents_string "90100"
               else money_of_cents_string "135000"
             | SituationFamiliale.ConcubinageDontSepareDeFait _ ->
               money_of_cents_string "0")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 531;
                start_column = 11;
                end_line = 531;
                end_column = 30;
                law_headings =
                  [
                    "Prise en compte des ressources pour les aides \
                     personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let base_mensuelle_allocations_familiales_dot_date_courante_ : date =
    try
      log_variable_definition
        [
          "RessourcesAidesPersonnelleLogement";
          "base_mensuelle_allocations_familiales.date_courante";
        ]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 413;
                 start_column = 14;
                 end_line = 413;
                 end_column = 65;
                 law_headings =
                   [
                     "Article R822-7";
                     "Sous-section 2 : Principes de neutralisation et \
                      d'abattement";
                     "Section 2 : Conditions relatives aux ressources";
                     "Chapitre II : Conditions générales d'attribution";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> date_demande_ou_reexamen_droit_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename =
               "examples/aides_logement/../base_mensuelle_allocations_familiales/bmaf.catala_fr";
             start_line = 5;
             start_column = 10;
             end_line = 5;
             end_column = 23;
             law_headings =
               ["Montant de la base mensuelle des allocations familiales"];
           })
  in
  let result_ : BaseMensuelleAllocationsFamilialesOut.t =
    log_end_call
      [
        "RessourcesAidesPersonnelleLogement";
        "base_mensuelle_allocations_familiales";
        "BaseMensuelleAllocationsFamiliales";
      ]
      ((log_begin_call
          [
            "RessourcesAidesPersonnelleLogement";
            "base_mensuelle_allocations_familiales";
            "BaseMensuelleAllocationsFamiliales";
          ]
          base_mensuelle_allocations_familiales)
         {
           BaseMensuelleAllocationsFamilialesIn.date_courante_in =
             base_mensuelle_allocations_familiales_dot_date_courante_;
         })
  in
  let base_mensuelle_allocations_familiales_dot_montant_ : money =
    result_.BaseMensuelleAllocationsFamilialesOut.montant_out
  in
  let abattement_r_822_8_ : money =
    log_variable_definition
      ["RessourcesAidesPersonnelleLogement"; "abattement_r_822_8"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 457;
                 start_column = 14;
                 end_line = 457;
                 end_column = 32;
                 law_headings =
                   [
                     "Article R822-8";
                     "Sous-section 2 : Principes de neutralisation et \
                      d'abattement";
                     "Section 2 : Conditions relatives aux ressources";
                     "Chapitre II : Conditions générales d'attribution";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match paiement_logement_distinct_professionnel_ with
             | PaiementLogementDistinctProfessionnel.OuiAvecLoyerOuCharges
                 loyer_ou_charges_ ->
               montant_forfaitaire_r_822_8_
             | PaiementLogementDistinctProfessionnel.Non _ ->
               money_of_cents_string "0")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 527;
                start_column = 11;
                end_line = 527;
                end_column = 29;
                law_headings =
                  [
                    "Prise en compte des ressources pour les aides \
                     personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let ressources_prises_en_compte_ : money =
    log_variable_definition
      ["RessourcesAidesPersonnelleLogement"; "ressources_prises_en_compte"]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 854;
                       start_column = 6;
                       end_line = 856;
                       end_column = 35;
                       law_headings =
                         [
                           "Article R822-20";
                           "Sous-section 3 : Montant forfaitaire de ressources \
                            applicable aux étudiants";
                           "Section 2 : Conditions relatives aux ressources";
                           "Chapitre II : Conditions générales d'attribution";
                           "Titre II : Dispositions communes aux aides \
                            personnelles au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     ((match mode_occupation_ with
                      | ModeOccupation.Locataire _ -> true
                      | ModeOccupation.ResidentLogementFoyer _ -> false
                      | ModeOccupation
                        .AccessionProprieteLocalUsageExclusifHabitation _ ->
                        false
                      | ModeOccupation.SousLocataire _ -> false
                      | ModeOccupation.LocationAccession _ -> false)
                     && condition_age_bourse_enseignement_superieur_
                     && demandeur_poursuit_des_etudes_))
                 (fun (_ : _) -> ressources_forfaitaires_r822_20_));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 124;
                 start_column = 14;
                 end_line = 124;
                 end_column = 41;
                 law_headings =
                   [
                     "Article R822-2";
                     "Sous-section 1 : Modalités générales de l'appréciation \
                      des ressources";
                     "Section 2 : Conditions relatives aux ressources";
                     "Chapitre II : Conditions générales d'attribution";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             ressources_demandeur_ +$ ressources_conjoint_
             +$ ressources_personnes_vivant_habituellement_foyer_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 537;
                start_column = 10;
                end_line = 537;
                end_column = 37;
                law_headings =
                  [
                    "Prise en compte des ressources pour les aides \
                     personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let abattement_r_822_7_ : money =
    log_variable_definition
      ["RessourcesAidesPersonnelleLogement"; "abattement_r_822_7"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 404;
                 start_column = 14;
                 end_line = 404;
                 end_column = 32;
                 law_headings =
                   [
                     "Article R822-7";
                     "Sous-section 2 : Principes de neutralisation et \
                      d'abattement";
                     "Section 2 : Conditions relatives aux ressources";
                     "Chapitre II : Conditions générales d'attribution";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             if
               demandeur_exerce_activite_remuneree_
               && conjoint_exerce_activite_remuneree_
               && ressources_conjoint_ +$ ressources_conjoint_
                  >=$ base_mensuelle_allocations_familiales_dot_montant_
                      *$ decimal_of_string "12."
             then montant_forfaitaire_r_822_7_
             else money_of_cents_string "0")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 529;
                start_column = 11;
                end_line = 529;
                end_column = 29;
                law_headings =
                  [
                    "Prise en compte des ressources pour les aides \
                     personnelles au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let (_ : unit) =
    if
      try
        Array.fold_left
          (fun (acc_ : bool) (personne_ : _) ->
            acc_
            && personne_
                 .PersonneVivantHabituellementAuFoyer
                  .duree_residence_durant_periode_r_822_3_1_superieure_a_6_mois)
          true personnes_vivant_habituellement_foyer_
      with EmptyError ->
        raise
          (NoValueProvided
             {
               filename =
                 "examples/aides_logement/code_construction_reglementaire.catala_fr";
               start_line = 142;
               start_column = 13;
               end_line = 143;
               end_column = 74;
               law_headings =
                 [
                   "Article R822-2";
                   "Sous-section 1 : Modalités générales de l'appréciation des \
                    ressources";
                   "Section 2 : Conditions relatives aux ressources";
                   "Chapitre II : Conditions générales d'attribution";
                   "Titre II : Dispositions communes aux aides personnelles au \
                    logement";
                   "Livre VIII : Aides personnelles au logement";
                   "Partie réglementaire";
                   "Code de la construction et de l'habitation";
                 ];
             })
    then ()
    else raise AssertionFailed
  in
  {
    RessourcesAidesPersonnelleLogementOut.ressources_prises_en_compte_out =
      ressources_prises_en_compte_;
  }

let eligibilite_prestations_familiales
    (eligibilite_prestations_familiales_in :
      EligibilitePrestationsFamilialesIn.t) :
    EligibilitePrestationsFamilialesOut.t =
  let date_courante_ : date =
    eligibilite_prestations_familiales_in
      .EligibilitePrestationsFamilialesIn.date_courante_in
  in
  let prestation_courante_ : ElementPrestationsFamiliales.t =
    eligibilite_prestations_familiales_in
      .EligibilitePrestationsFamilialesIn.prestation_courante_in
  in
  let residence_ : Collectivite.t =
    eligibilite_prestations_familiales_in
      .EligibilitePrestationsFamilialesIn.residence_in
  in
  let age_l512_3_2_ : integer =
    log_variable_definition
      ["ÉligibilitéPrestationsFamiliales"; "âge_l512_3_2"]
      embed_integer
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/../prestations_familiales/sécurité_sociale_R.catala_fr";
                 start_line = 21;
                 start_column = 14;
                 end_line = 21;
                 end_column = 26;
                 law_headings =
                   [
                     "Article R512-2";
                     "Chapitre 2 : Champ d'application.";
                     "Titre 1 : Champ d'application - Généralités";
                     "Livre 5 : Prestations familiales et prestations \
                      assimilées";
                     "Partie réglementaire - Décrets en Conseil d'Etat";
                     "Code de la sécurité sociale";
                   ];
               }
               true)
           (fun (_ : _) -> integer_of_string "20")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename =
                  "examples/aides_logement/../prestations_familiales/prologue.catala_fr";
                start_line = 44;
                start_column = 10;
                end_line = 44;
                end_column = 22;
                law_headings = ["Prologue : prestations familiales"];
              }))
  in
  let smic_dot_date_courante_ : date =
    try
      log_variable_definition
        ["ÉligibilitéPrestationsFamiliales"; "smic.date_courante"]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/../prestations_familiales/prologue.catala_fr";
                 start_line = 53;
                 start_column = 14;
                 end_line = 53;
                 end_column = 32;
                 law_headings = ["Prologue : prestations familiales"];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename =
               "examples/aides_logement/../prestations_familiales/../smic/smic.catala_fr";
             start_line = 9;
             start_column = 10;
             end_line = 9;
             end_column = 23;
             law_headings =
               ["Prologue"; "Montant du salaire minimum de croissance"];
           })
  in
  let smic_dot_residence_ : Collectivite.t =
    try
      log_variable_definition
        ["ÉligibilitéPrestationsFamiliales"; "smic.résidence"]
        embed_collectivite
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/../prestations_familiales/prologue.catala_fr";
                 start_line = 52;
                 start_column = 14;
                 end_line = 52;
                 end_column = 28;
                 law_headings = ["Prologue : prestations familiales"];
               }
               true)
           (fun (_ : _) -> residence_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename =
               "examples/aides_logement/../prestations_familiales/../smic/smic.catala_fr";
             start_line = 10;
             start_column = 10;
             end_line = 10;
             end_column = 19;
             law_headings =
               ["Prologue"; "Montant du salaire minimum de croissance"];
           })
  in
  let result_ : SmicOut.t =
    log_end_call
      ["ÉligibilitéPrestationsFamiliales"; "smic"; "Smic"]
      ((log_begin_call
          ["ÉligibilitéPrestationsFamiliales"; "smic"; "Smic"]
          smic)
         {
           SmicIn.date_courante_in = smic_dot_date_courante_;
           SmicIn.residence_in = smic_dot_residence_;
         })
  in
  let smic_dot_brut_horaire_ : money = result_.SmicOut.brut_horaire_out in
  let regime_outre_mer_l751_1_ : bool =
    log_variable_definition
      ["ÉligibilitéPrestationsFamiliales"; "régime_outre_mer_l751_1"]
      embed_bool
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/../prestations_familiales/sécurité_sociale_L.catala_fr";
                       start_line = 103;
                       start_column = 5;
                       end_line = 108;
                       end_column = 30;
                       law_headings =
                         [
                           "Article L751-1";
                           "Chapitre 1er : Généralités";
                           "Titre 5 : Dispositions particulières à la \
                            Guadeloupe, à la Guyane, à la Martinique, à La \
                            Réunion, à Saint-Barthélemy et à Saint-Martin";
                           "Livre 7 : Régimes divers - Dispositions diverses";
                           "Partie législative";
                           "Code de la sécurité sociale";
                         ];
                     }
                     (residence_ = Collectivite.Guadeloupe ()
                     || residence_ = Collectivite.Guyane ()
                     || residence_ = Collectivite.Martinique ()
                     || residence_ = Collectivite.LaReunion ()
                     || residence_ = Collectivite.SaintBarthelemy ()
                     || residence_ = Collectivite.SaintMartin ()))
                 (fun (_ : _) -> true));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/../prestations_familiales/prologue.catala_fr";
                 start_line = 45;
                 start_column = 10;
                 end_line = 45;
                 end_column = 33;
                 law_headings = ["Prologue : prestations familiales"];
               }
               true)
           (fun (_ : _) -> false)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename =
                  "examples/aides_logement/../prestations_familiales/prologue.catala_fr";
                start_line = 45;
                start_column = 10;
                end_line = 45;
                end_column = 33;
                law_headings = ["Prologue : prestations familiales"];
              }))
  in
  let plafond_l512_3_2_ : money =
    log_variable_definition
      ["ÉligibilitéPrestationsFamiliales"; "plafond_l512_3_2"]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/../prestations_familiales/sécurité_sociale_R.catala_fr";
                       start_line = 62;
                       start_column = 18;
                       end_line = 62;
                       end_column = 41;
                       law_headings =
                         [
                           "Article R755-0-2";
                           "Chapitre 5 : Prestations familiales et prestations \
                            assimilées";
                           "Titre 5 : Départements d'outre-mer";
                           "Livre 7 : Régimes divers - Dispositions diverses";
                           "Partie réglementaire - Décrets en Conseil d'Etat";
                           "Code de la sécurité sociale";
                         ];
                     }
                     regime_outre_mer_l751_1_)
                 (fun (_ : _) ->
                   smic_dot_brut_horaire_ *$ decimal_of_string "0.55"
                   *$ decimal_of_string "169."));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/../prestations_familiales/sécurité_sociale_R.catala_fr";
                 start_line = 31;
                 start_column = 14;
                 end_line = 31;
                 end_column = 30;
                 law_headings =
                   [
                     "Article R512-2";
                     "Chapitre 2 : Champ d'application.";
                     "Titre 1 : Champ d'application - Généralités";
                     "Livre 5 : Prestations familiales et prestations \
                      assimilées";
                     "Partie réglementaire - Décrets en Conseil d'Etat";
                     "Code de la sécurité sociale";
                   ];
               }
               true)
           (fun (_ : _) ->
             smic_dot_brut_horaire_ *$ decimal_of_string "0.55"
             *$ decimal_of_string "169.")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename =
                  "examples/aides_logement/../prestations_familiales/prologue.catala_fr";
                start_line = 43;
                start_column = 11;
                end_line = 43;
                end_column = 27;
                law_headings = ["Prologue : prestations familiales"];
              }))
  in
  let conditions_hors_age_ : EnfantPrestationsFamiliales.t -> bool =
    log_variable_definition
      ["ÉligibilitéPrestationsFamiliales"; "conditions_hors_âge"]
      unembeddable
      (try
         fun (param_ : EnfantPrestationsFamiliales.t) ->
           try
             handle_default
               [|
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/../prestations_familiales/sécurité_sociale_L.catala_fr";
                           start_line = 66;
                           start_column = 5;
                           end_line = 69;
                           end_column = 85;
                           law_headings =
                             [
                               "Article L512-3";
                               "Chapitre 2 : Champ d'application";
                               "Titre 1 : Champ d'application - Généralités";
                               "Livre 5 : Prestations familiales et \
                                prestations assimilées";
                               "Partie législative";
                               "Code de la sécurité sociale";
                             ];
                         }
                         (((match
                              param_
                                .EnfantPrestationsFamiliales.obligation_scolaire
                            with
                           | SituationObligationScolaire.Avant _ -> true
                           | SituationObligationScolaire.Pendant _ -> false
                           | SituationObligationScolaire.Apres _ -> false)
                          || (match
                                param_
                                  .EnfantPrestationsFamiliales
                                   .obligation_scolaire
                              with
                             | SituationObligationScolaire.Avant _ -> false
                             | SituationObligationScolaire.Pendant _ -> true
                             | SituationObligationScolaire.Apres _ -> false)
                          ||
                          match
                            param_
                              .EnfantPrestationsFamiliales.obligation_scolaire
                          with
                          | SituationObligationScolaire.Avant _ -> false
                          | SituationObligationScolaire.Pendant _ -> false
                          | SituationObligationScolaire.Apres _ -> true)
                         && param_
                              .EnfantPrestationsFamiliales
                               .remuneration_mensuelle <=$ plafond_l512_3_2_))
                     (fun (_ : _) -> true));
               |]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/../prestations_familiales/prologue.catala_fr";
                     start_line = 42;
                     start_column = 10;
                     end_line = 42;
                     end_column = 29;
                     law_headings = ["Prologue : prestations familiales"];
                   }
                   true)
               (fun (_ : _) -> false)
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename =
                      "examples/aides_logement/../prestations_familiales/prologue.catala_fr";
                    start_line = 42;
                    start_column = 10;
                    end_line = 42;
                    end_column = 29;
                    law_headings = ["Prologue : prestations familiales"];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename =
                  "examples/aides_logement/../prestations_familiales/prologue.catala_fr";
                start_line = 42;
                start_column = 10;
                end_line = 42;
                end_column = 29;
                law_headings = ["Prologue : prestations familiales"];
              }))
  in
  let droit_ouvert_ : EnfantPrestationsFamiliales.t -> bool =
    log_variable_definition
      ["ÉligibilitéPrestationsFamiliales"; "droit_ouvert"]
      unembeddable
      (try
         fun (param_ : EnfantPrestationsFamiliales.t) ->
           try
             handle_default
               [|
                 (fun (_ : _) ->
                   handle_default
                     [|
                       (fun (_ : _) ->
                         handle_default
                           [|
                             (fun (_ : _) ->
                               handle_default [||]
                                 (fun (_ : _) ->
                                   log_decision_taken
                                     {
                                       filename =
                                         "examples/aides_logement/../prestations_familiales/sécurité_sociale_L.catala_fr";
                                       start_line = 58;
                                       start_column = 5;
                                       end_line = 60;
                                       end_column = 60;
                                       law_headings =
                                         [
                                           "Article L512-3";
                                           "Chapitre 2 : Champ d'application";
                                           "Titre 1 : Champ d'application - \
                                            Généralités";
                                           "Livre 5 : Prestations familiales \
                                            et prestations assimilées";
                                           "Partie législative";
                                           "Code de la sécurité sociale";
                                         ];
                                     }
                                     ((match
                                         param_
                                           .EnfantPrestationsFamiliales
                                            .obligation_scolaire
                                       with
                                      | SituationObligationScolaire.Avant _ ->
                                        false
                                      | SituationObligationScolaire.Pendant _ ->
                                        false
                                      | SituationObligationScolaire.Apres _ ->
                                        true)
                                     && param_
                                          .EnfantPrestationsFamiliales
                                           .remuneration_mensuelle
                                        <=$ plafond_l512_3_2_
                                     && param_.EnfantPrestationsFamiliales.age
                                        <! age_l512_3_2_))
                                 (fun (_ : _) -> true));
                           |]
                           (fun (_ : _) ->
                             log_decision_taken
                               {
                                 filename =
                                   "examples/aides_logement/../prestations_familiales/sécurité_sociale_L.catala_fr";
                                 start_line = 47;
                                 start_column = 5;
                                 end_line = 48;
                                 end_column = 78;
                                 law_headings =
                                   [
                                     "Article L512-3";
                                     "Chapitre 2 : Champ d'application";
                                     "Titre 1 : Champ d'application - \
                                      Généralités";
                                     "Livre 5 : Prestations familiales et \
                                      prestations assimilées";
                                     "Partie législative";
                                     "Code de la sécurité sociale";
                                   ];
                               }
                               ((match
                                   param_
                                     .EnfantPrestationsFamiliales
                                      .obligation_scolaire
                                 with
                                | SituationObligationScolaire.Avant _ -> true
                                | SituationObligationScolaire.Pendant _ -> false
                                | SituationObligationScolaire.Apres _ -> false)
                               ||
                               match
                                 param_
                                   .EnfantPrestationsFamiliales
                                    .obligation_scolaire
                               with
                               | SituationObligationScolaire.Avant _ -> false
                               | SituationObligationScolaire.Pendant _ -> true
                               | SituationObligationScolaire.Apres _ -> false))
                           (fun (_ : _) -> true));
                     |]
                     (fun (_ : _) -> false)
                     (fun (_ : _) -> raise EmptyError));
               |]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/../prestations_familiales/prologue.catala_fr";
                     start_line = 41;
                     start_column = 10;
                     end_line = 41;
                     end_column = 22;
                     law_headings = ["Prologue : prestations familiales"];
                   }
                   true)
               (fun (_ : _) -> false)
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename =
                      "examples/aides_logement/../prestations_familiales/prologue.catala_fr";
                    start_line = 41;
                    start_column = 10;
                    end_line = 41;
                    end_column = 22;
                    law_headings = ["Prologue : prestations familiales"];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename =
                  "examples/aides_logement/../prestations_familiales/prologue.catala_fr";
                start_line = 41;
                start_column = 10;
                end_line = 41;
                end_column = 22;
                law_headings = ["Prologue : prestations familiales"];
              }))
  in
  {
    EligibilitePrestationsFamilialesOut.droit_ouvert_out = droit_ouvert_;
    EligibilitePrestationsFamilialesOut.conditions_hors_age_out =
      conditions_hors_age_;
    EligibilitePrestationsFamilialesOut.age_l512_3_2_out = age_l512_3_2_;
    EligibilitePrestationsFamilialesOut.regime_outre_mer_l751_1_out =
      regime_outre_mer_l751_1_;
  }

let calcul_allocation_logement_locatif
    (calcul_allocation_logement_locatif_in :
      CalculAllocationLogementLocatifIn.t) :
    CalculAllocationLogementLocatifOut.t =
  let loyer_principal_ : money =
    calcul_allocation_logement_locatif_in
      .CalculAllocationLogementLocatifIn.loyer_principal_in
  in
  let ressources_menage_arrondies_ : money =
    calcul_allocation_logement_locatif_in
      .CalculAllocationLogementLocatifIn.ressources_menage_arrondies_in
  in
  let beneficiaire_aide_adulte_ou_enfant_handicapes_ : bool =
    calcul_allocation_logement_locatif_in
      .CalculAllocationLogementLocatifIn
       .beneficiaire_aide_adulte_ou_enfant_handicapes_in
  in
  let date_courante_ : date =
    calcul_allocation_logement_locatif_in
      .CalculAllocationLogementLocatifIn.date_courante_in
  in
  let nombre_personnes_a_charge_ : integer =
    calcul_allocation_logement_locatif_in
      .CalculAllocationLogementLocatifIn.nombre_personnes_a_charge_in
  in
  let situation_familiale_calcul_apl_ : SituationFamilialeCalculAPL.t =
    calcul_allocation_logement_locatif_in
      .CalculAllocationLogementLocatifIn.situation_familiale_calcul_apl_in
  in
  let zone_ : ZoneDHabitation.t =
    calcul_allocation_logement_locatif_in
      .CalculAllocationLogementLocatifIn.zone_in
  in
  let logement_est_chambre_ : bool =
    calcul_allocation_logement_locatif_in
      .CalculAllocationLogementLocatifIn.logement_est_chambre_in
  in
  let agees_ou_handicap_adultes_hebergees_onereux_particuliers_ : bool =
    calcul_allocation_logement_locatif_in
      .CalculAllocationLogementLocatifIn
       .agees_ou_handicap_adultes_hebergees_onereux_particuliers_in
  in
  let type_aide_ : TypeAidesPersonnelleLogement.t =
    calcul_allocation_logement_locatif_in
      .CalculAllocationLogementLocatifIn.type_aide_in
  in
  let colocation_ : bool =
    calcul_allocation_logement_locatif_in
      .CalculAllocationLogementLocatifIn.colocation_in
  in
  let reduction_loyer_solidarite_ : money =
    calcul_allocation_logement_locatif_in
      .CalculAllocationLogementLocatifIn.reduction_loyer_solidarite_in
  in
  let logement_meuble_d842_2_ : bool =
    calcul_allocation_logement_locatif_in
      .CalculAllocationLogementLocatifIn.logement_meuble_d842_2_in
  in
  let changement_logement_d842_4_ : ChangementLogementD8424.t =
    calcul_allocation_logement_locatif_in
      .CalculAllocationLogementLocatifIn.changement_logement_d842_4_in
  in
  let calcul_apl_locatif_dot_loyer_principal_ : money =
    try
      log_variable_definition
        [
          "CalculAllocationLogementLocatif"; "calcul_apl_locatif.loyer_principal";
        ]
        embed_money
        (handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 4278;
                       start_column = 5;
                       end_line = 4278;
                       end_column = 27;
                       law_headings =
                         [
                           "Article D842-2";
                           "Section 1 : Secteur locatif ordinaire";
                           "Chapitre 2 : Modalités de liquidation et de \
                            versement des allocations de logement";
                           "Titre IV : Allocations de Logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     logement_meuble_d842_2_)
                 (fun (_ : _) ->
                   loyer_principal_
                   *$ (decimal_of_string "2." /& decimal_of_string "3.")));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 816;
                 start_column = 14;
                 end_line = 816;
                 end_column = 48;
                 law_headings =
                   [
                     "Secteur locatif";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> loyer_principal_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 558;
             start_column = 10;
             end_line = 558;
             end_column = 25;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_locatif_dot_ressources_menage_arrondies_ : money =
    try
      log_variable_definition
        [
          "CalculAllocationLogementLocatif";
          "calcul_apl_locatif.ressources_ménage_arrondies";
        ]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 818;
                 start_column = 14;
                 end_line = 818;
                 end_column = 60;
                 law_headings =
                   [
                     "Secteur locatif";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> ressources_menage_arrondies_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 559;
             start_column = 10;
             end_line = 559;
             end_column = 37;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_locatif_dot_beneficiaire_aide_adulte_ou_enfant_handicapes_ :
      bool =
    try
      log_variable_definition
        [
          "CalculAllocationLogementLocatif";
          "calcul_apl_locatif.bénéficiaire_aide_adulte_ou_enfant_handicapés";
        ]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 820;
                 start_column = 14;
                 end_line = 820;
                 end_column = 78;
                 law_headings =
                   [
                     "Secteur locatif";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> beneficiaire_aide_adulte_ou_enfant_handicapes_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 560;
             start_column = 10;
             end_line = 560;
             end_column = 55;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_locatif_dot_date_courante_ : date =
    try
      log_variable_definition
        ["CalculAllocationLogementLocatif"; "calcul_apl_locatif.date_courante"]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 823;
                 start_column = 14;
                 end_line = 823;
                 end_column = 46;
                 law_headings =
                   [
                     "Secteur locatif";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 562;
             start_column = 10;
             end_line = 562;
             end_column = 23;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_locatif_dot_nombre_personnes_a_charge_ : integer =
    try
      log_variable_definition
        [
          "CalculAllocationLogementLocatif";
          "calcul_apl_locatif.nombre_personnes_à_charge";
        ]
        embed_integer
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 825;
                 start_column = 14;
                 end_line = 825;
                 end_column = 58;
                 law_headings =
                   [
                     "Secteur locatif";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> nombre_personnes_a_charge_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 563;
             start_column = 10;
             end_line = 563;
             end_column = 35;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_locatif_dot_situation_familiale_calcul_apl_ :
      SituationFamilialeCalculAPL.t =
    try
      log_variable_definition
        [
          "CalculAllocationLogementLocatif";
          "calcul_apl_locatif.situation_familiale_calcul_apl";
        ]
        embed_situation_familiale_calcul_a_p_l
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 827;
                 start_column = 14;
                 end_line = 827;
                 end_column = 63;
                 law_headings =
                   [
                     "Secteur locatif";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> situation_familiale_calcul_apl_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 564;
             start_column = 10;
             end_line = 564;
             end_column = 40;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_locatif_dot_zone_ : ZoneDHabitation.t =
    try
      log_variable_definition
        ["CalculAllocationLogementLocatif"; "calcul_apl_locatif.zone"]
        embed_zone_d_habitation
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 829;
                 start_column = 14;
                 end_line = 829;
                 end_column = 37;
                 law_headings =
                   [
                     "Secteur locatif";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> zone_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 565;
             start_column = 10;
             end_line = 565;
             end_column = 14;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_locatif_dot_logement_est_chambre_ : bool =
    try
      log_variable_definition
        [
          "CalculAllocationLogementLocatif";
          "calcul_apl_locatif.logement_est_chambre";
        ]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 831;
                 start_column = 14;
                 end_line = 831;
                 end_column = 53;
                 law_headings =
                   [
                     "Secteur locatif";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> logement_est_chambre_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 566;
             start_column = 10;
             end_line = 566;
             end_column = 30;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_locatif_dot_agees_ou_handicap_adultes_hebergees_onereux_particuliers_
      : bool =
    try
      log_variable_definition
        [
          "CalculAllocationLogementLocatif";
          "calcul_apl_locatif.âgées_ou_handicap_adultes_hébergées_onéreux_particuliers";
        ]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 834;
                 start_column = 5;
                 end_line = 835;
                 end_column = 63;
                 law_headings =
                   [
                     "Secteur locatif";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) ->
             agees_ou_handicap_adultes_hebergees_onereux_particuliers_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 567;
             start_column = 10;
             end_line = 567;
             end_column = 66;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_locatif_dot_type_aide_ : TypeAidesPersonnelleLogement.t =
    try
      log_variable_definition
        ["CalculAllocationLogementLocatif"; "calcul_apl_locatif.type_aide"]
        embed_type_aides_personnelle_logement
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 838;
                 start_column = 14;
                 end_line = 838;
                 end_column = 42;
                 law_headings =
                   [
                     "Secteur locatif";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> type_aide_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 569;
             start_column = 10;
             end_line = 569;
             end_column = 19;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_locatif_dot_colocation_ : bool =
    try
      log_variable_definition
        ["CalculAllocationLogementLocatif"; "calcul_apl_locatif.colocation"]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 840;
                 start_column = 14;
                 end_line = 840;
                 end_column = 43;
                 law_headings =
                   [
                     "Secteur locatif";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> colocation_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 570;
             start_column = 10;
             end_line = 570;
             end_column = 20;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_locatif_dot_reduction_loyer_solidarite_ : money =
    try
      log_variable_definition
        [
          "CalculAllocationLogementLocatif";
          "calcul_apl_locatif.réduction_loyer_solidarité";
        ]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 842;
                 start_column = 14;
                 end_line = 842;
                 end_column = 59;
                 law_headings =
                   [
                     "Secteur locatif";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> reduction_loyer_solidarite_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 571;
             start_column = 10;
             end_line = 571;
             end_column = 36;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : CalculAidePersonnaliseeLogementLocatifOut.t =
    log_end_call
      [
        "CalculAllocationLogementLocatif";
        "calcul_apl_locatif";
        "CalculAidePersonnaliséeLogementLocatif";
      ]
      ((log_begin_call
          [
            "CalculAllocationLogementLocatif";
            "calcul_apl_locatif";
            "CalculAidePersonnaliséeLogementLocatif";
          ]
          calcul_aide_personnalisee_logement_locatif)
         {
           CalculAidePersonnaliseeLogementLocatifIn.loyer_principal_in =
             calcul_apl_locatif_dot_loyer_principal_;
           CalculAidePersonnaliseeLogementLocatifIn
           .ressources_menage_arrondies_in =
             calcul_apl_locatif_dot_ressources_menage_arrondies_;
           CalculAidePersonnaliseeLogementLocatifIn
           .beneficiaire_aide_adulte_ou_enfant_handicapes_in =
             calcul_apl_locatif_dot_beneficiaire_aide_adulte_ou_enfant_handicapes_;
           CalculAidePersonnaliseeLogementLocatifIn.date_courante_in =
             calcul_apl_locatif_dot_date_courante_;
           CalculAidePersonnaliseeLogementLocatifIn.nombre_personnes_a_charge_in =
             calcul_apl_locatif_dot_nombre_personnes_a_charge_;
           CalculAidePersonnaliseeLogementLocatifIn
           .situation_familiale_calcul_apl_in =
             calcul_apl_locatif_dot_situation_familiale_calcul_apl_;
           CalculAidePersonnaliseeLogementLocatifIn.zone_in =
             calcul_apl_locatif_dot_zone_;
           CalculAidePersonnaliseeLogementLocatifIn.logement_est_chambre_in =
             calcul_apl_locatif_dot_logement_est_chambre_;
           CalculAidePersonnaliseeLogementLocatifIn
           .agees_ou_handicap_adultes_hebergees_onereux_particuliers_in =
             calcul_apl_locatif_dot_agees_ou_handicap_adultes_hebergees_onereux_particuliers_;
           CalculAidePersonnaliseeLogementLocatifIn.type_aide_in =
             calcul_apl_locatif_dot_type_aide_;
           CalculAidePersonnaliseeLogementLocatifIn.colocation_in =
             calcul_apl_locatif_dot_colocation_;
           CalculAidePersonnaliseeLogementLocatifIn
           .reduction_loyer_solidarite_in =
             calcul_apl_locatif_dot_reduction_loyer_solidarite_;
         })
  in
  let calcul_apl_locatif_dot_montant_forfaitaire_charges_d823_16_ : money =
    result_
      .CalculAidePersonnaliseeLogementLocatifOut
       .montant_forfaitaire_charges_d823_16_out
  in
  let calcul_apl_locatif_dot_plafond_loyer_d823_16_2_ : money =
    result_
      .CalculAidePersonnaliseeLogementLocatifOut.plafond_loyer_d823_16_2_out
  in
  let calcul_apl_locatif_dot_participation_minimale_ : money =
    result_.CalculAidePersonnaliseeLogementLocatifOut.participation_minimale_out
  in
  let calcul_apl_locatif_dot_taux_composition_familiale_ : decimal =
    result_
      .CalculAidePersonnaliseeLogementLocatifOut.taux_composition_familiale_out
  in
  let calcul_apl_locatif_dot_participation_personnelle_ : money =
    result_
      .CalculAidePersonnaliseeLogementLocatifOut.participation_personnelle_out
  in
  let calcul_apl_locatif_dot_aide_finale_formule_ : money =
    result_.CalculAidePersonnaliseeLogementLocatifOut.aide_finale_formule_out
  in
  let calcul_apl_locatif_dot_traitement_aide_finale_montant_minimal_ :
      money -> money =
    result_
      .CalculAidePersonnaliseeLogementLocatifOut
       .traitement_aide_finale_montant_minimal_out
  in
  let traitement_aide_finale_ : money -> money =
    log_variable_definition
      ["CalculAllocationLogementLocatif"; "traitement_aide_finale"]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default
               [|
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/code_construction_reglementaire.catala_fr";
                           start_line = 4346;
                           start_column = 24;
                           end_line = 4346;
                           end_column = 46;
                           law_headings =
                             [
                               "Article D842-4";
                               "Section 1 : Secteur locatif ordinaire";
                               "Chapitre 2 : Modalités de liquidation et de \
                                versement des allocations de logement";
                               "Titre IV : Allocations de Logement";
                               "Livre VIII : Aides personnelles au logement";
                               "Partie réglementaire";
                               "Code de la construction et de l'habitation";
                             ];
                         }
                         (match changement_logement_d842_4_ with
                         | ChangementLogementD8424.Changement infos_ ->
                           loyer_principal_
                           >=$ infos_
                                 .InfosChangementLogementD8424
                                  .ancien_loyer_principal
                         | ChangementLogementD8424.PasDeChangement _ -> false))
                     (fun (_ : _) -> param_));
               |]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename = "examples/aides_logement/prologue.catala_fr";
                     start_line = 847;
                     start_column = 14;
                     end_line = 847;
                     end_column = 36;
                     law_headings =
                       [
                         "Secteur locatif";
                         "Calcul du montant de l'allocation logement";
                         "Prologue : aides au logement";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 log_end_call
                   [
                     "CalculAidePersonnaliséeLogementLocatif";
                     "traitement_aide_finale_montant_minimal";
                   ]
                   (log_variable_definition
                      [
                        "CalculAidePersonnaliséeLogementLocatif";
                        "traitement_aide_finale_montant_minimal";
                        "output";
                      ]
                      embed_money
                      ((log_begin_call
                          [
                            "CalculAidePersonnaliséeLogementLocatif";
                            "traitement_aide_finale_montant_minimal";
                          ]
                          calcul_apl_locatif_dot_traitement_aide_finale_montant_minimal_)
                         (log_variable_definition
                            [
                              "CalculAidePersonnaliséeLogementLocatif";
                              "traitement_aide_finale_montant_minimal";
                              "input";
                            ]
                            embed_money param_))))
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 813;
                    start_column = 10;
                    end_line = 813;
                    end_column = 32;
                    law_headings =
                      [
                        "Secteur locatif";
                        "Calcul du montant de l'allocation logement";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 813;
                start_column = 10;
                end_line = 813;
                end_column = 32;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let aide_finale_formule_ : money =
    log_variable_definition
      ["CalculAllocationLogementLocatif"; "aide_finale_formule"]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 4338;
                       start_column = 24;
                       end_line = 4338;
                       end_column = 43;
                       law_headings =
                         [
                           "Article D842-4";
                           "Section 1 : Secteur locatif ordinaire";
                           "Chapitre 2 : Modalités de liquidation et de \
                            versement des allocations de logement";
                           "Titre IV : Allocations de Logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     (match changement_logement_d842_4_ with
                     | ChangementLogementD8424.Changement infos_ ->
                       loyer_principal_
                       >=$ infos_
                             .InfosChangementLogementD8424
                              .ancien_loyer_principal
                     | ChangementLogementD8424.PasDeChangement _ -> false))
                 (fun (_ : _) ->
                   match changement_logement_d842_4_ with
                   | ChangementLogementD8424.Changement infos_ ->
                     loyer_principal_
                     -$ (infos_
                           .InfosChangementLogementD8424.ancien_loyer_principal
                       -$ infos_
                            .InfosChangementLogementD8424
                             .ancienne_allocation_logement)
                   | ChangementLogementD8424.PasDeChangement _ ->
                     money_of_cents_string "0"));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 846;
                 start_column = 14;
                 end_line = 846;
                 end_column = 33;
                 law_headings =
                   [
                     "Secteur locatif";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> calcul_apl_locatif_dot_aide_finale_formule_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 811;
                start_column = 10;
                end_line = 811;
                end_column = 29;
                law_headings =
                  [
                    "Secteur locatif";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  {
    CalculAllocationLogementLocatifOut.aide_finale_formule_out =
      aide_finale_formule_;
    CalculAllocationLogementLocatifOut.traitement_aide_finale_out =
      traitement_aide_finale_;
  }

let calcul_allocation_logement_foyer
    (calcul_allocation_logement_foyer_in : CalculAllocationLogementFoyerIn.t) :
    CalculAllocationLogementFoyerOut.t =
  let redevance_ : money =
    calcul_allocation_logement_foyer_in
      .CalculAllocationLogementFoyerIn.redevance_in
  in
  let mode_occupation_ : ModeOccupation.t =
    calcul_allocation_logement_foyer_in
      .CalculAllocationLogementFoyerIn.mode_occupation_in
  in
  let ressources_menage_arrondies_ : money =
    calcul_allocation_logement_foyer_in
      .CalculAllocationLogementFoyerIn.ressources_menage_arrondies_in
  in
  let nombre_personnes_a_charge_ : integer =
    calcul_allocation_logement_foyer_in
      .CalculAllocationLogementFoyerIn.nombre_personnes_a_charge_in
  in
  let situation_familiale_calcul_apl_ : SituationFamilialeCalculAPL.t =
    calcul_allocation_logement_foyer_in
      .CalculAllocationLogementFoyerIn.situation_familiale_calcul_apl_in
  in
  let zone_ : ZoneDHabitation.t =
    calcul_allocation_logement_foyer_in.CalculAllocationLogementFoyerIn.zone_in
  in
  let date_courante_ : date =
    calcul_allocation_logement_foyer_in
      .CalculAllocationLogementFoyerIn.date_courante_in
  in
  let categorie_equivalence_loyer_d842_16_ :
      CategorieEquivalenceLoyerAllocationLogementFoyer.t =
    calcul_allocation_logement_foyer_in
      .CalculAllocationLogementFoyerIn.categorie_equivalence_loyer_d842_16_in
  in
  let montant_minimal_aide_d842_15_ : money =
    log_variable_definition
      ["CalculAllocationLogementFoyer"; "montant_minimal_aide_d842_15"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 4289;
                 start_column = 14;
                 end_line = 4289;
                 end_column = 42;
                 law_headings =
                   [
                     "Article 42";
                     "Chapitre VII : Calcul des allocations de logement en \
                      secteur logement-foyer";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) -> money_of_cents_string "1000")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 960;
                start_column = 11;
                end_line = 960;
                end_column = 39;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let montant_forfaitaire_d842_15_ : money =
    log_variable_definition
      ["CalculAllocationLogementFoyer"; "montant_forfaitaire_d842_15"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 4278;
                 start_column = 14;
                 end_line = 4278;
                 end_column = 41;
                 law_headings =
                   [
                     "Article 41";
                     "Chapitre VII : Calcul des allocations de logement en \
                      secteur logement-foyer";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) -> money_of_cents_string "500")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 961;
                start_column = 11;
                end_line = 961;
                end_column = 38;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let montant_minimal_depense_nette_d842_17_ : money =
    log_variable_definition
      ["CalculAllocationLogementFoyer"; "montant_minimal_dépense_nette_d842_17"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 4379;
                 start_column = 14;
                 end_line = 4379;
                 end_column = 51;
                 law_headings =
                   [
                     "Article 44";
                     "Chapitre VII : Calcul des allocations de logement en \
                      secteur logement-foyer";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) -> money_of_cents_string "1500")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 962;
                start_column = 11;
                end_line = 962;
                end_column = 48;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let calcul_nombre_parts_dot_condition_2_du_832_25_ : bool =
    try
      log_variable_definition
        [
          "CalculAllocationLogementFoyer";
          "calcul_nombre_parts.condition_2_du_832_25";
        ]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4899;
                 start_column = 14;
                 end_line = 4899;
                 end_column = 55;
                 law_headings =
                   [
                     "Article D842-15";
                     "Section 3 : Logements-foyers";
                     "Chapitre 2 : Modalités de liquidation et de versement \
                      des allocations de logement";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> true))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 625;
             start_column = 10;
             end_line = 625;
             end_column = 31;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_nombre_parts_dot_nombre_personnes_a_charge_ : integer =
    try
      log_variable_definition
        [
          "CalculAllocationLogementFoyer";
          "calcul_nombre_parts.nombre_personnes_à_charge";
        ]
        embed_integer
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4895;
                 start_column = 14;
                 end_line = 4895;
                 end_column = 59;
                 law_headings =
                   [
                     "Article D842-15";
                     "Section 3 : Logements-foyers";
                     "Chapitre 2 : Modalités de liquidation et de versement \
                      des allocations de logement";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> nombre_personnes_a_charge_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 626;
             start_column = 10;
             end_line = 626;
             end_column = 35;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_nombre_parts_dot_situation_familiale_calcul_apl_ :
      SituationFamilialeCalculAPL.t =
    try
      log_variable_definition
        [
          "CalculAllocationLogementFoyer";
          "calcul_nombre_parts.situation_familiale_calcul_apl";
        ]
        embed_situation_familiale_calcul_a_p_l
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4897;
                 start_column = 14;
                 end_line = 4897;
                 end_column = 64;
                 law_headings =
                   [
                     "Article D842-15";
                     "Section 3 : Logements-foyers";
                     "Chapitre 2 : Modalités de liquidation et de versement \
                      des allocations de logement";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> situation_familiale_calcul_apl_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 627;
             start_column = 10;
             end_line = 627;
             end_column = 40;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : CalculNombrePartLogementFoyerOut.t =
    log_end_call
      [
        "CalculAllocationLogementFoyer";
        "calcul_nombre_parts";
        "CalculNombrePartLogementFoyer";
      ]
      ((log_begin_call
          [
            "CalculAllocationLogementFoyer";
            "calcul_nombre_parts";
            "CalculNombrePartLogementFoyer";
          ]
          calcul_nombre_part_logement_foyer)
         {
           CalculNombrePartLogementFoyerIn.condition_2_du_832_25_in =
             calcul_nombre_parts_dot_condition_2_du_832_25_;
           CalculNombrePartLogementFoyerIn.nombre_personnes_a_charge_in =
             calcul_nombre_parts_dot_nombre_personnes_a_charge_;
           CalculNombrePartLogementFoyerIn.situation_familiale_calcul_apl_in =
             calcul_nombre_parts_dot_situation_familiale_calcul_apl_;
         })
  in
  let calcul_nombre_parts_dot_n_nombre_parts_d832_25_ : decimal =
    result_.CalculNombrePartLogementFoyerOut.n_nombre_parts_d832_25_out
  in
  let contributions_sociales_dot_date_courante_ : date =
    try
      log_variable_definition
        [
          "CalculAllocationLogementFoyer"; "contributions_sociales.date_courante";
        ]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 999;
                 start_column = 14;
                 end_line = 999;
                 end_column = 50;
                 law_headings =
                   [
                     "Secteur logement-foyer";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 544;
             start_column = 10;
             end_line = 544;
             end_column = 23;
             law_headings =
               [
                 "Calcul des contributions sociales s'appliquant aux aides \
                  personnelles au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : ContributionsSocialesAidesPersonnelleLogementOut.t =
    log_end_call
      [
        "CalculAllocationLogementFoyer";
        "contributions_sociales";
        "ContributionsSocialesAidesPersonnelleLogement";
      ]
      ((log_begin_call
          [
            "CalculAllocationLogementFoyer";
            "contributions_sociales";
            "ContributionsSocialesAidesPersonnelleLogement";
          ]
          contributions_sociales_aides_personnelle_logement)
         {
           ContributionsSocialesAidesPersonnelleLogementIn.date_courante_in =
             contributions_sociales_dot_date_courante_;
         })
  in
  let contributions_sociales_dot_montant_ : money -> money =
    result_.ContributionsSocialesAidesPersonnelleLogementOut.montant_out
  in
  let calcul_apl_logement_foyer_dot_mode_occupation_ : ModeOccupation.t =
    try
      log_variable_definition
        [
          "CalculAllocationLogementFoyer";
          "calcul_apl_logement_foyer.mode_occupation";
        ]
        embed_mode_occupation
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 985;
                 start_column = 14;
                 end_line = 985;
                 end_column = 55;
                 law_headings =
                   [
                     "Secteur logement-foyer";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> mode_occupation_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 632;
             start_column = 10;
             end_line = 632;
             end_column = 25;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_logement_foyer_dot_ressources_menage_arrondies_ : money =
    try
      log_variable_definition
        [
          "CalculAllocationLogementFoyer";
          "calcul_apl_logement_foyer.ressources_ménage_arrondies";
        ]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 989;
                 start_column = 14;
                 end_line = 989;
                 end_column = 67;
                 law_headings =
                   [
                     "Secteur logement-foyer";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> ressources_menage_arrondies_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 633;
             start_column = 10;
             end_line = 633;
             end_column = 37;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_logement_foyer_dot_nombre_personnes_a_charge_ : integer =
    try
      log_variable_definition
        [
          "CalculAllocationLogementFoyer";
          "calcul_apl_logement_foyer.nombre_personnes_à_charge";
        ]
        embed_integer
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 991;
                 start_column = 14;
                 end_line = 991;
                 end_column = 65;
                 law_headings =
                   [
                     "Secteur logement-foyer";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> nombre_personnes_a_charge_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 634;
             start_column = 10;
             end_line = 634;
             end_column = 35;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_logement_foyer_dot_situation_familiale_calcul_apl_ :
      SituationFamilialeCalculAPL.t =
    try
      log_variable_definition
        [
          "CalculAllocationLogementFoyer";
          "calcul_apl_logement_foyer.situation_familiale_calcul_apl";
        ]
        embed_situation_familiale_calcul_a_p_l
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 993;
                 start_column = 14;
                 end_line = 993;
                 end_column = 70;
                 law_headings =
                   [
                     "Secteur logement-foyer";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> situation_familiale_calcul_apl_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 635;
             start_column = 10;
             end_line = 635;
             end_column = 40;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_logement_foyer_dot_zone_ : ZoneDHabitation.t =
    try
      log_variable_definition
        ["CalculAllocationLogementFoyer"; "calcul_apl_logement_foyer.zone"]
        embed_zone_d_habitation
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 995;
                 start_column = 14;
                 end_line = 995;
                 end_column = 44;
                 law_headings =
                   [
                     "Secteur logement-foyer";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> zone_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 636;
             start_column = 10;
             end_line = 636;
             end_column = 14;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_logement_foyer_dot_date_courante_ : date =
    try
      log_variable_definition
        [
          "CalculAllocationLogementFoyer";
          "calcul_apl_logement_foyer.date_courante";
        ]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 997;
                 start_column = 14;
                 end_line = 997;
                 end_column = 53;
                 law_headings =
                   [
                     "Secteur logement-foyer";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 637;
             start_column = 10;
             end_line = 637;
             end_column = 23;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_logement_foyer_dot_redevance_ : money =
    try
      log_variable_definition
        ["CalculAllocationLogementFoyer"; "calcul_apl_logement_foyer.redevance"]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 987;
                 start_column = 14;
                 end_line = 987;
                 end_column = 49;
                 law_headings =
                   [
                     "Secteur logement-foyer";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> redevance_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 638;
             start_column = 10;
             end_line = 638;
             end_column = 19;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_logement_foyer_dot_condition_2_du_832_25_ : unit -> bool =
   fun (_ : unit) ->
    log_variable_definition
      [
        "CalculAllocationLogementFoyer";
        "calcul_apl_logement_foyer.condition_2_du_832_25";
      ]
      embed_bool
      (handle_default [||]
         (fun (_ : _) ->
           log_decision_taken
             {
               filename =
                 "examples/aides_logement/code_construction_reglementaire.catala_fr";
               start_line = 4862;
               start_column = 14;
               end_line = 4862;
               end_column = 61;
               law_headings =
                 [
                   "Article D842-15";
                   "Section 3 : Logements-foyers";
                   "Chapitre 2 : Modalités de liquidation et de versement des \
                    allocations de logement";
                   "Titre IV : Allocations de Logement";
                   "Livre VIII : Aides personnelles au logement";
                   "Partie réglementaire";
                   "Code de la construction et de l'habitation";
                 ];
             }
             true)
         (fun (_ : _) -> true))
  in
  let calcul_apl_logement_foyer_dot_n_nombre_parts_d832_25_ : unit -> decimal =
   fun (_ : unit) ->
    log_variable_definition
      [
        "CalculAllocationLogementFoyer";
        "calcul_apl_logement_foyer.n_nombre_parts_d832_25";
      ]
      embed_decimal (raise EmptyError)
  in
  let result_ : CalculAidePersonnaliseeLogementFoyerOut.t =
    log_end_call
      [
        "CalculAllocationLogementFoyer";
        "calcul_apl_logement_foyer";
        "CalculAidePersonnaliséeLogementFoyer";
      ]
      ((log_begin_call
          [
            "CalculAllocationLogementFoyer";
            "calcul_apl_logement_foyer";
            "CalculAidePersonnaliséeLogementFoyer";
          ]
          calcul_aide_personnalisee_logement_foyer)
         {
           CalculAidePersonnaliseeLogementFoyerIn.mode_occupation_in =
             calcul_apl_logement_foyer_dot_mode_occupation_;
           CalculAidePersonnaliseeLogementFoyerIn.ressources_menage_arrondies_in =
             calcul_apl_logement_foyer_dot_ressources_menage_arrondies_;
           CalculAidePersonnaliseeLogementFoyerIn.nombre_personnes_a_charge_in =
             calcul_apl_logement_foyer_dot_nombre_personnes_a_charge_;
           CalculAidePersonnaliseeLogementFoyerIn
           .situation_familiale_calcul_apl_in =
             calcul_apl_logement_foyer_dot_situation_familiale_calcul_apl_;
           CalculAidePersonnaliseeLogementFoyerIn.zone_in =
             calcul_apl_logement_foyer_dot_zone_;
           CalculAidePersonnaliseeLogementFoyerIn.date_courante_in =
             calcul_apl_logement_foyer_dot_date_courante_;
           CalculAidePersonnaliseeLogementFoyerIn.redevance_in =
             calcul_apl_logement_foyer_dot_redevance_;
           CalculAidePersonnaliseeLogementFoyerIn.condition_2_du_832_25_in =
             calcul_apl_logement_foyer_dot_condition_2_du_832_25_;
           CalculAidePersonnaliseeLogementFoyerIn.n_nombre_parts_d832_25_in =
             calcul_apl_logement_foyer_dot_n_nombre_parts_d832_25_;
         })
  in
  let calcul_apl_logement_foyer_dot_coefficient_multiplicateur_d832_25_ : money
      =
    result_
      .CalculAidePersonnaliseeLogementFoyerOut
       .coefficient_multiplicateur_d832_25_out
  in
  let calcul_apl_logement_foyer_dot_coefficient_r_d832_25_ : money =
    result_.CalculAidePersonnaliseeLogementFoyerOut.coefficient_r_d832_25_out
  in
  let calcul_apl_logement_foyer_dot_n_nombre_parts_d832_25_ : decimal =
    result_.CalculAidePersonnaliseeLogementFoyerOut.n_nombre_parts_d832_25_out
  in
  let calcul_apl_logement_foyer_dot_equivalence_loyer_eligible_ : money =
    result_
      .CalculAidePersonnaliseeLogementFoyerOut.equivalence_loyer_eligible_out
  in
  let calcul_apl_logement_foyer_dot_plafond_equivalence_loyer_eligible_ : money
      =
    result_
      .CalculAidePersonnaliseeLogementFoyerOut
       .plafond_equivalence_loyer_eligible_out
  in
  let calcul_apl_logement_foyer_dot_equivalence_loyer_minimale_ : money =
    result_
      .CalculAidePersonnaliseeLogementFoyerOut.equivalence_loyer_minimale_out
  in
  let calcul_apl_logement_foyer_dot_coefficient_prise_en_charge_d832_25_seuil_ :
      decimal =
    result_
      .CalculAidePersonnaliseeLogementFoyerOut
       .coefficient_prise_en_charge_d832_25_seuil_out
  in
  let calcul_apl_logement_foyer_dot_aide_finale_formule_ : money =
    result_.CalculAidePersonnaliseeLogementFoyerOut.aide_finale_formule_out
  in
  let calcul_apl_logement_foyer_dot_traitement_aide_finale_montant_minimal_ :
      money -> money =
    result_
      .CalculAidePersonnaliseeLogementFoyerOut
       .traitement_aide_finale_montant_minimal_out
  in
  let montant_forfaitaire_charges_ : money =
    log_variable_definition
      ["CalculAllocationLogementFoyer"; "montant_forfaitaire_charges"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 4265;
                 start_column = 14;
                 end_line = 4265;
                 end_column = 41;
                 law_headings =
                   [
                     "Article 40";
                     "Chapitre VII : Calcul des allocations de logement en \
                      secteur logement-foyer";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               (date_courante_ >=@ date_of_numbers 2021 10 1))
           (fun (_ : _) ->
             if nombre_personnes_a_charge_ = integer_of_string "0" then
               money_of_cents_string "5422"
             else
               money_of_cents_string "5422"
               +$ money_of_cents_string "1229"
                  *$ decimal_of_integer nombre_personnes_a_charge_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 965;
                start_column = 10;
                end_line = 965;
                end_column = 37;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let equivalence_loyer_ : money =
    log_variable_definition
      ["CalculAllocationLogementFoyer"; "équivalence_loyer"]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/arrete_2019-09-27.catala_fr";
                       start_line = 4307;
                       start_column = 6;
                       end_line = 4307;
                       end_column = 74;
                       law_headings =
                         [
                           "Article 43";
                           "Chapitre VII : Calcul des allocations de logement \
                            en secteur logement-foyer";
                           "Arrêté du 27 septembre 2019 relatif au calcul des \
                            aides personnelles au logement et de la prime de \
                            déménagement";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2021 10 1
                     &&
                     match categorie_equivalence_loyer_d842_16_ with
                     | CategorieEquivalenceLoyerAllocationLogementFoyer
                       .EtudiantLogeEnChambre _ ->
                       true
                     | CategorieEquivalenceLoyerAllocationLogementFoyer
                       .EtudiantLogeEnChambreRehabilitee _ ->
                       false
                     | CategorieEquivalenceLoyerAllocationLogementFoyer
                       .PersonnesAgeesSelon3DeD842_16 _ ->
                       false
                     | CategorieEquivalenceLoyerAllocationLogementFoyer
                       .AutresPersonnes _ ->
                       false))
                 (fun (_ : _) ->
                   match situation_familiale_calcul_apl_ with
                   | SituationFamilialeCalculAPL.PersonneSeule _ ->
                     money_of_cents_string "8414"
                   | SituationFamilialeCalculAPL.Couple _ ->
                     money_of_cents_string "13100"));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/arrete_2019-09-27.catala_fr";
                       start_line = 4342;
                       start_column = 6;
                       end_line = 4343;
                       end_column = 38;
                       law_headings =
                         [
                           "Article 43";
                           "Chapitre VII : Calcul des allocations de logement \
                            en secteur logement-foyer";
                           "Arrêté du 27 septembre 2019 relatif au calcul des \
                            aides personnelles au logement et de la prime de \
                            déménagement";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2021 10 1
                     &&
                     match categorie_equivalence_loyer_d842_16_ with
                     | CategorieEquivalenceLoyerAllocationLogementFoyer
                       .EtudiantLogeEnChambre _ ->
                       false
                     | CategorieEquivalenceLoyerAllocationLogementFoyer
                       .EtudiantLogeEnChambreRehabilitee _ ->
                       false
                     | CategorieEquivalenceLoyerAllocationLogementFoyer
                       .PersonnesAgeesSelon3DeD842_16 _ ->
                       true
                     | CategorieEquivalenceLoyerAllocationLogementFoyer
                       .AutresPersonnes _ ->
                       false))
                 (fun (_ : _) ->
                   match situation_familiale_calcul_apl_ with
                   | SituationFamilialeCalculAPL.PersonneSeule _ ->
                     money_of_cents_string "20640"
                   | SituationFamilialeCalculAPL.Couple _ ->
                     money_of_cents_string "32073"));
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default [||]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/arrete_2019-09-27.catala_fr";
                             start_line = 4360;
                             start_column = 6;
                             end_line = 4361;
                             end_column = 24;
                             law_headings =
                               [
                                 "Article 43";
                                 "Chapitre VII : Calcul des allocations de \
                                  logement en secteur logement-foyer";
                                 "Arrêté du 27 septembre 2019 relatif au \
                                  calcul des aides personnelles au logement et \
                                  de la prime de déménagement";
                               ];
                           }
                           (date_courante_ >=@ date_of_numbers 2021 10 1
                           &&
                           match categorie_equivalence_loyer_d842_16_ with
                           | CategorieEquivalenceLoyerAllocationLogementFoyer
                             .EtudiantLogeEnChambre _ ->
                             false
                           | CategorieEquivalenceLoyerAllocationLogementFoyer
                             .EtudiantLogeEnChambreRehabilitee _ ->
                             false
                           | CategorieEquivalenceLoyerAllocationLogementFoyer
                             .PersonnesAgeesSelon3DeD842_16 _ ->
                             false
                           | CategorieEquivalenceLoyerAllocationLogementFoyer
                             .AutresPersonnes _ ->
                             true))
                       (fun (_ : _) ->
                         match situation_familiale_calcul_apl_ with
                         | SituationFamilialeCalculAPL.PersonneSeule _ ->
                           money_of_cents_string "17012"
                         | SituationFamilialeCalculAPL.Couple _ ->
                           money_of_cents_string "26440"));
                 |]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/arrete_2019-09-27.catala_fr";
                       start_line = 4324;
                       start_column = 6;
                       end_line = 4325;
                       end_column = 41;
                       law_headings =
                         [
                           "Article 43";
                           "Chapitre VII : Calcul des allocations de logement \
                            en secteur logement-foyer";
                           "Arrêté du 27 septembre 2019 relatif au calcul des \
                            aides personnelles au logement et de la prime de \
                            déménagement";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2021 10 1
                     &&
                     match categorie_equivalence_loyer_d842_16_ with
                     | CategorieEquivalenceLoyerAllocationLogementFoyer
                       .EtudiantLogeEnChambre _ ->
                       false
                     | CategorieEquivalenceLoyerAllocationLogementFoyer
                       .EtudiantLogeEnChambreRehabilitee _ ->
                       true
                     | CategorieEquivalenceLoyerAllocationLogementFoyer
                       .PersonnesAgeesSelon3DeD842_16 _ ->
                       false
                     | CategorieEquivalenceLoyerAllocationLogementFoyer
                       .AutresPersonnes _ ->
                       false))
                 (fun (_ : _) ->
                   match situation_familiale_calcul_apl_ with
                   | SituationFamilialeCalculAPL.PersonneSeule _ ->
                     money_of_cents_string "17012"
                   | SituationFamilialeCalculAPL.Couple _ ->
                     money_of_cents_string "26440"));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 964;
                start_column = 10;
                end_line = 964;
                end_column = 27;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let traitement_aide_finale_minoration_forfaitaire_ : money -> money =
    log_variable_definition
      [
        "CalculAllocationLogementFoyer";
        "traitement_aide_finale_minoration_forfaitaire";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 4911;
                     start_column = 14;
                     end_line = 4911;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D842-15";
                         "Section 3 : Logements-foyers";
                         "Chapitre 2 : Modalités de liquidation et de \
                          versement des allocations de logement";
                         "Titre IV : Allocations de Logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   param_ -$ montant_forfaitaire_d842_15_
                   <$ money_of_cents_string "0"
                 then money_of_cents_string "0"
                 else param_ -$ montant_forfaitaire_d842_15_)
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 978;
                    start_column = 10;
                    end_line = 978;
                    end_column = 32;
                    law_headings =
                      [
                        "Secteur logement-foyer";
                        "Calcul du montant de l'allocation logement";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 978;
                start_column = 10;
                end_line = 978;
                end_column = 32;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_ : money
      =
    try
      log_variable_definition
        [
          "CalculAllocationLogementFoyer";
          "calcul_équivalence_loyer_minimale.ressources_ménage_arrondies";
        ]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4892;
                 start_column = 14;
                 end_line = 4892;
                 end_column = 75;
                 law_headings =
                   [
                     "Article D842-15";
                     "Section 3 : Logements-foyers";
                     "Chapitre 2 : Modalités de liquidation et de versement \
                      des allocations de logement";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> ressources_menage_arrondies_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 613;
             start_column = 10;
             end_line = 613;
             end_column = 37;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_ : bool =
    try
      log_variable_definition
        [
          "CalculAllocationLogementFoyer";
          "calcul_équivalence_loyer_minimale.condition_2_du_832_25";
        ]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4891;
                 start_column = 14;
                 end_line = 4891;
                 end_column = 69;
                 law_headings =
                   [
                     "Article D842-15";
                     "Section 3 : Logements-foyers";
                     "Chapitre 2 : Modalités de liquidation et de versement \
                      des allocations de logement";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> true))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 614;
             start_column = 10;
             end_line = 614;
             end_column = 31;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_ : decimal =
    try
      log_variable_definition
        [
          "CalculAllocationLogementFoyer";
          "calcul_équivalence_loyer_minimale.n_nombre_parts_d832_25";
        ]
        embed_decimal
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4901;
                 start_column = 14;
                 end_line = 4901;
                 end_column = 70;
                 law_headings =
                   [
                     "Article D842-15";
                     "Section 3 : Logements-foyers";
                     "Chapitre 2 : Modalités de liquidation et de versement \
                      des allocations de logement";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> calcul_nombre_parts_dot_n_nombre_parts_d832_25_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 615;
             start_column = 10;
             end_line = 615;
             end_column = 32;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : CalculEquivalenceLoyerMinimaleOut.t =
    log_end_call
      [
        "CalculAllocationLogementFoyer";
        "calcul_équivalence_loyer_minimale";
        "CalculÉquivalenceLoyerMinimale";
      ]
      ((log_begin_call
          [
            "CalculAllocationLogementFoyer";
            "calcul_équivalence_loyer_minimale";
            "CalculÉquivalenceLoyerMinimale";
          ]
          calcul_equivalence_loyer_minimale)
         {
           CalculEquivalenceLoyerMinimaleIn.ressources_menage_arrondies_in =
             calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_;
           CalculEquivalenceLoyerMinimaleIn.condition_2_du_832_25_in =
             calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_;
           CalculEquivalenceLoyerMinimaleIn.n_nombre_parts_d832_25_in =
             calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_;
         })
  in
  let calcul_equivalence_loyer_minimale_dot_montant_ : money =
    result_.CalculEquivalenceLoyerMinimaleOut.montant_out
  in
  let coefficient_prise_en_charge_ : decimal =
    log_variable_definition
      ["CalculAllocationLogementFoyer"; "coefficient_prise_en_charge"]
      embed_decimal
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4865;
                 start_column = 14;
                 end_line = 4865;
                 end_column = 41;
                 law_headings =
                   [
                     "Article D842-15";
                     "Section 3 : Logements-foyers";
                     "Chapitre 2 : Modalités de liquidation et de versement \
                      des allocations de logement";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             calcul_apl_logement_foyer_dot_coefficient_prise_en_charge_d832_25_seuil_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 963;
                start_column = 10;
                end_line = 963;
                end_column = 37;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let depense_nette_minimale_ : money -> money =
    log_variable_definition
      ["CalculAllocationLogementFoyer"; "dépense_nette_minimale"]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 5025;
                     start_column = 14;
                     end_line = 5025;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D842-17";
                         "Section 3 : Logements-foyers";
                         "Chapitre 2 : Modalités de liquidation et de \
                          versement des allocations de logement";
                         "Titre IV : Allocations de Logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 equivalence_loyer_ +$ montant_forfaitaire_charges_ -$ param_)
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 958;
                    start_column = 11;
                    end_line = 958;
                    end_column = 33;
                    law_headings =
                      [
                        "Secteur logement-foyer";
                        "Calcul du montant de l'allocation logement";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 958;
                start_column = 11;
                end_line = 958;
                end_column = 33;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let loyer_minimal_ : money =
    log_variable_definition
      ["CalculAllocationLogementFoyer"; "loyer_minimal"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4903;
                 start_column = 14;
                 end_line = 4903;
                 end_column = 27;
                 law_headings =
                   [
                     "Article D842-15";
                     "Section 3 : Logements-foyers";
                     "Chapitre 2 : Modalités de liquidation et de versement \
                      des allocations de logement";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> calcul_equivalence_loyer_minimale_dot_montant_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 966;
                start_column = 10;
                end_line = 966;
                end_column = 23;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let abattement_depense_nette_minimale_ : money -> money =
    log_variable_definition
      ["CalculAllocationLogementFoyer"; "abattement_dépense_nette_minimale"]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 5034;
                     start_column = 14;
                     end_line = 5034;
                     end_column = 47;
                     law_headings =
                       [
                         "Article D842-17";
                         "Section 3 : Logements-foyers";
                         "Chapitre 2 : Modalités de liquidation et de \
                          versement des allocations de logement";
                         "Titre IV : Allocations de Logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   log_end_call
                     ["CalculAllocationLogementFoyer"; "dépense_nette_minimale"]
                     (log_variable_definition
                        [
                          "CalculAllocationLogementFoyer";
                          "dépense_nette_minimale";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAllocationLogementFoyer";
                              "dépense_nette_minimale";
                            ]
                            depense_nette_minimale_)
                           (log_variable_definition
                              [
                                "CalculAllocationLogementFoyer";
                                "dépense_nette_minimale";
                                "input";
                              ]
                              embed_money param_)))
                   <$ montant_minimal_depense_nette_d842_17_
                 then
                   montant_minimal_depense_nette_d842_17_
                   -$ log_end_call
                        [
                          "CalculAllocationLogementFoyer";
                          "dépense_nette_minimale";
                        ]
                        (log_variable_definition
                           [
                             "CalculAllocationLogementFoyer";
                             "dépense_nette_minimale";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "CalculAllocationLogementFoyer";
                                 "dépense_nette_minimale";
                               ]
                               depense_nette_minimale_)
                              (log_variable_definition
                                 [
                                   "CalculAllocationLogementFoyer";
                                   "dépense_nette_minimale";
                                   "input";
                                 ]
                                 embed_money param_)))
                 else money_of_cents_string "0")
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 959;
                    start_column = 11;
                    end_line = 959;
                    end_column = 44;
                    law_headings =
                      [
                        "Secteur logement-foyer";
                        "Calcul du montant de l'allocation logement";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 959;
                start_column = 11;
                end_line = 959;
                end_column = 44;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let aide_finale_formule_ : money =
    log_variable_definition
      ["CalculAllocationLogementFoyer"; "aide_finale_formule"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4844;
                 start_column = 14;
                 end_line = 4844;
                 end_column = 33;
                 law_headings =
                   [
                     "Article D842-15";
                     "Section 3 : Logements-foyers";
                     "Chapitre 2 : Modalités de liquidation et de versement \
                      des allocations de logement";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             (equivalence_loyer_ +$ montant_forfaitaire_charges_
            -$ loyer_minimal_)
             *$ coefficient_prise_en_charge_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 976;
                start_column = 10;
                end_line = 976;
                end_column = 29;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let traitement_aide_finale_depense_nette_minimale_ : money -> money =
    log_variable_definition
      [
        "CalculAllocationLogementFoyer";
        "traitement_aide_finale_dépense_nette_minimale";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 4924;
                     start_column = 14;
                     end_line = 4924;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D842-15";
                         "Section 3 : Logements-foyers";
                         "Chapitre 2 : Modalités de liquidation et de \
                          versement des allocations de logement";
                         "Titre IV : Allocations de Logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   log_end_call
                     [
                       "CalculAllocationLogementFoyer";
                       "traitement_aide_finale_minoration_forfaitaire";
                     ]
                     (log_variable_definition
                        [
                          "CalculAllocationLogementFoyer";
                          "traitement_aide_finale_minoration_forfaitaire";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAllocationLogementFoyer";
                              "traitement_aide_finale_minoration_forfaitaire";
                            ]
                            traitement_aide_finale_minoration_forfaitaire_)
                           (log_variable_definition
                              [
                                "CalculAllocationLogementFoyer";
                                "traitement_aide_finale_minoration_forfaitaire";
                                "input";
                              ]
                              embed_money param_)))
                   -$ log_end_call
                        [
                          "CalculAllocationLogementFoyer";
                          "abattement_dépense_nette_minimale";
                        ]
                        (log_variable_definition
                           [
                             "CalculAllocationLogementFoyer";
                             "abattement_dépense_nette_minimale";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "CalculAllocationLogementFoyer";
                                 "abattement_dépense_nette_minimale";
                               ]
                               abattement_depense_nette_minimale_)
                              (log_variable_definition
                                 [
                                   "CalculAllocationLogementFoyer";
                                   "abattement_dépense_nette_minimale";
                                   "input";
                                 ]
                                 embed_money
                                 (log_end_call
                                    [
                                      "CalculAllocationLogementFoyer";
                                      "traitement_aide_finale_minoration_forfaitaire";
                                    ]
                                    (log_variable_definition
                                       [
                                         "CalculAllocationLogementFoyer";
                                         "traitement_aide_finale_minoration_forfaitaire";
                                         "output";
                                       ]
                                       embed_money
                                       ((log_begin_call
                                           [
                                             "CalculAllocationLogementFoyer";
                                             "traitement_aide_finale_minoration_forfaitaire";
                                           ]
                                           traitement_aide_finale_minoration_forfaitaire_)
                                          (log_variable_definition
                                             [
                                               "CalculAllocationLogementFoyer";
                                               "traitement_aide_finale_minoration_forfaitaire";
                                               "input";
                                             ]
                                             embed_money param_)))))))
                   <$ money_of_cents_string "0"
                 then money_of_cents_string "0"
                 else
                   log_end_call
                     [
                       "CalculAllocationLogementFoyer";
                       "traitement_aide_finale_minoration_forfaitaire";
                     ]
                     (log_variable_definition
                        [
                          "CalculAllocationLogementFoyer";
                          "traitement_aide_finale_minoration_forfaitaire";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAllocationLogementFoyer";
                              "traitement_aide_finale_minoration_forfaitaire";
                            ]
                            traitement_aide_finale_minoration_forfaitaire_)
                           (log_variable_definition
                              [
                                "CalculAllocationLogementFoyer";
                                "traitement_aide_finale_minoration_forfaitaire";
                                "input";
                              ]
                              embed_money param_)))
                   -$ log_end_call
                        [
                          "CalculAllocationLogementFoyer";
                          "abattement_dépense_nette_minimale";
                        ]
                        (log_variable_definition
                           [
                             "CalculAllocationLogementFoyer";
                             "abattement_dépense_nette_minimale";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "CalculAllocationLogementFoyer";
                                 "abattement_dépense_nette_minimale";
                               ]
                               abattement_depense_nette_minimale_)
                              (log_variable_definition
                                 [
                                   "CalculAllocationLogementFoyer";
                                   "abattement_dépense_nette_minimale";
                                   "input";
                                 ]
                                 embed_money
                                 (log_end_call
                                    [
                                      "CalculAllocationLogementFoyer";
                                      "traitement_aide_finale_minoration_forfaitaire";
                                    ]
                                    (log_variable_definition
                                       [
                                         "CalculAllocationLogementFoyer";
                                         "traitement_aide_finale_minoration_forfaitaire";
                                         "output";
                                       ]
                                       embed_money
                                       ((log_begin_call
                                           [
                                             "CalculAllocationLogementFoyer";
                                             "traitement_aide_finale_minoration_forfaitaire";
                                           ]
                                           traitement_aide_finale_minoration_forfaitaire_)
                                          (log_variable_definition
                                             [
                                               "CalculAllocationLogementFoyer";
                                               "traitement_aide_finale_minoration_forfaitaire";
                                               "input";
                                             ]
                                             embed_money param_))))))))
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 979;
                    start_column = 10;
                    end_line = 979;
                    end_column = 32;
                    law_headings =
                      [
                        "Secteur logement-foyer";
                        "Calcul du montant de l'allocation logement";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 979;
                start_column = 10;
                end_line = 979;
                end_column = 32;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let traitement_aide_finale_redevance_ : money -> money =
    log_variable_definition
      ["CalculAllocationLogementFoyer"; "traitement_aide_finale_redevance"]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 4947;
                     start_column = 14;
                     end_line = 4947;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D842-15";
                         "Section 3 : Logements-foyers";
                         "Chapitre 2 : Modalités de liquidation et de \
                          versement des allocations de logement";
                         "Titre IV : Allocations de Logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   log_end_call
                     [
                       "CalculAllocationLogementFoyer";
                       "traitement_aide_finale_dépense_nette_minimale";
                     ]
                     (log_variable_definition
                        [
                          "CalculAllocationLogementFoyer";
                          "traitement_aide_finale_dépense_nette_minimale";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAllocationLogementFoyer";
                              "traitement_aide_finale_dépense_nette_minimale";
                            ]
                            traitement_aide_finale_depense_nette_minimale_)
                           (log_variable_definition
                              [
                                "CalculAllocationLogementFoyer";
                                "traitement_aide_finale_dépense_nette_minimale";
                                "input";
                              ]
                              embed_money param_)))
                   >$ redevance_
                 then redevance_
                 else
                   log_end_call
                     [
                       "CalculAllocationLogementFoyer";
                       "traitement_aide_finale_dépense_nette_minimale";
                     ]
                     (log_variable_definition
                        [
                          "CalculAllocationLogementFoyer";
                          "traitement_aide_finale_dépense_nette_minimale";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAllocationLogementFoyer";
                              "traitement_aide_finale_dépense_nette_minimale";
                            ]
                            traitement_aide_finale_depense_nette_minimale_)
                           (log_variable_definition
                              [
                                "CalculAllocationLogementFoyer";
                                "traitement_aide_finale_dépense_nette_minimale";
                                "input";
                              ]
                              embed_money param_))))
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 980;
                    start_column = 10;
                    end_line = 980;
                    end_column = 19;
                    law_headings =
                      [
                        "Secteur logement-foyer";
                        "Calcul du montant de l'allocation logement";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 980;
                start_column = 10;
                end_line = 980;
                end_column = 19;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let traitement_aide_finale_contributions_sociales_arrondi_ : money -> money =
    log_variable_definition
      [
        "CalculAllocationLogementFoyer";
        "traitement_aide_finale_contributions_sociales_arrondi";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 4959;
                     start_column = 14;
                     end_line = 4959;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D842-15";
                         "Section 3 : Logements-foyers";
                         "Chapitre 2 : Modalités de liquidation et de \
                          versement des allocations de logement";
                         "Titre IV : Allocations de Logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   money_round
                     (log_end_call
                        [
                          "CalculAllocationLogementFoyer";
                          "traitement_aide_finale_redevance";
                        ]
                        (log_variable_definition
                           [
                             "CalculAllocationLogementFoyer";
                             "traitement_aide_finale_redevance";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "CalculAllocationLogementFoyer";
                                 "traitement_aide_finale_redevance";
                               ]
                               traitement_aide_finale_redevance_)
                              (log_variable_definition
                                 [
                                   "CalculAllocationLogementFoyer";
                                   "traitement_aide_finale_redevance";
                                   "input";
                                 ]
                                 embed_money param_)))
                     -$ log_end_call
                          [
                            "ContributionsSocialesAidesPersonnelleLogement";
                            "montant";
                          ]
                          (log_variable_definition
                             [
                               "ContributionsSocialesAidesPersonnelleLogement";
                               "montant";
                               "output";
                             ]
                             embed_money
                             ((log_begin_call
                                 [
                                   "ContributionsSocialesAidesPersonnelleLogement";
                                   "montant";
                                 ]
                                 contributions_sociales_dot_montant_)
                                (log_variable_definition
                                   [
                                     "ContributionsSocialesAidesPersonnelleLogement";
                                     "montant";
                                     "input";
                                   ]
                                   embed_money
                                   (log_end_call
                                      [
                                        "CalculAllocationLogementFoyer";
                                        "traitement_aide_finale_redevance";
                                      ]
                                      (log_variable_definition
                                         [
                                           "CalculAllocationLogementFoyer";
                                           "traitement_aide_finale_redevance";
                                           "output";
                                         ]
                                         embed_money
                                         ((log_begin_call
                                             [
                                               "CalculAllocationLogementFoyer";
                                               "traitement_aide_finale_redevance";
                                             ]
                                             traitement_aide_finale_redevance_)
                                            (log_variable_definition
                                               [
                                                 "CalculAllocationLogementFoyer";
                                                 "traitement_aide_finale_redevance";
                                                 "input";
                                               ]
                                               embed_money param_)))))))
                     -$ money_of_cents_string "50")
                   +$ log_end_call
                        [
                          "ContributionsSocialesAidesPersonnelleLogement";
                          "montant";
                        ]
                        (log_variable_definition
                           [
                             "ContributionsSocialesAidesPersonnelleLogement";
                             "montant";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "ContributionsSocialesAidesPersonnelleLogement";
                                 "montant";
                               ]
                               contributions_sociales_dot_montant_)
                              (log_variable_definition
                                 [
                                   "ContributionsSocialesAidesPersonnelleLogement";
                                   "montant";
                                   "input";
                                 ]
                                 embed_money
                                 (log_end_call
                                    [
                                      "CalculAllocationLogementFoyer";
                                      "traitement_aide_finale_redevance";
                                    ]
                                    (log_variable_definition
                                       [
                                         "CalculAllocationLogementFoyer";
                                         "traitement_aide_finale_redevance";
                                         "output";
                                       ]
                                       embed_money
                                       ((log_begin_call
                                           [
                                             "CalculAllocationLogementFoyer";
                                             "traitement_aide_finale_redevance";
                                           ]
                                           traitement_aide_finale_redevance_)
                                          (log_variable_definition
                                             [
                                               "CalculAllocationLogementFoyer";
                                               "traitement_aide_finale_redevance";
                                               "input";
                                             ]
                                             embed_money param_)))))))
                   >=$ money_of_cents_string "0"
                 then
                   money_round
                     (log_end_call
                        [
                          "CalculAllocationLogementFoyer";
                          "traitement_aide_finale_redevance";
                        ]
                        (log_variable_definition
                           [
                             "CalculAllocationLogementFoyer";
                             "traitement_aide_finale_redevance";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "CalculAllocationLogementFoyer";
                                 "traitement_aide_finale_redevance";
                               ]
                               traitement_aide_finale_redevance_)
                              (log_variable_definition
                                 [
                                   "CalculAllocationLogementFoyer";
                                   "traitement_aide_finale_redevance";
                                   "input";
                                 ]
                                 embed_money param_)))
                     -$ log_end_call
                          [
                            "ContributionsSocialesAidesPersonnelleLogement";
                            "montant";
                          ]
                          (log_variable_definition
                             [
                               "ContributionsSocialesAidesPersonnelleLogement";
                               "montant";
                               "output";
                             ]
                             embed_money
                             ((log_begin_call
                                 [
                                   "ContributionsSocialesAidesPersonnelleLogement";
                                   "montant";
                                 ]
                                 contributions_sociales_dot_montant_)
                                (log_variable_definition
                                   [
                                     "ContributionsSocialesAidesPersonnelleLogement";
                                     "montant";
                                     "input";
                                   ]
                                   embed_money
                                   (log_end_call
                                      [
                                        "CalculAllocationLogementFoyer";
                                        "traitement_aide_finale_redevance";
                                      ]
                                      (log_variable_definition
                                         [
                                           "CalculAllocationLogementFoyer";
                                           "traitement_aide_finale_redevance";
                                           "output";
                                         ]
                                         embed_money
                                         ((log_begin_call
                                             [
                                               "CalculAllocationLogementFoyer";
                                               "traitement_aide_finale_redevance";
                                             ]
                                             traitement_aide_finale_redevance_)
                                            (log_variable_definition
                                               [
                                                 "CalculAllocationLogementFoyer";
                                                 "traitement_aide_finale_redevance";
                                                 "input";
                                               ]
                                               embed_money param_)))))))
                     -$ money_of_cents_string "50")
                   +$ log_end_call
                        [
                          "ContributionsSocialesAidesPersonnelleLogement";
                          "montant";
                        ]
                        (log_variable_definition
                           [
                             "ContributionsSocialesAidesPersonnelleLogement";
                             "montant";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "ContributionsSocialesAidesPersonnelleLogement";
                                 "montant";
                               ]
                               contributions_sociales_dot_montant_)
                              (log_variable_definition
                                 [
                                   "ContributionsSocialesAidesPersonnelleLogement";
                                   "montant";
                                   "input";
                                 ]
                                 embed_money
                                 (log_end_call
                                    [
                                      "CalculAllocationLogementFoyer";
                                      "traitement_aide_finale_redevance";
                                    ]
                                    (log_variable_definition
                                       [
                                         "CalculAllocationLogementFoyer";
                                         "traitement_aide_finale_redevance";
                                         "output";
                                       ]
                                       embed_money
                                       ((log_begin_call
                                           [
                                             "CalculAllocationLogementFoyer";
                                             "traitement_aide_finale_redevance";
                                           ]
                                           traitement_aide_finale_redevance_)
                                          (log_variable_definition
                                             [
                                               "CalculAllocationLogementFoyer";
                                               "traitement_aide_finale_redevance";
                                               "input";
                                             ]
                                             embed_money param_)))))))
                 else money_of_cents_string "0")
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 981;
                    start_column = 10;
                    end_line = 981;
                    end_column = 40;
                    law_headings =
                      [
                        "Secteur logement-foyer";
                        "Calcul du montant de l'allocation logement";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 981;
                start_column = 10;
                end_line = 981;
                end_column = 40;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let traitement_aide_finale_montant_minimal_ : money -> money =
    log_variable_definition
      [
        "CalculAllocationLogementFoyer"; "traitement_aide_finale_montant_minimal";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 4983;
                     start_column = 14;
                     end_line = 4983;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D842-15";
                         "Section 3 : Logements-foyers";
                         "Chapitre 2 : Modalités de liquidation et de \
                          versement des allocations de logement";
                         "Titre IV : Allocations de Logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   log_end_call
                     [
                       "CalculAllocationLogementFoyer";
                       "traitement_aide_finale_contributions_sociales_arrondi";
                     ]
                     (log_variable_definition
                        [
                          "CalculAllocationLogementFoyer";
                          "traitement_aide_finale_contributions_sociales_arrondi";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAllocationLogementFoyer";
                              "traitement_aide_finale_contributions_sociales_arrondi";
                            ]
                            traitement_aide_finale_contributions_sociales_arrondi_)
                           (log_variable_definition
                              [
                                "CalculAllocationLogementFoyer";
                                "traitement_aide_finale_contributions_sociales_arrondi";
                                "input";
                              ]
                              embed_money param_)))
                   <$ montant_minimal_aide_d842_15_
                 then money_of_cents_string "0"
                 else
                   log_end_call
                     [
                       "CalculAllocationLogementFoyer";
                       "traitement_aide_finale_contributions_sociales_arrondi";
                     ]
                     (log_variable_definition
                        [
                          "CalculAllocationLogementFoyer";
                          "traitement_aide_finale_contributions_sociales_arrondi";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAllocationLogementFoyer";
                              "traitement_aide_finale_contributions_sociales_arrondi";
                            ]
                            traitement_aide_finale_contributions_sociales_arrondi_)
                           (log_variable_definition
                              [
                                "CalculAllocationLogementFoyer";
                                "traitement_aide_finale_contributions_sociales_arrondi";
                                "input";
                              ]
                              embed_money param_))))
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 982;
                    start_column = 10;
                    end_line = 982;
                    end_column = 25;
                    law_headings =
                      [
                        "Secteur logement-foyer";
                        "Calcul du montant de l'allocation logement";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 982;
                start_column = 10;
                end_line = 982;
                end_column = 25;
                law_headings =
                  [
                    "Secteur logement-foyer";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  {
    CalculAllocationLogementFoyerOut.coefficient_prise_en_charge_out =
      coefficient_prise_en_charge_;
    CalculAllocationLogementFoyerOut.equivalence_loyer_out = equivalence_loyer_;
    CalculAllocationLogementFoyerOut.montant_forfaitaire_charges_out =
      montant_forfaitaire_charges_;
    CalculAllocationLogementFoyerOut.loyer_minimal_out = loyer_minimal_;
    CalculAllocationLogementFoyerOut.aide_finale_formule_out =
      aide_finale_formule_;
    CalculAllocationLogementFoyerOut.traitement_aide_finale_montant_minimal_out =
      traitement_aide_finale_montant_minimal_;
  }

let calcul_allocation_logement_accession_propriete
    (calcul_allocation_logement_accession_propriete_in :
      CalculAllocationLogementAccessionProprieteIn.t) :
    CalculAllocationLogementAccessionProprieteOut.t =
  let ressources_menage_arrondies_base_ : money =
    calcul_allocation_logement_accession_propriete_in
      .CalculAllocationLogementAccessionProprieteIn
       .ressources_menage_arrondies_base_in
  in
  let nombre_personnes_a_charge_ : integer =
    calcul_allocation_logement_accession_propriete_in
      .CalculAllocationLogementAccessionProprieteIn.nombre_personnes_a_charge_in
  in
  let situation_familiale_calcul_apl_ : SituationFamilialeCalculAPL.t =
    calcul_allocation_logement_accession_propriete_in
      .CalculAllocationLogementAccessionProprieteIn
       .situation_familiale_calcul_apl_in
  in
  let zone_ : ZoneDHabitation.t =
    calcul_allocation_logement_accession_propriete_in
      .CalculAllocationLogementAccessionProprieteIn.zone_in
  in
  let date_courante_ : date =
    calcul_allocation_logement_accession_propriete_in
      .CalculAllocationLogementAccessionProprieteIn.date_courante_in
  in
  let mensualite_principale_ : money =
    calcul_allocation_logement_accession_propriete_in
      .CalculAllocationLogementAccessionProprieteIn.mensualite_principale_in
  in
  let situation_r822_11_13_17_ : bool =
    calcul_allocation_logement_accession_propriete_in
      .CalculAllocationLogementAccessionProprieteIn.situation_r822_11_13_17_in
  in
  let date_signature_pret_ : date =
    calcul_allocation_logement_accession_propriete_in
      .CalculAllocationLogementAccessionProprieteIn.date_signature_pret_in
  in
  let type_travaux_logement_ : TypeTravauxLogementR8425.t =
    calcul_allocation_logement_accession_propriete_in
      .CalculAllocationLogementAccessionProprieteIn.type_travaux_logement_in
  in
  let local_habite_premiere_fois_beneficiaire_ : bool =
    calcul_allocation_logement_accession_propriete_in
      .CalculAllocationLogementAccessionProprieteIn
       .local_habite_premiere_fois_beneficiaire_in
  in
  let date_entree_logement_ : date =
    calcul_allocation_logement_accession_propriete_in
      .CalculAllocationLogementAccessionProprieteIn.date_entree_logement_in
  in
  let charges_mensuelles_pret_ : money =
    calcul_allocation_logement_accession_propriete_in
      .CalculAllocationLogementAccessionProprieteIn.charges_mensuelles_pret_in
  in
  let copropriete_ : bool =
    calcul_allocation_logement_accession_propriete_in
      .CalculAllocationLogementAccessionProprieteIn.copropriete_in
  in
  let montant_forfaitaire_d842_6_ : money =
    log_variable_definition
      [
        "CalculAllocationLogementAccessionPropriété";
        "montant_forfaitaire_d842_6";
      ]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 4156;
                 start_column = 14;
                 end_line = 4156;
                 end_column = 40;
                 law_headings =
                   [
                     "Article 35";
                     "Chapitre IV : Calcul des allocations de logement en \
                      secteur accession";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) -> money_of_cents_string "500")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 879;
                start_column = 11;
                end_line = 879;
                end_column = 37;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let taux_francs_vers_euros_ : decimal =
    log_variable_definition
      ["CalculAllocationLogementAccessionPropriété"; "taux_francs_vers_euros"]
      embed_decimal
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/autres_sources.catala_fr";
                 start_line = 278;
                 start_column = 14;
                 end_line = 278;
                 end_column = 36;
                 law_headings =
                   [
                     "Article premier";
                     "Règlement (CE) n°2866/98 du conseil du 31 décembre 1998 \
                      concernant les taux de conversion entre l'euro et les \
                      monnaies des États membres adoptant l'euro";
                   ];
               }
               true)
           (fun (_ : _) ->
             decimal_of_string "1." /& decimal_of_string "6.55957")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 882;
                start_column = 11;
                end_line = 882;
                end_column = 33;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let montant_minimal_aide_d842_6_ : money =
    log_variable_definition
      [
        "CalculAllocationLogementAccessionPropriété";
        "montant_minimal_aide_d842_6";
      ]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 4166;
                 start_column = 14;
                 end_line = 4166;
                 end_column = 41;
                 law_headings =
                   [
                     "Article 36";
                     "Chapitre IV : Calcul des allocations de logement en \
                      secteur accession";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) -> money_of_cents_string "1000")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 885;
                start_column = 11;
                end_line = 885;
                end_column = 38;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let montant_forfaitaire_d842_11_ : money =
    log_variable_definition
      [
        "CalculAllocationLogementAccessionPropriété";
        "montant_forfaitaire_d842_11";
      ]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 4218;
                 start_column = 14;
                 end_line = 4218;
                 end_column = 41;
                 law_headings =
                   [
                     "Article 38";
                     "Chapitre IV : Calcul des allocations de logement en \
                      secteur accession";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) -> money_of_cents_string "1500")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 886;
                start_column = 11;
                end_line = 886;
                end_column = 38;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let montant_forfaitaire_d842_12_ : money =
    log_variable_definition
      [
        "CalculAllocationLogementAccessionPropriété";
        "montant_forfaitaire_d842_12";
      ]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 4243;
                 start_column = 14;
                 end_line = 4243;
                 end_column = 41;
                 law_headings =
                   [
                     "Article 39";
                     "Chapitre IV : Calcul des allocations de logement en \
                      secteur accession";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) -> money_of_cents_string "390000")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 887;
                start_column = 11;
                end_line = 887;
                end_column = 38;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let coefficient_d842_11_ : decimal =
    log_variable_definition
      ["CalculAllocationLogementAccessionPropriété"; "coefficient_d842_11"]
      embed_decimal
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 4225;
                 start_column = 14;
                 end_line = 4225;
                 end_column = 33;
                 law_headings =
                   [
                     "Article 38";
                     "Chapitre IV : Calcul des allocations de logement en \
                      secteur accession";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) -> decimal_of_string "0.0234")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 888;
                start_column = 11;
                end_line = 888;
                end_column = 30;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let coefficient_d842_12_ : decimal =
    log_variable_definition
      ["CalculAllocationLogementAccessionPropriété"; "coefficient_d842_12"]
      embed_decimal
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 4236;
                 start_column = 14;
                 end_line = 4236;
                 end_column = 33;
                 law_headings =
                   [
                     "Article 39";
                     "Chapitre IV : Calcul des allocations de logement en \
                      secteur accession";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) -> decimal_of_string "16.25")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 889;
                start_column = 11;
                end_line = 889;
                end_column = 30;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let calcul_nombre_parts_dot_nombre_personnes_a_charge_ : integer =
    try
      log_variable_definition
        [
          "CalculAllocationLogementAccessionPropriété";
          "calcul_nombre_parts.nombre_personnes_à_charge";
        ]
        embed_integer
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4503;
                 start_column = 14;
                 end_line = 4503;
                 end_column = 59;
                 law_headings =
                   [
                     "Article D842-6";
                     "Section 2 : Accession à la propriété";
                     "Chapitre 2 : Modalités de liquidation et de versement \
                      des allocations de logement";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> nombre_personnes_a_charge_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 681;
             start_column = 10;
             end_line = 681;
             end_column = 35;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_nombre_parts_dot_situation_familiale_calcul_apl_ :
      SituationFamilialeCalculAPL.t =
    try
      log_variable_definition
        [
          "CalculAllocationLogementAccessionPropriété";
          "calcul_nombre_parts.situation_familiale_calcul_apl";
        ]
        embed_situation_familiale_calcul_a_p_l
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4505;
                 start_column = 14;
                 end_line = 4505;
                 end_column = 64;
                 law_headings =
                   [
                     "Article D842-6";
                     "Section 2 : Accession à la propriété";
                     "Chapitre 2 : Modalités de liquidation et de versement \
                      des allocations de logement";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> situation_familiale_calcul_apl_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 682;
             start_column = 10;
             end_line = 682;
             end_column = 40;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : CalculNombrePartsAccessionProprieteOut.t =
    log_end_call
      [
        "CalculAllocationLogementAccessionPropriété";
        "calcul_nombre_parts";
        "CalculNombrePartsAccessionPropriété";
      ]
      ((log_begin_call
          [
            "CalculAllocationLogementAccessionPropriété";
            "calcul_nombre_parts";
            "CalculNombrePartsAccessionPropriété";
          ]
          calcul_nombre_parts_accession_propriete)
         {
           CalculNombrePartsAccessionProprieteIn.nombre_personnes_a_charge_in =
             calcul_nombre_parts_dot_nombre_personnes_a_charge_;
           CalculNombrePartsAccessionProprieteIn
           .situation_familiale_calcul_apl_in =
             calcul_nombre_parts_dot_situation_familiale_calcul_apl_;
         })
  in
  let calcul_nombre_parts_dot_n_nombre_parts_d832_11_ : decimal =
    result_.CalculNombrePartsAccessionProprieteOut.n_nombre_parts_d832_11_out
  in
  let contributions_sociales_dot_date_courante_ : date =
    try
      log_variable_definition
        [
          "CalculAllocationLogementAccessionPropriété";
          "contributions_sociales.date_courante";
        ]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 941;
                 start_column = 14;
                 end_line = 941;
                 end_column = 50;
                 law_headings =
                   [
                     "Secteur accession à la propriété";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 544;
             start_column = 10;
             end_line = 544;
             end_column = 23;
             law_headings =
               [
                 "Calcul des contributions sociales s'appliquant aux aides \
                  personnelles au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : ContributionsSocialesAidesPersonnelleLogementOut.t =
    log_end_call
      [
        "CalculAllocationLogementAccessionPropriété";
        "contributions_sociales";
        "ContributionsSocialesAidesPersonnelleLogement";
      ]
      ((log_begin_call
          [
            "CalculAllocationLogementAccessionPropriété";
            "contributions_sociales";
            "ContributionsSocialesAidesPersonnelleLogement";
          ]
          contributions_sociales_aides_personnelle_logement)
         {
           ContributionsSocialesAidesPersonnelleLogementIn.date_courante_in =
             contributions_sociales_dot_date_courante_;
         })
  in
  let contributions_sociales_dot_montant_ : money -> money =
    result_.ContributionsSocialesAidesPersonnelleLogementOut.montant_out
  in
  let montant_forfaitaire_charges_ : money =
    log_variable_definition
      [
        "CalculAllocationLogementAccessionPropriété";
        "montant_forfaitaire_charges";
      ]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/arrete_2019-09-27.catala_fr";
                       start_line = 4198;
                       start_column = 5;
                       end_line = 4198;
                       end_column = 16;
                       law_headings =
                         [
                           "Article 37";
                           "Chapitre IV : Calcul des allocations de logement \
                            en secteur accession";
                           "Arrêté du 27 septembre 2019 relatif au calcul des \
                            aides personnelles au logement et de la prime de \
                            déménagement";
                         ];
                     }
                     (date_courante_ >=@ date_of_numbers 2021 10 1
                     && copropriete_))
                 (fun (_ : _) ->
                   (match situation_familiale_calcul_apl_ with
                   | SituationFamilialeCalculAPL.PersonneSeule _ ->
                     money_of_cents_string "2710"
                   | SituationFamilialeCalculAPL.Couple _ ->
                     money_of_cents_string "5422")
                   +$ money_of_cents_string "1229"
                      *$ decimal_of_integer nombre_personnes_a_charge_));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 4144;
                 start_column = 14;
                 end_line = 4144;
                 end_column = 41;
                 law_headings =
                   [
                     "Article 34";
                     "Chapitre IV : Calcul des allocations de logement en \
                      secteur accession";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               (date_courante_ >=@ date_of_numbers 2021 10 1))
           (fun (_ : _) ->
             if nombre_personnes_a_charge_ = integer_of_string "0" then
               money_of_cents_string "5422"
             else
               money_of_cents_string "5422"
               +$ money_of_cents_string "1229"
                  *$ decimal_of_integer nombre_personnes_a_charge_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 872;
                start_column = 11;
                end_line = 872;
                end_column = 38;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let traitement_aide_finale_minoration_forfaitaire_ : money -> money =
    log_variable_definition
      [
        "CalculAllocationLogementAccessionPropriété";
        "traitement_aide_finale_minoration_forfaitaire";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 4513;
                     start_column = 14;
                     end_line = 4513;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D842-6";
                         "Section 2 : Accession à la propriété";
                         "Chapitre 2 : Modalités de liquidation et de \
                          versement des allocations de logement";
                         "Titre IV : Allocations de Logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   param_ -$ montant_forfaitaire_d842_6_
                   <$ money_of_cents_string "0"
                 then money_of_cents_string "0"
                 else param_ -$ montant_forfaitaire_d842_6_)
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 902;
                    start_column = 10;
                    end_line = 902;
                    end_column = 32;
                    law_headings =
                      [
                        "Secteur accession à la propriété";
                        "Calcul du montant de l'allocation logement";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 902;
                start_column = 10;
                end_line = 902;
                end_column = 32;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let calcul_plafond_mensualite_d842_6_base_ : date -> money =
    log_variable_definition
      [
        "CalculAllocationLogementAccessionPropriété";
        "calcul_plafond_mensualité_d842_6_base";
      ]
      unembeddable
      (try
         fun (param_ : date) ->
           try
             handle_default
               [|
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 3124;
                           start_column = 5;
                           end_line = 3124;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 33";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2020 1 1
                         && param_ >=@ date_of_numbers 1992 7 1
                         && param_ <@ date_of_numbers 1994 7 1))
                     (fun (_ : _) ->
                       (match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "158700"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "191300"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "205500"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "211300"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "217100"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "222900"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "228000"
                         else
                           money_of_cents_string "228000"
                           +$ money_of_cents_string "19800"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "139300"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "170600"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "184700"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "191200"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "197700"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "204200"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "218700"
                         else
                           money_of_cents_string "218700"
                           +$ money_of_cents_string "19100"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "130600"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "158400"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "172600"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "179800"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "187000"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "194200"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "208600"
                         else
                           money_of_cents_string "208600"
                           +$ money_of_cents_string "18200"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5"))
                       *$ taux_francs_vers_euros_));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 3170;
                           start_column = 5;
                           end_line = 3170;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 33";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2020 1 1
                         && param_ >=@ date_of_numbers 1994 7 1
                         && param_ <@ date_of_numbers 1997 7 1))
                     (fun (_ : _) ->
                       (match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "160400"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "193400"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "207800"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "213700"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "219600"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "225500"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "230500"
                         else
                           money_of_cents_string "230500"
                           +$ money_of_cents_string "20000"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "140800"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "172500"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "186700"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "193300"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "199900"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "206500"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "221100"
                         else
                           money_of_cents_string "221100"
                           +$ money_of_cents_string "19300"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "132000"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "180100"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "174500"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "181800"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "189100"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "194200"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "210900"
                         else
                           money_of_cents_string "210900"
                           +$ money_of_cents_string "18400"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5"))
                       *$ taux_francs_vers_euros_));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 3216;
                           start_column = 5;
                           end_line = 3216;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 33";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2020 1 1
                         && param_ >=@ date_of_numbers 1997 7 1
                         && param_ <@ date_of_numbers 1998 7 1))
                     (fun (_ : _) ->
                       (match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "163300"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "196900"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "211600"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "217600"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "223600"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "229600"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "234600"
                         else
                           money_of_cents_string "234600"
                           +$ money_of_cents_string "20400"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "143300"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "175600"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "190100"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "196600"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "203500"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "210200"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "225100"
                         else
                           money_of_cents_string "225100"
                           +$ money_of_cents_string "19600"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "134400"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "163000"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "177700"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "185100"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "192500"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "199900"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "214700"
                         else
                           money_of_cents_string "214700"
                           +$ money_of_cents_string "18700"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5"))
                       *$ taux_francs_vers_euros_));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 3262;
                           start_column = 5;
                           end_line = 3262;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 33";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2020 1 1
                         && param_ >=@ date_of_numbers 1998 7 1
                         && param_ <@ date_of_numbers 1999 7 1))
                     (fun (_ : _) ->
                       (match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "167200"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "201600"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "216700"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "222800"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "229000"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "235100"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "240200"
                         else
                           money_of_cents_string "240200"
                           +$ money_of_cents_string "20900"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "146700"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "179800"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "194700"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "201500"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "208400"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "215200"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "230500"
                         else
                           money_of_cents_string "230500"
                           +$ money_of_cents_string "20100"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "137600"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "166900"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "182000"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "189500"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "197100"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "204700"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "219900"
                         else
                           money_of_cents_string "219900"
                           +$ money_of_cents_string "19100"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5"))
                       *$ taux_francs_vers_euros_));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 3308;
                           start_column = 5;
                           end_line = 3308;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 33";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2020 1 1
                         && param_ >=@ date_of_numbers 1999 7 1
                         && param_ <@ date_of_numbers 2000 7 1))
                     (fun (_ : _) ->
                       (match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "167400"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "201800"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "216900"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "223000"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "229200"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "235300"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "240400"
                         else
                           money_of_cents_string "240400"
                           +$ money_of_cents_string "20900"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "146800"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "180000"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "194900"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "201700"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "208600"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "215400"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "230700"
                         else
                           money_of_cents_string "230700"
                           +$ money_of_cents_string "20100"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "137700"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "167100"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "182200"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "189700"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "197300"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "204900"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "220100"
                         else
                           money_of_cents_string "220100"
                           +$ money_of_cents_string "19100"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5"))
                       *$ taux_francs_vers_euros_));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 3354;
                           start_column = 5;
                           end_line = 3354;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 33";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2020 1 1
                         && param_ >=@ date_of_numbers 2000 7 1
                         && param_ <@ date_of_numbers 2001 7 1))
                     (fun (_ : _) ->
                       (match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "169100"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "203800"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "219100"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "225200"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "231500"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "237700"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "242800"
                         else
                           money_of_cents_string "242800"
                           +$ money_of_cents_string "21100"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "148300"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "181800"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "196800"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "203700"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "210700"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "217600"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "233000"
                         else
                           money_of_cents_string "233000"
                           +$ money_of_cents_string "20300"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "139100"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "168800"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "184000"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "191600"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "199300"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "206900"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "222300"
                         else
                           money_of_cents_string "222300"
                           +$ money_of_cents_string "19300"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5"))
                       *$ taux_francs_vers_euros_));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 3400;
                           start_column = 5;
                           end_line = 3400;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 33";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2020 1 1
                         && param_ >=@ date_of_numbers 2001 7 1
                         && param_ <@ date_of_numbers 2002 1 1))
                     (fun (_ : _) ->
                       (match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "171100"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "206200"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "221700"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "227900"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "234300"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "240600"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "245700"
                         else
                           money_of_cents_string "245700"
                           +$ money_of_cents_string "21400"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "150100"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "184000"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "199200"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "206100"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "213200"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "220200"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "235800"
                         else
                           money_of_cents_string "235800"
                           +$ money_of_cents_string "20500"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "140800"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "170800"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "186200"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "193900"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "201700"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "209400"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "225000"
                         else
                           money_of_cents_string "225000"
                           +$ money_of_cents_string "19500"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5"))
                       *$ taux_francs_vers_euros_));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 3446;
                           start_column = 5;
                           end_line = 3446;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 33";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2020 1 1
                         && param_ >=@ date_of_numbers 2002 1 1
                         && param_ <@ date_of_numbers 2002 7 1))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "26084"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "31435"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "33798"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "34743"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "35719"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "36679"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "37457"
                         else
                           money_of_cents_string "37457"
                           +$ money_of_cents_string "3262"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "22883"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "28051"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "30368"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "31420"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "32502"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "33569"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "35947"
                         else
                           money_of_cents_string "35947"
                           +$ money_of_cents_string "3125"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "21465"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "26038"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "28386"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "29560"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "30749"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "31923"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "34301"
                         else
                           money_of_cents_string "34301"
                           +$ money_of_cents_string "2973"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 3491;
                           start_column = 5;
                           end_line = 3491;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 33";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2020 1 1
                         && param_ >=@ date_of_numbers 2002 7 1
                         && param_ <@ date_of_numbers 2003 7 1))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "26397"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "31812"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "34204"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "35160"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "36148"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "37119"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "37906"
                         else
                           money_of_cents_string "37906"
                           +$ money_of_cents_string "3301"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "23158"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "28388"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "30732"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "31797"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "32892"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "33972"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "36378"
                         else
                           money_of_cents_string "36378"
                           +$ money_of_cents_string "3163"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "21723"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "26350"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "28727"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "29915"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "31118"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "32306"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "34713"
                         else
                           money_of_cents_string "34713"
                           +$ money_of_cents_string "3009"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 3538;
                           start_column = 5;
                           end_line = 3538;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 33";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2020 1 1
                         && param_ >=@ date_of_numbers 2003 7 1
                         && param_ <@ date_of_numbers 2005 9 1))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "26714"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "32194"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "34614"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "35582"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "36582"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "37564"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "38361"
                         else
                           money_of_cents_string "38361"
                           +$ money_of_cents_string "3341"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "23436"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "28729"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "31101"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "32179"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "33287"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "34380"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "36815"
                         else
                           money_of_cents_string "36815"
                           +$ money_of_cents_string "3201"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "21984"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "26666"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "29072"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "30274"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "31491"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "32694"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "35130"
                         else
                           money_of_cents_string "35130"
                           +$ money_of_cents_string "3045"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 3583;
                           start_column = 5;
                           end_line = 3583;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 33";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2020 1 1
                         && param_ >=@ date_of_numbers 2005 9 1
                         && param_ <@ date_of_numbers 2007 1 1))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "27195"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "32773"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "35237"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "36222"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "37240"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "38240"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "39051"
                         else
                           money_of_cents_string "39051"
                           +$ money_of_cents_string "3401"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "23858"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "29246"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "31661"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "32758"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "33886"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "34999"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "37478"
                         else
                           money_of_cents_string "37478"
                           +$ money_of_cents_string "3259"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "22380"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "27146"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "29595"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "30819"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "32058"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "33282"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "35762"
                         else
                           money_of_cents_string "35762"
                           +$ money_of_cents_string "3100"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 3628;
                           start_column = 5;
                           end_line = 3628;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 33";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2020 1 1
                         && param_ >=@ date_of_numbers 2007 1 1
                         && param_ <@ date_of_numbers 2008 1 1))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "27956"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "33691"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "36224"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "37236"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "38283"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "39311"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "40144"
                         else
                           money_of_cents_string "40144"
                           +$ money_of_cents_string "3496"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "24526"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "30065"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "32548"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "33675"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "34865"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "35979"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "38527"
                         else
                           money_of_cents_string "38527"
                           +$ money_of_cents_string "3350"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "23007"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "27906"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "30424"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "31682"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "32956"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "34214"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "36733"
                         else
                           money_of_cents_string "36733"
                           +$ money_of_cents_string "3187"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 3673;
                           start_column = 5;
                           end_line = 3673;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 33";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2020 1 1
                         && param_ >=@ date_of_numbers 2008 1 1
                         && param_ <@ date_of_numbers 2009 1 1))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "28728"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "34621"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "37224"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "38264"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "39340"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "40396"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "41252"
                         else
                           money_of_cents_string "41252"
                           +$ money_of_cents_string "3592"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "25203"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "30895"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "33446"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "34604"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "35796"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "36972"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "39590"
                         else
                           money_of_cents_string "39590"
                           +$ money_of_cents_string "3442"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "23642"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "28676"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "31264"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "32556"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "33866"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "35158"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "37778"
                         else
                           money_of_cents_string "37778"
                           +$ money_of_cents_string "3275"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 3718;
                           start_column = 5;
                           end_line = 3718;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 33";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2020 1 1
                         && param_ >=@ date_of_numbers 2009 1 1
                         && param_ <@ date_of_numbers 2010 1 1))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "29575"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "35642"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "38322"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "39393"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "40501"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "41588"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "42469"
                         else
                           money_of_cents_string "42469"
                           +$ money_of_cents_string "3698"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "25946"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "31806"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "34433"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "35625"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "36852"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "38063"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "40758"
                         else
                           money_of_cents_string "40758"
                           +$ money_of_cents_string "3544"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "24339"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "29522"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "32186"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "33516"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "34865"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "36195"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "38892"
                         else
                           money_of_cents_string "38892"
                           +$ money_of_cents_string "3372"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 3763;
                           start_column = 5;
                           end_line = 3763;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 33";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2020 1 1
                         && param_ >=@ date_of_numbers 2010 1 1
                         && param_ <@ date_of_numbers 2011 1 1))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "29670"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "35757"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "38445"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "39519"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "40601"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "41721"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "42605"
                         else
                           money_of_cents_string "42605"
                           +$ money_of_cents_string "3710"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "26029"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "31908"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "34643"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "35739"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "36970"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "38185"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "40888"
                         else
                           money_of_cents_string "40888"
                           +$ money_of_cents_string "3555"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "24417"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "29616"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "32289"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "33623"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "34977"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "36311"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "39016"
                         else
                           money_of_cents_string "39016"
                           +$ money_of_cents_string "3383"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 3808;
                           start_column = 5;
                           end_line = 3808;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 33";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2020 1 1
                         && param_ >=@ date_of_numbers 2011 1 1
                         && param_ <@ date_of_numbers 2012 1 1))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "29996"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "36149"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "38868"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "39954"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "41078"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "42180"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "43074"
                         else
                           money_of_cents_string "43074"
                           +$ money_of_cents_string "3751"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "26315"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "32259"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "34923"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "36132"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "37373"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "38605"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "41338"
                         else
                           money_of_cents_string "41338"
                           +$ money_of_cents_string "3594"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "24686"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "29942"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "32644"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "33993"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "35362"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "36710"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "39445"
                         else
                           money_of_cents_string "39445"
                           +$ money_of_cents_string "3420"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 3853;
                           start_column = 5;
                           end_line = 3853;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 33";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2020 1 1
                         && param_ >=@ date_of_numbers 2012 1 1
                         && param_ <@ date_of_numbers 2013 1 1))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "30296"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "36510"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "39257"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "40354"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "41489"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "42602"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "43505"
                         else
                           money_of_cents_string "43505"
                           +$ money_of_cents_string "3789"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "26578"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "32582"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "35272"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "36493"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "37751"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "38991"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "41751"
                         else
                           money_of_cents_string "41751"
                           +$ money_of_cents_string "3630"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "24933"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "30241"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "32970"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "34333"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "35716"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "37077"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "39839"
                         else
                           money_of_cents_string "39839"
                           +$ money_of_cents_string "3454"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 3898;
                           start_column = 5;
                           end_line = 3898;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 33";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2020 1 1
                         && param_ >=@ date_of_numbers 2013 1 1
                         && param_ <@ date_of_numbers 2014 10 1))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "30947"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "37295"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "40101"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "41222"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "42381"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "43518"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "44440"
                         else
                           money_of_cents_string "44440"
                           +$ money_of_cents_string "3870"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "27149"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "33283"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "36030"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "37278"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "38563"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "39829"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "42649"
                         else
                           money_of_cents_string "42659"
                           +$ money_of_cents_string "3708"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "25469"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "30891"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "33679"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "35071"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "36484"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "37874"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "40696"
                         else
                           money_of_cents_string "40696"
                           +$ money_of_cents_string "3528"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 3943;
                           start_column = 5;
                           end_line = 3943;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 33";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2020 1 1
                         && param_ >=@ date_of_numbers 2014 10 1
                         && param_ <@ date_of_numbers 2015 10 1))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "31123"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "37508"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "40330"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "41457"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "42623"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "43766"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "44693"
                         else
                           money_of_cents_string "44693"
                           +$ money_of_cents_string "3892"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "27304"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "33473"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "36235"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "37490"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "38783"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "40056"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "42892"
                         else
                           money_of_cents_string "42892"
                           +$ money_of_cents_string "3729"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "25614"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "31067"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "33871"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "35271"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "36692"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "38090"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "40928"
                         else
                           money_of_cents_string "40928"
                           +$ money_of_cents_string "3548"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 3988;
                           start_column = 5;
                           end_line = 3988;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 33";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2020 1 1
                         && param_ >=@ date_of_numbers 2015 10 1
                         && param_ <@ date_of_numbers 2017 10 1))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "31148"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "37538"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "40362"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "41490"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "42657"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "43801"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "44729"
                         else
                           money_of_cents_string "44729"
                           +$ money_of_cents_string "3895"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "27326"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "33500"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "36264"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "37520"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "38814"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "40088"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "42926"
                         else
                           money_of_cents_string "42926"
                           +$ money_of_cents_string "3732"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "25634"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "31092"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "33898"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "35299"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "36721"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "38120"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "40961"
                         else
                           money_of_cents_string "40961"
                           +$ money_of_cents_string "3551"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 4033;
                           start_column = 5;
                           end_line = 4033;
                           end_column = 64;
                           law_headings =
                             [
                               "Article 33";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2020 1 1
                         && param_ >=@ date_of_numbers 2017 10 1
                         && param_ <@ date_of_numbers 2019 10 1))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "31382"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "37820"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "40665"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "41801"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "42977"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "44130"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "45064"
                         else
                           money_of_cents_string "45064"
                           +$ money_of_cents_string "3924"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "27531"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "33751"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "36536"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "37801"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "39105"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "40389"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "43248"
                         else
                           money_of_cents_string "43248"
                           +$ money_of_cents_string "3760"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "25826"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "31325"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "34152"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "35564"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "36996"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "38406"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "41268"
                         else
                           money_of_cents_string "41268"
                           +$ money_of_cents_string "3578"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")));
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 4078;
                           start_column = 5;
                           end_line = 4078;
                           end_column = 33;
                           law_headings =
                             [
                               "Article 33";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2020 1 1
                         && param_ >=@ date_of_numbers 2019 10 1))
                     (fun (_ : _) ->
                       match zone_ with
                       | ZoneDHabitation.Zone1 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "31476"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "37933"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "40787"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "41927"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "43106"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "44262"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "45200"
                         else
                           money_of_cents_string "45200"
                           +$ money_of_cents_string "3936"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone2 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "27614"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "33853"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "36646"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "37915"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "39222"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "40510"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "43378"
                         else
                           money_of_cents_string "43378"
                           +$ money_of_cents_string "3771"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")
                       | ZoneDHabitation.Zone3 _ ->
                         if nombre_personnes_a_charge_ = integer_of_string "0"
                         then
                           match situation_familiale_calcul_apl_ with
                           | SituationFamilialeCalculAPL.PersonneSeule _ ->
                             money_of_cents_string "25904"
                           | SituationFamilialeCalculAPL.Couple _ ->
                             money_of_cents_string "31419"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "1"
                         then money_of_cents_string "34255"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "2"
                         then money_of_cents_string "35670"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "3"
                         then money_of_cents_string "37107"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "4"
                         then money_of_cents_string "38521"
                         else if
                           nombre_personnes_a_charge_ = integer_of_string "5"
                         then money_of_cents_string "41392"
                         else
                           money_of_cents_string "41392"
                           +$ money_of_cents_string "3588"
                              *$ decimal_of_integer
                                   (nombre_personnes_a_charge_
                                  -! integer_of_string "5")));
               |]
               (fun (_ : _) -> false)
               (fun (_ : _) -> raise EmptyError)
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 877;
                    start_column = 10;
                    end_line = 877;
                    end_column = 14;
                    law_headings =
                      [
                        "Secteur accession à la propriété";
                        "Calcul du montant de l'allocation logement";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 877;
                start_column = 10;
                end_line = 877;
                end_column = 14;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let seuil_minimal_ressources_menage_ : money =
    log_variable_definition
      [
        "CalculAllocationLogementAccessionPropriété";
        "seuil_minimal_ressources_ménage";
      ]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 4756;
                       start_column = 6;
                       end_line = 4762;
                       end_column = 6;
                       law_headings =
                         [
                           "Article D842-12";
                           "Section 2 : Accession à la propriété";
                           "Chapitre 2 : Modalités de liquidation et de \
                            versement des allocations de logement";
                           "Titre IV : Allocations de Logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     (date_signature_pret_ >=@ date_of_numbers 1992 9 30
                      && date_signature_pret_ >=@ date_of_numbers 1994 9 30
                     || date_signature_pret_ >=@ date_of_numbers 1994 9 30
                        && ((match type_travaux_logement_ with
                            | TypeTravauxLogementR8425.ObjectifDecenceLogement _
                              ->
                              false
                            | TypeTravauxLogementR8425.PrevuDansListeR321_15 _
                              ->
                              false
                            | TypeTravauxLogementR8425
                              .AgrandirOuRendreHabitableD331_63 _ ->
                              false
                            | TypeTravauxLogementR8425.PasDeTravaux _ -> true)
                           || (match type_travaux_logement_ with
                              | TypeTravauxLogementR8425.ObjectifDecenceLogement
                                  _ ->
                                true
                              | TypeTravauxLogementR8425.PrevuDansListeR321_15 _
                                ->
                                false
                              | TypeTravauxLogementR8425
                                .AgrandirOuRendreHabitableD331_63 _ ->
                                false
                              | TypeTravauxLogementR8425.PasDeTravaux _ -> false)
                           ||
                           match type_travaux_logement_ with
                           | TypeTravauxLogementR8425.ObjectifDecenceLogement _
                             ->
                             false
                           | TypeTravauxLogementR8425.PrevuDansListeR321_15 _ ->
                             false
                           | TypeTravauxLogementR8425
                             .AgrandirOuRendreHabitableD331_63 _ ->
                             true
                           | TypeTravauxLogementR8425.PasDeTravaux _ -> false)))
                 (fun (_ : _) -> mensualite_principale_ *$ coefficient_d842_12_));
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 4774;
                       start_column = 5;
                       end_line = 4775;
                       end_column = 59;
                       law_headings =
                         [
                           "Article D842-12";
                           "Section 2 : Accession à la propriété";
                           "Chapitre 2 : Modalités de liquidation et de \
                            versement des allocations de logement";
                           "Titre IV : Allocations de Logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     (date_signature_pret_ >=@ date_of_numbers 1994 9 30
                     &&
                     match type_travaux_logement_ with
                     | TypeTravauxLogementR8425.ObjectifDecenceLogement _ ->
                       false
                     | TypeTravauxLogementR8425.PrevuDansListeR321_15 _ -> true
                     | TypeTravauxLogementR8425.AgrandirOuRendreHabitableD331_63
                         _ ->
                       false
                     | TypeTravauxLogementR8425.PasDeTravaux _ -> false))
                 (fun (_ : _) -> montant_forfaitaire_d842_12_));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 881;
                start_column = 11;
                end_line = 881;
                end_column = 42;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let depense_nette_minimale_ : money -> money =
    log_variable_definition
      ["CalculAllocationLogementAccessionPropriété"; "dépense_nette_minimale"]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 4697;
                     start_column = 15;
                     end_line = 4697;
                     end_column = 37;
                     law_headings =
                       [
                         "Article D842-11";
                         "Section 2 : Accession à la propriété";
                         "Chapitre 2 : Modalités de liquidation et de \
                          versement des allocations de logement";
                         "Titre IV : Allocations de Logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 charges_mensuelles_pret_ +$ montant_forfaitaire_charges_
                 -$ param_)
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 883;
                    start_column = 11;
                    end_line = 883;
                    end_column = 33;
                    law_headings =
                      [
                        "Secteur accession à la propriété";
                        "Calcul du montant de l'allocation logement";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 883;
                start_column = 11;
                end_line = 883;
                end_column = 33;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let calcul_plafond_mensualite_d842_6_avec_copropriete_ : date -> money =
    log_variable_definition
      [
        "CalculAllocationLogementAccessionPropriété";
        "calcul_plafond_mensualité_d842_6_avec_copropriété";
      ]
      unembeddable
      (try
         fun (param_ : date) ->
           try
             handle_default
               [|
                 (fun (_ : _) ->
                   handle_default [||]
                     (fun (_ : _) ->
                       log_decision_taken
                         {
                           filename =
                             "examples/aides_logement/arrete_2019-09-27.catala_fr";
                           start_line = 4178;
                           start_column = 24;
                           end_line = 4178;
                           end_column = 56;
                           law_headings =
                             [
                               "Article 37";
                               "Chapitre IV : Calcul des allocations de \
                                logement en secteur accession";
                               "Arrêté du 27 septembre 2019 relatif au calcul \
                                des aides personnelles au logement et de la \
                                prime de déménagement";
                             ];
                         }
                         (date_courante_ >=@ date_of_numbers 2021 10 1))
                     (fun (_ : _) ->
                       if copropriete_ then
                         log_end_call
                           [
                             "CalculAllocationLogementAccessionPropriété";
                             "calcul_plafond_mensualité_d842_6_base";
                           ]
                           (log_variable_definition
                              [
                                "CalculAllocationLogementAccessionPropriété";
                                "calcul_plafond_mensualité_d842_6_base";
                                "output";
                              ]
                              embed_money
                              ((log_begin_call
                                  [
                                    "CalculAllocationLogementAccessionPropriété";
                                    "calcul_plafond_mensualité_d842_6_base";
                                  ]
                                  calcul_plafond_mensualite_d842_6_base_)
                                 (log_variable_definition
                                    [
                                      "CalculAllocationLogementAccessionPropriété";
                                      "calcul_plafond_mensualité_d842_6_base";
                                      "input";
                                    ]
                                    embed_date param_)))
                         *$ decimal_of_string "0.75"
                       else
                         log_end_call
                           [
                             "CalculAllocationLogementAccessionPropriété";
                             "calcul_plafond_mensualité_d842_6_base";
                           ]
                           (log_variable_definition
                              [
                                "CalculAllocationLogementAccessionPropriété";
                                "calcul_plafond_mensualité_d842_6_base";
                                "output";
                              ]
                              embed_money
                              ((log_begin_call
                                  [
                                    "CalculAllocationLogementAccessionPropriété";
                                    "calcul_plafond_mensualité_d842_6_base";
                                  ]
                                  calcul_plafond_mensualite_d842_6_base_)
                                 (log_variable_definition
                                    [
                                      "CalculAllocationLogementAccessionPropriété";
                                      "calcul_plafond_mensualité_d842_6_base";
                                      "input";
                                    ]
                                    embed_date param_)))));
               |]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/arrete_2019-09-27.catala_fr";
                     start_line = 4122;
                     start_column = 14;
                     end_line = 4122;
                     end_column = 46;
                     law_headings =
                       [
                         "Article 33";
                         "Chapitre IV : Calcul des allocations de logement en \
                          secteur accession";
                         "Arrêté du 27 septembre 2019 relatif au calcul des \
                          aides personnelles au logement et de la prime de \
                          déménagement";
                       ];
                   }
                   (date_courante_ >=@ date_of_numbers 2020 1 1))
               (fun (_ : _) ->
                 log_end_call
                   [
                     "CalculAllocationLogementAccessionPropriété";
                     "calcul_plafond_mensualité_d842_6_base";
                   ]
                   (log_variable_definition
                      [
                        "CalculAllocationLogementAccessionPropriété";
                        "calcul_plafond_mensualité_d842_6_base";
                        "output";
                      ]
                      embed_money
                      ((log_begin_call
                          [
                            "CalculAllocationLogementAccessionPropriété";
                            "calcul_plafond_mensualité_d842_6_base";
                          ]
                          calcul_plafond_mensualite_d842_6_base_)
                         (log_variable_definition
                            [
                              "CalculAllocationLogementAccessionPropriété";
                              "calcul_plafond_mensualité_d842_6_base";
                              "input";
                            ]
                            embed_date param_))))
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 878;
                    start_column = 10;
                    end_line = 878;
                    end_column = 26;
                    law_headings =
                      [
                        "Secteur accession à la propriété";
                        "Calcul du montant de l'allocation logement";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 878;
                start_column = 10;
                end_line = 878;
                end_column = 26;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let ressources_menage_arrondies_seuil_ : money =
    log_variable_definition
      [
        "CalculAllocationLogementAccessionPropriété";
        "ressources_ménage_arrondies_seuil";
      ]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 4795;
                       start_column = 5;
                       end_line = 4795;
                       end_column = 28;
                       law_headings =
                         [
                           "Article D842-12";
                           "Section 2 : Accession à la propriété";
                           "Chapitre 2 : Modalités de liquidation et de \
                            versement des allocations de logement";
                           "Titre IV : Allocations de Logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     situation_r822_11_13_17_)
                 (fun (_ : _) -> ressources_menage_arrondies_base_));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4785;
                 start_column = 14;
                 end_line = 4785;
                 end_column = 41;
                 law_headings =
                   [
                     "Article D842-12";
                     "Section 2 : Accession à la propriété";
                     "Chapitre 2 : Modalités de liquidation et de versement \
                      des allocations de logement";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             if
               ressources_menage_arrondies_base_
               <=$ seuil_minimal_ressources_menage_
             then
               money_round
                 ((seuil_minimal_ressources_menage_
                  +$ money_of_cents_string "4999")
                 *$ decimal_of_string "0.01")
               *$ decimal_of_string "100."
             else ressources_menage_arrondies_base_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 857;
                start_column = 10;
                end_line = 857;
                end_column = 15;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let plafond_mensualite_d842_6_ : money =
    log_variable_definition
      [
        "CalculAllocationLogementAccessionPropriété"; "plafond_mensualité_d842_6";
      ]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 4650;
                       start_column = 5;
                       end_line = 4650;
                       end_column = 44;
                       law_headings =
                         [
                           "Article D842-9";
                           "Section 2 : Accession à la propriété";
                           "Chapitre 2 : Modalités de liquidation et de \
                            versement des allocations de logement";
                           "Titre IV : Allocations de Logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     local_habite_premiere_fois_beneficiaire_)
                 (fun (_ : _) ->
                   if
                     log_end_call
                       [
                         "CalculAllocationLogementAccessionPropriété";
                         "calcul_plafond_mensualité_d842_6_avec_copropriété";
                       ]
                       (log_variable_definition
                          [
                            "CalculAllocationLogementAccessionPropriété";
                            "calcul_plafond_mensualité_d842_6_avec_copropriété";
                            "output";
                          ]
                          embed_money
                          ((log_begin_call
                              [
                                "CalculAllocationLogementAccessionPropriété";
                                "calcul_plafond_mensualité_d842_6_avec_copropriété";
                              ]
                              calcul_plafond_mensualite_d842_6_avec_copropriete_)
                             (log_variable_definition
                                [
                                  "CalculAllocationLogementAccessionPropriété";
                                  "calcul_plafond_mensualité_d842_6_avec_copropriété";
                                  "input";
                                ]
                                embed_date date_signature_pret_)))
                     <$ log_end_call
                          [
                            "CalculAllocationLogementAccessionPropriété";
                            "calcul_plafond_mensualité_d842_6_avec_copropriété";
                          ]
                          (log_variable_definition
                             [
                               "CalculAllocationLogementAccessionPropriété";
                               "calcul_plafond_mensualité_d842_6_avec_copropriété";
                               "output";
                             ]
                             embed_money
                             ((log_begin_call
                                 [
                                   "CalculAllocationLogementAccessionPropriété";
                                   "calcul_plafond_mensualité_d842_6_avec_copropriété";
                                 ]
                                 calcul_plafond_mensualite_d842_6_avec_copropriete_)
                                (log_variable_definition
                                   [
                                     "CalculAllocationLogementAccessionPropriété";
                                     "calcul_plafond_mensualité_d842_6_avec_copropriété";
                                     "input";
                                   ]
                                   embed_date date_entree_logement_)))
                   then
                     log_end_call
                       [
                         "CalculAllocationLogementAccessionPropriété";
                         "calcul_plafond_mensualité_d842_6_avec_copropriété";
                       ]
                       (log_variable_definition
                          [
                            "CalculAllocationLogementAccessionPropriété";
                            "calcul_plafond_mensualité_d842_6_avec_copropriété";
                            "output";
                          ]
                          embed_money
                          ((log_begin_call
                              [
                                "CalculAllocationLogementAccessionPropriété";
                                "calcul_plafond_mensualité_d842_6_avec_copropriété";
                              ]
                              calcul_plafond_mensualite_d842_6_avec_copropriete_)
                             (log_variable_definition
                                [
                                  "CalculAllocationLogementAccessionPropriété";
                                  "calcul_plafond_mensualité_d842_6_avec_copropriété";
                                  "input";
                                ]
                                embed_date date_entree_logement_)))
                   else
                     log_end_call
                       [
                         "CalculAllocationLogementAccessionPropriété";
                         "calcul_plafond_mensualité_d842_6_avec_copropriété";
                       ]
                       (log_variable_definition
                          [
                            "CalculAllocationLogementAccessionPropriété";
                            "calcul_plafond_mensualité_d842_6_avec_copropriété";
                            "output";
                          ]
                          embed_money
                          ((log_begin_call
                              [
                                "CalculAllocationLogementAccessionPropriété";
                                "calcul_plafond_mensualité_d842_6_avec_copropriété";
                              ]
                              calcul_plafond_mensualite_d842_6_avec_copropriete_)
                             (log_variable_definition
                                [
                                  "CalculAllocationLogementAccessionPropriété";
                                  "calcul_plafond_mensualité_d842_6_avec_copropriété";
                                  "input";
                                ]
                                embed_date date_signature_pret_)))));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4632;
                 start_column = 14;
                 end_line = 4632;
                 end_column = 39;
                 law_headings =
                   [
                     "Article D842-9";
                     "Section 2 : Accession à la propriété";
                     "Chapitre 2 : Modalités de liquidation et de versement \
                      des allocations de logement";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             log_end_call
               [
                 "CalculAllocationLogementAccessionPropriété";
                 "calcul_plafond_mensualité_d842_6_avec_copropriété";
               ]
               (log_variable_definition
                  [
                    "CalculAllocationLogementAccessionPropriété";
                    "calcul_plafond_mensualité_d842_6_avec_copropriété";
                    "output";
                  ]
                  embed_money
                  ((log_begin_call
                      [
                        "CalculAllocationLogementAccessionPropriété";
                        "calcul_plafond_mensualité_d842_6_avec_copropriété";
                      ]
                      calcul_plafond_mensualite_d842_6_avec_copropriete_)
                     (log_variable_definition
                        [
                          "CalculAllocationLogementAccessionPropriété";
                          "calcul_plafond_mensualité_d842_6_avec_copropriété";
                          "input";
                        ]
                        embed_date date_signature_pret_))))
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 875;
                start_column = 11;
                end_line = 875;
                end_column = 36;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_ : money
      =
    try
      log_variable_definition
        [
          "CalculAllocationLogementAccessionPropriété";
          "calcul_équivalence_loyer_minimale.ressources_ménage_arrondies";
        ]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4499;
                 start_column = 14;
                 end_line = 4499;
                 end_column = 75;
                 law_headings =
                   [
                     "Article D842-6";
                     "Section 2 : Accession à la propriété";
                     "Chapitre 2 : Modalités de liquidation et de versement \
                      des allocations de logement";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> ressources_menage_arrondies_seuil_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 613;
             start_column = 10;
             end_line = 613;
             end_column = 37;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_ : bool =
    try
      log_variable_definition
        [
          "CalculAllocationLogementAccessionPropriété";
          "calcul_équivalence_loyer_minimale.condition_2_du_832_25";
        ]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4498;
                 start_column = 14;
                 end_line = 4498;
                 end_column = 69;
                 law_headings =
                   [
                     "Article D842-6";
                     "Section 2 : Accession à la propriété";
                     "Chapitre 2 : Modalités de liquidation et de versement \
                      des allocations de logement";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> true))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 614;
             start_column = 10;
             end_line = 614;
             end_column = 31;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_ : decimal =
    try
      log_variable_definition
        [
          "CalculAllocationLogementAccessionPropriété";
          "calcul_équivalence_loyer_minimale.n_nombre_parts_d832_25";
        ]
        embed_decimal
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4501;
                 start_column = 14;
                 end_line = 4501;
                 end_column = 70;
                 law_headings =
                   [
                     "Article D842-6";
                     "Section 2 : Accession à la propriété";
                     "Chapitre 2 : Modalités de liquidation et de versement \
                      des allocations de logement";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> calcul_nombre_parts_dot_n_nombre_parts_d832_11_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 615;
             start_column = 10;
             end_line = 615;
             end_column = 32;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : CalculEquivalenceLoyerMinimaleOut.t =
    log_end_call
      [
        "CalculAllocationLogementAccessionPropriété";
        "calcul_équivalence_loyer_minimale";
        "CalculÉquivalenceLoyerMinimale";
      ]
      ((log_begin_call
          [
            "CalculAllocationLogementAccessionPropriété";
            "calcul_équivalence_loyer_minimale";
            "CalculÉquivalenceLoyerMinimale";
          ]
          calcul_equivalence_loyer_minimale)
         {
           CalculEquivalenceLoyerMinimaleIn.ressources_menage_arrondies_in =
             calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_;
           CalculEquivalenceLoyerMinimaleIn.condition_2_du_832_25_in =
             calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_;
           CalculEquivalenceLoyerMinimaleIn.n_nombre_parts_d832_25_in =
             calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_;
         })
  in
  let calcul_equivalence_loyer_minimale_dot_montant_ : money =
    result_.CalculEquivalenceLoyerMinimaleOut.montant_out
  in
  let calcul_apl_logement_foyer_dot_mode_occupation_ : ModeOccupation.t =
    try
      log_variable_definition
        [
          "CalculAllocationLogementAccessionPropriété";
          "calcul_apl_logement_foyer.mode_occupation";
        ]
        embed_mode_occupation
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 908;
                 start_column = 14;
                 end_line = 908;
                 end_column = 55;
                 law_headings =
                   [
                     "Secteur accession à la propriété";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) ->
             ModeOccupation.ResidentLogementFoyer
               {
                 LogementFoyer.type_user = TypeLogementFoyer.ResidenceSociale ();
                 LogementFoyer.date_conventionnement = date_of_numbers 2022 1 1;
                 LogementFoyer.location =
                   {
                     Location.bailleur =
                       {
                         Bailleur.type_bailleur = TypeBailleur.BailleurSocial ();
                         Bailleur.respecte_convention_titre_V = true;
                         Bailleur.respecte_convention_titre_II = true;
                         Bailleur.construit_ameliore_conditions_l831_1_4 = true;
                         Bailleur
                         .acquisition_aides_etat_pret_titre_II_ou_livre_III =
                           true;
                       };
                   };
                 LogementFoyer.remplit_conditions_r832_21 = false;
                 LogementFoyer.construit_application_loi_1957_12_III = false;
               }))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 632;
             start_column = 10;
             end_line = 632;
             end_column = 25;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_logement_foyer_dot_ressources_menage_arrondies_ : money =
    try
      log_variable_definition
        [
          "CalculAllocationLogementAccessionPropriété";
          "calcul_apl_logement_foyer.ressources_ménage_arrondies";
        ]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 931;
                 start_column = 14;
                 end_line = 931;
                 end_column = 67;
                 law_headings =
                   [
                     "Secteur accession à la propriété";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> ressources_menage_arrondies_seuil_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 633;
             start_column = 10;
             end_line = 633;
             end_column = 37;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_logement_foyer_dot_nombre_personnes_a_charge_ : integer =
    try
      log_variable_definition
        [
          "CalculAllocationLogementAccessionPropriété";
          "calcul_apl_logement_foyer.nombre_personnes_à_charge";
        ]
        embed_integer
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 933;
                 start_column = 14;
                 end_line = 933;
                 end_column = 65;
                 law_headings =
                   [
                     "Secteur accession à la propriété";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> nombre_personnes_a_charge_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 634;
             start_column = 10;
             end_line = 634;
             end_column = 35;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_logement_foyer_dot_situation_familiale_calcul_apl_ :
      SituationFamilialeCalculAPL.t =
    try
      log_variable_definition
        [
          "CalculAllocationLogementAccessionPropriété";
          "calcul_apl_logement_foyer.situation_familiale_calcul_apl";
        ]
        embed_situation_familiale_calcul_a_p_l
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 935;
                 start_column = 14;
                 end_line = 935;
                 end_column = 70;
                 law_headings =
                   [
                     "Secteur accession à la propriété";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> situation_familiale_calcul_apl_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 635;
             start_column = 10;
             end_line = 635;
             end_column = 40;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_logement_foyer_dot_zone_ : ZoneDHabitation.t =
    try
      log_variable_definition
        [
          "CalculAllocationLogementAccessionPropriété";
          "calcul_apl_logement_foyer.zone";
        ]
        embed_zone_d_habitation
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 937;
                 start_column = 14;
                 end_line = 937;
                 end_column = 44;
                 law_headings =
                   [
                     "Secteur accession à la propriété";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> zone_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 636;
             start_column = 10;
             end_line = 636;
             end_column = 14;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_logement_foyer_dot_date_courante_ : date =
    try
      log_variable_definition
        [
          "CalculAllocationLogementAccessionPropriété";
          "calcul_apl_logement_foyer.date_courante";
        ]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 939;
                 start_column = 14;
                 end_line = 939;
                 end_column = 53;
                 law_headings =
                   [
                     "Secteur accession à la propriété";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 637;
             start_column = 10;
             end_line = 637;
             end_column = 23;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_logement_foyer_dot_redevance_ : money =
    try
      log_variable_definition
        [
          "CalculAllocationLogementAccessionPropriété";
          "calcul_apl_logement_foyer.redevance";
        ]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 929;
                 start_column = 14;
                 end_line = 929;
                 end_column = 49;
                 law_headings =
                   [
                     "Secteur accession à la propriété";
                     "Calcul du montant de l'allocation logement";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> money_of_cents_string "0"))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 638;
             start_column = 10;
             end_line = 638;
             end_column = 19;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_apl_logement_foyer_dot_condition_2_du_832_25_ : unit -> bool =
   fun (_ : unit) ->
    log_variable_definition
      [
        "CalculAllocationLogementAccessionPropriété";
        "calcul_apl_logement_foyer.condition_2_du_832_25";
      ]
      embed_bool
      (handle_default [||]
         (fun (_ : _) ->
           log_decision_taken
             {
               filename =
                 "examples/aides_logement/code_construction_reglementaire.catala_fr";
               start_line = 4458;
               start_column = 14;
               end_line = 4458;
               end_column = 61;
               law_headings =
                 [
                   "Article D842-6";
                   "Section 2 : Accession à la propriété";
                   "Chapitre 2 : Modalités de liquidation et de versement des \
                    allocations de logement";
                   "Titre IV : Allocations de Logement";
                   "Livre VIII : Aides personnelles au logement";
                   "Partie réglementaire";
                   "Code de la construction et de l'habitation";
                 ];
             }
             true)
         (fun (_ : _) -> true))
  in
  let calcul_apl_logement_foyer_dot_n_nombre_parts_d832_25_ : unit -> decimal =
   fun (_ : unit) ->
    log_variable_definition
      [
        "CalculAllocationLogementAccessionPropriété";
        "calcul_apl_logement_foyer.n_nombre_parts_d832_25";
      ]
      embed_decimal
      (handle_default [||]
         (fun (_ : _) ->
           log_decision_taken
             {
               filename =
                 "examples/aides_logement/code_construction_reglementaire.catala_fr";
               start_line = 4465;
               start_column = 14;
               end_line = 4465;
               end_column = 62;
               law_headings =
                 [
                   "Article D842-6";
                   "Section 2 : Accession à la propriété";
                   "Chapitre 2 : Modalités de liquidation et de versement des \
                    allocations de logement";
                   "Titre IV : Allocations de Logement";
                   "Livre VIII : Aides personnelles au logement";
                   "Partie réglementaire";
                   "Code de la construction et de l'habitation";
                 ];
             }
             true)
         (fun (_ : _) -> calcul_nombre_parts_dot_n_nombre_parts_d832_11_))
  in
  let result_ : CalculAidePersonnaliseeLogementFoyerOut.t =
    log_end_call
      [
        "CalculAllocationLogementAccessionPropriété";
        "calcul_apl_logement_foyer";
        "CalculAidePersonnaliséeLogementFoyer";
      ]
      ((log_begin_call
          [
            "CalculAllocationLogementAccessionPropriété";
            "calcul_apl_logement_foyer";
            "CalculAidePersonnaliséeLogementFoyer";
          ]
          calcul_aide_personnalisee_logement_foyer)
         {
           CalculAidePersonnaliseeLogementFoyerIn.mode_occupation_in =
             calcul_apl_logement_foyer_dot_mode_occupation_;
           CalculAidePersonnaliseeLogementFoyerIn.ressources_menage_arrondies_in =
             calcul_apl_logement_foyer_dot_ressources_menage_arrondies_;
           CalculAidePersonnaliseeLogementFoyerIn.nombre_personnes_a_charge_in =
             calcul_apl_logement_foyer_dot_nombre_personnes_a_charge_;
           CalculAidePersonnaliseeLogementFoyerIn
           .situation_familiale_calcul_apl_in =
             calcul_apl_logement_foyer_dot_situation_familiale_calcul_apl_;
           CalculAidePersonnaliseeLogementFoyerIn.zone_in =
             calcul_apl_logement_foyer_dot_zone_;
           CalculAidePersonnaliseeLogementFoyerIn.date_courante_in =
             calcul_apl_logement_foyer_dot_date_courante_;
           CalculAidePersonnaliseeLogementFoyerIn.redevance_in =
             calcul_apl_logement_foyer_dot_redevance_;
           CalculAidePersonnaliseeLogementFoyerIn.condition_2_du_832_25_in =
             calcul_apl_logement_foyer_dot_condition_2_du_832_25_;
           CalculAidePersonnaliseeLogementFoyerIn.n_nombre_parts_d832_25_in =
             calcul_apl_logement_foyer_dot_n_nombre_parts_d832_25_;
         })
  in
  let calcul_apl_logement_foyer_dot_coefficient_multiplicateur_d832_25_ : money
      =
    result_
      .CalculAidePersonnaliseeLogementFoyerOut
       .coefficient_multiplicateur_d832_25_out
  in
  let calcul_apl_logement_foyer_dot_coefficient_r_d832_25_ : money =
    result_.CalculAidePersonnaliseeLogementFoyerOut.coefficient_r_d832_25_out
  in
  let calcul_apl_logement_foyer_dot_n_nombre_parts_d832_25_ : decimal =
    result_.CalculAidePersonnaliseeLogementFoyerOut.n_nombre_parts_d832_25_out
  in
  let calcul_apl_logement_foyer_dot_equivalence_loyer_eligible_ : money =
    result_
      .CalculAidePersonnaliseeLogementFoyerOut.equivalence_loyer_eligible_out
  in
  let calcul_apl_logement_foyer_dot_plafond_equivalence_loyer_eligible_ : money
      =
    result_
      .CalculAidePersonnaliseeLogementFoyerOut
       .plafond_equivalence_loyer_eligible_out
  in
  let calcul_apl_logement_foyer_dot_equivalence_loyer_minimale_ : money =
    result_
      .CalculAidePersonnaliseeLogementFoyerOut.equivalence_loyer_minimale_out
  in
  let calcul_apl_logement_foyer_dot_coefficient_prise_en_charge_d832_25_seuil_ :
      decimal =
    result_
      .CalculAidePersonnaliseeLogementFoyerOut
       .coefficient_prise_en_charge_d832_25_seuil_out
  in
  let calcul_apl_logement_foyer_dot_aide_finale_formule_ : money =
    result_.CalculAidePersonnaliseeLogementFoyerOut.aide_finale_formule_out
  in
  let calcul_apl_logement_foyer_dot_traitement_aide_finale_montant_minimal_ :
      money -> money =
    result_
      .CalculAidePersonnaliseeLogementFoyerOut
       .traitement_aide_finale_montant_minimal_out
  in
  let seuil_minimal_depense_nette_minimale_ : money =
    log_variable_definition
      [
        "CalculAllocationLogementAccessionPropriété";
        "seuil_minimal_dépense_nette_minimale";
      ]
      embed_money
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 4731;
                       start_column = 7;
                       end_line = 4734;
                       end_column = 45;
                       law_headings =
                         [
                           "Article D842-11";
                           "Section 2 : Accession à la propriété";
                           "Chapitre 2 : Modalités de liquidation et de \
                            versement des allocations de logement";
                           "Titre IV : Allocations de Logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     (((match type_travaux_logement_ with
                       | TypeTravauxLogementR8425.ObjectifDecenceLogement _ ->
                         false
                       | TypeTravauxLogementR8425.PrevuDansListeR321_15 _ ->
                         false
                       | TypeTravauxLogementR8425
                         .AgrandirOuRendreHabitableD331_63 _ ->
                         false
                       | TypeTravauxLogementR8425.PasDeTravaux _ -> true)
                      || (match type_travaux_logement_ with
                         | TypeTravauxLogementR8425.ObjectifDecenceLogement _ ->
                           true
                         | TypeTravauxLogementR8425.PrevuDansListeR321_15 _ ->
                           false
                         | TypeTravauxLogementR8425
                           .AgrandirOuRendreHabitableD331_63 _ ->
                           false
                         | TypeTravauxLogementR8425.PasDeTravaux _ -> false)
                      ||
                      match type_travaux_logement_ with
                      | TypeTravauxLogementR8425.ObjectifDecenceLogement _ ->
                        false
                      | TypeTravauxLogementR8425.PrevuDansListeR321_15 _ ->
                        false
                      | TypeTravauxLogementR8425
                        .AgrandirOuRendreHabitableD331_63 _ ->
                        true
                      | TypeTravauxLogementR8425.PasDeTravaux _ -> false)
                     && date_signature_pret_ >=@ date_of_numbers 1999 7 1))
                 (fun (_ : _) ->
                   ressources_menage_arrondies_seuil_ *$ coefficient_d842_11_));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4719;
                 start_column = 14;
                 end_line = 4719;
                 end_column = 50;
                 law_headings =
                   [
                     "Article D842-11";
                     "Section 2 : Accession à la propriété";
                     "Chapitre 2 : Modalités de liquidation et de versement \
                      des allocations de logement";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> montant_forfaitaire_d842_11_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 880;
                start_column = 11;
                end_line = 880;
                end_column = 47;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let mensualite_eligible_ : money =
    log_variable_definition
      ["CalculAllocationLogementAccessionPropriété"; "mensualité_éligible"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4479;
                 start_column = 14;
                 end_line = 4479;
                 end_column = 33;
                 law_headings =
                   [
                     "Article D842-6";
                     "Section 2 : Accession à la propriété";
                     "Chapitre 2 : Modalités de liquidation et de versement \
                      des allocations de logement";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             if mensualite_principale_ >$ plafond_mensualite_d842_6_ then
               plafond_mensualite_d842_6_
             else mensualite_principale_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 871;
                start_column = 11;
                end_line = 871;
                end_column = 30;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let mensualite_minimale_ : money =
    log_variable_definition
      ["CalculAllocationLogementAccessionPropriété"; "mensualité_minimale"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4494;
                 start_column = 14;
                 end_line = 4494;
                 end_column = 33;
                 law_headings =
                   [
                     "Article D842-6";
                     "Section 2 : Accession à la propriété";
                     "Chapitre 2 : Modalités de liquidation et de versement \
                      des allocations de logement";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> calcul_equivalence_loyer_minimale_dot_montant_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 873;
                start_column = 11;
                end_line = 873;
                end_column = 30;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let coefficient_prise_en_charge_ : decimal =
    log_variable_definition
      [
        "CalculAllocationLogementAccessionPropriété";
        "coefficient_prise_en_charge";
      ]
      embed_decimal
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4468;
                 start_column = 14;
                 end_line = 4468;
                 end_column = 41;
                 law_headings =
                   [
                     "Article D842-6";
                     "Section 2 : Accession à la propriété";
                     "Chapitre 2 : Modalités de liquidation et de versement \
                      des allocations de logement";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             calcul_apl_logement_foyer_dot_coefficient_prise_en_charge_d832_25_seuil_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 874;
                start_column = 11;
                end_line = 874;
                end_column = 38;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let abattement_depense_nette_minimale_ : money -> money =
    log_variable_definition
      [
        "CalculAllocationLogementAccessionPropriété";
        "abattement_dépense_nette_minimale";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 4708;
                     start_column = 14;
                     end_line = 4708;
                     end_column = 47;
                     law_headings =
                       [
                         "Article D842-11";
                         "Section 2 : Accession à la propriété";
                         "Chapitre 2 : Modalités de liquidation et de \
                          versement des allocations de logement";
                         "Titre IV : Allocations de Logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   log_end_call
                     [
                       "CalculAllocationLogementAccessionPropriété";
                       "dépense_nette_minimale";
                     ]
                     (log_variable_definition
                        [
                          "CalculAllocationLogementAccessionPropriété";
                          "dépense_nette_minimale";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAllocationLogementAccessionPropriété";
                              "dépense_nette_minimale";
                            ]
                            depense_nette_minimale_)
                           (log_variable_definition
                              [
                                "CalculAllocationLogementAccessionPropriété";
                                "dépense_nette_minimale";
                                "input";
                              ]
                              embed_money param_)))
                   <$ seuil_minimal_depense_nette_minimale_
                 then
                   seuil_minimal_depense_nette_minimale_
                   -$ log_end_call
                        [
                          "CalculAllocationLogementAccessionPropriété";
                          "dépense_nette_minimale";
                        ]
                        (log_variable_definition
                           [
                             "CalculAllocationLogementAccessionPropriété";
                             "dépense_nette_minimale";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "CalculAllocationLogementAccessionPropriété";
                                 "dépense_nette_minimale";
                               ]
                               depense_nette_minimale_)
                              (log_variable_definition
                                 [
                                   "CalculAllocationLogementAccessionPropriété";
                                   "dépense_nette_minimale";
                                   "input";
                                 ]
                                 embed_money param_)))
                 else money_of_cents_string "0")
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 884;
                    start_column = 11;
                    end_line = 884;
                    end_column = 44;
                    law_headings =
                      [
                        "Secteur accession à la propriété";
                        "Calcul du montant de l'allocation logement";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 884;
                start_column = 11;
                end_line = 884;
                end_column = 44;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let aide_finale_formule_ : money =
    log_variable_definition
      ["CalculAllocationLogementAccessionPropriété"; "aide_finale_formule"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4439;
                 start_column = 14;
                 end_line = 4439;
                 end_column = 33;
                 law_headings =
                   [
                     "Article D842-6";
                     "Section 2 : Accession à la propriété";
                     "Chapitre 2 : Modalités de liquidation et de versement \
                      des allocations de logement";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             (mensualite_eligible_ +$ montant_forfaitaire_charges_
            -$ mensualite_minimale_)
             *$ coefficient_prise_en_charge_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 899;
                start_column = 10;
                end_line = 899;
                end_column = 29;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let traitement_aide_finale_depense_nette_minimale_ : money -> money =
    log_variable_definition
      [
        "CalculAllocationLogementAccessionPropriété";
        "traitement_aide_finale_dépense_nette_minimale";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 4527;
                     start_column = 14;
                     end_line = 4527;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D842-6";
                         "Section 2 : Accession à la propriété";
                         "Chapitre 2 : Modalités de liquidation et de \
                          versement des allocations de logement";
                         "Titre IV : Allocations de Logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   log_end_call
                     [
                       "CalculAllocationLogementAccessionPropriété";
                       "traitement_aide_finale_minoration_forfaitaire";
                     ]
                     (log_variable_definition
                        [
                          "CalculAllocationLogementAccessionPropriété";
                          "traitement_aide_finale_minoration_forfaitaire";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAllocationLogementAccessionPropriété";
                              "traitement_aide_finale_minoration_forfaitaire";
                            ]
                            traitement_aide_finale_minoration_forfaitaire_)
                           (log_variable_definition
                              [
                                "CalculAllocationLogementAccessionPropriété";
                                "traitement_aide_finale_minoration_forfaitaire";
                                "input";
                              ]
                              embed_money param_)))
                   -$ log_end_call
                        [
                          "CalculAllocationLogementAccessionPropriété";
                          "abattement_dépense_nette_minimale";
                        ]
                        (log_variable_definition
                           [
                             "CalculAllocationLogementAccessionPropriété";
                             "abattement_dépense_nette_minimale";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "CalculAllocationLogementAccessionPropriété";
                                 "abattement_dépense_nette_minimale";
                               ]
                               abattement_depense_nette_minimale_)
                              (log_variable_definition
                                 [
                                   "CalculAllocationLogementAccessionPropriété";
                                   "abattement_dépense_nette_minimale";
                                   "input";
                                 ]
                                 embed_money
                                 (log_end_call
                                    [
                                      "CalculAllocationLogementAccessionPropriété";
                                      "traitement_aide_finale_minoration_forfaitaire";
                                    ]
                                    (log_variable_definition
                                       [
                                         "CalculAllocationLogementAccessionPropriété";
                                         "traitement_aide_finale_minoration_forfaitaire";
                                         "output";
                                       ]
                                       embed_money
                                       ((log_begin_call
                                           [
                                             "CalculAllocationLogementAccessionPropriété";
                                             "traitement_aide_finale_minoration_forfaitaire";
                                           ]
                                           traitement_aide_finale_minoration_forfaitaire_)
                                          (log_variable_definition
                                             [
                                               "CalculAllocationLogementAccessionPropriété";
                                               "traitement_aide_finale_minoration_forfaitaire";
                                               "input";
                                             ]
                                             embed_money param_)))))))
                   <$ money_of_cents_string "0"
                 then money_of_cents_string "0"
                 else
                   log_end_call
                     [
                       "CalculAllocationLogementAccessionPropriété";
                       "traitement_aide_finale_minoration_forfaitaire";
                     ]
                     (log_variable_definition
                        [
                          "CalculAllocationLogementAccessionPropriété";
                          "traitement_aide_finale_minoration_forfaitaire";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAllocationLogementAccessionPropriété";
                              "traitement_aide_finale_minoration_forfaitaire";
                            ]
                            traitement_aide_finale_minoration_forfaitaire_)
                           (log_variable_definition
                              [
                                "CalculAllocationLogementAccessionPropriété";
                                "traitement_aide_finale_minoration_forfaitaire";
                                "input";
                              ]
                              embed_money param_)))
                   -$ log_end_call
                        [
                          "CalculAllocationLogementAccessionPropriété";
                          "abattement_dépense_nette_minimale";
                        ]
                        (log_variable_definition
                           [
                             "CalculAllocationLogementAccessionPropriété";
                             "abattement_dépense_nette_minimale";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "CalculAllocationLogementAccessionPropriété";
                                 "abattement_dépense_nette_minimale";
                               ]
                               abattement_depense_nette_minimale_)
                              (log_variable_definition
                                 [
                                   "CalculAllocationLogementAccessionPropriété";
                                   "abattement_dépense_nette_minimale";
                                   "input";
                                 ]
                                 embed_money
                                 (log_end_call
                                    [
                                      "CalculAllocationLogementAccessionPropriété";
                                      "traitement_aide_finale_minoration_forfaitaire";
                                    ]
                                    (log_variable_definition
                                       [
                                         "CalculAllocationLogementAccessionPropriété";
                                         "traitement_aide_finale_minoration_forfaitaire";
                                         "output";
                                       ]
                                       embed_money
                                       ((log_begin_call
                                           [
                                             "CalculAllocationLogementAccessionPropriété";
                                             "traitement_aide_finale_minoration_forfaitaire";
                                           ]
                                           traitement_aide_finale_minoration_forfaitaire_)
                                          (log_variable_definition
                                             [
                                               "CalculAllocationLogementAccessionPropriété";
                                               "traitement_aide_finale_minoration_forfaitaire";
                                               "input";
                                             ]
                                             embed_money param_))))))))
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 903;
                    start_column = 10;
                    end_line = 903;
                    end_column = 32;
                    law_headings =
                      [
                        "Secteur accession à la propriété";
                        "Calcul du montant de l'allocation logement";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 903;
                start_column = 10;
                end_line = 903;
                end_column = 32;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let traitement_aide_finale_contributions_sociales_arrondi_ : money -> money =
    log_variable_definition
      [
        "CalculAllocationLogementAccessionPropriété";
        "traitement_aide_finale_contributions_sociales_arrondi";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 4546;
                     start_column = 14;
                     end_line = 4546;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D842-6";
                         "Section 2 : Accession à la propriété";
                         "Chapitre 2 : Modalités de liquidation et de \
                          versement des allocations de logement";
                         "Titre IV : Allocations de Logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   money_round
                     (log_end_call
                        [
                          "CalculAllocationLogementAccessionPropriété";
                          "traitement_aide_finale_dépense_nette_minimale";
                        ]
                        (log_variable_definition
                           [
                             "CalculAllocationLogementAccessionPropriété";
                             "traitement_aide_finale_dépense_nette_minimale";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "CalculAllocationLogementAccessionPropriété";
                                 "traitement_aide_finale_dépense_nette_minimale";
                               ]
                               traitement_aide_finale_depense_nette_minimale_)
                              (log_variable_definition
                                 [
                                   "CalculAllocationLogementAccessionPropriété";
                                   "traitement_aide_finale_dépense_nette_minimale";
                                   "input";
                                 ]
                                 embed_money param_)))
                     -$ log_end_call
                          [
                            "ContributionsSocialesAidesPersonnelleLogement";
                            "montant";
                          ]
                          (log_variable_definition
                             [
                               "ContributionsSocialesAidesPersonnelleLogement";
                               "montant";
                               "output";
                             ]
                             embed_money
                             ((log_begin_call
                                 [
                                   "ContributionsSocialesAidesPersonnelleLogement";
                                   "montant";
                                 ]
                                 contributions_sociales_dot_montant_)
                                (log_variable_definition
                                   [
                                     "ContributionsSocialesAidesPersonnelleLogement";
                                     "montant";
                                     "input";
                                   ]
                                   embed_money
                                   (log_end_call
                                      [
                                        "CalculAllocationLogementAccessionPropriété";
                                        "traitement_aide_finale_dépense_nette_minimale";
                                      ]
                                      (log_variable_definition
                                         [
                                           "CalculAllocationLogementAccessionPropriété";
                                           "traitement_aide_finale_dépense_nette_minimale";
                                           "output";
                                         ]
                                         embed_money
                                         ((log_begin_call
                                             [
                                               "CalculAllocationLogementAccessionPropriété";
                                               "traitement_aide_finale_dépense_nette_minimale";
                                             ]
                                             traitement_aide_finale_depense_nette_minimale_)
                                            (log_variable_definition
                                               [
                                                 "CalculAllocationLogementAccessionPropriété";
                                                 "traitement_aide_finale_dépense_nette_minimale";
                                                 "input";
                                               ]
                                               embed_money param_)))))))
                     -$ money_of_cents_string "50")
                   +$ log_end_call
                        [
                          "ContributionsSocialesAidesPersonnelleLogement";
                          "montant";
                        ]
                        (log_variable_definition
                           [
                             "ContributionsSocialesAidesPersonnelleLogement";
                             "montant";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "ContributionsSocialesAidesPersonnelleLogement";
                                 "montant";
                               ]
                               contributions_sociales_dot_montant_)
                              (log_variable_definition
                                 [
                                   "ContributionsSocialesAidesPersonnelleLogement";
                                   "montant";
                                   "input";
                                 ]
                                 embed_money
                                 (log_end_call
                                    [
                                      "CalculAllocationLogementAccessionPropriété";
                                      "traitement_aide_finale_dépense_nette_minimale";
                                    ]
                                    (log_variable_definition
                                       [
                                         "CalculAllocationLogementAccessionPropriété";
                                         "traitement_aide_finale_dépense_nette_minimale";
                                         "output";
                                       ]
                                       embed_money
                                       ((log_begin_call
                                           [
                                             "CalculAllocationLogementAccessionPropriété";
                                             "traitement_aide_finale_dépense_nette_minimale";
                                           ]
                                           traitement_aide_finale_depense_nette_minimale_)
                                          (log_variable_definition
                                             [
                                               "CalculAllocationLogementAccessionPropriété";
                                               "traitement_aide_finale_dépense_nette_minimale";
                                               "input";
                                             ]
                                             embed_money param_)))))))
                   >=$ money_of_cents_string "0"
                 then
                   money_round
                     (log_end_call
                        [
                          "CalculAllocationLogementAccessionPropriété";
                          "traitement_aide_finale_dépense_nette_minimale";
                        ]
                        (log_variable_definition
                           [
                             "CalculAllocationLogementAccessionPropriété";
                             "traitement_aide_finale_dépense_nette_minimale";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "CalculAllocationLogementAccessionPropriété";
                                 "traitement_aide_finale_dépense_nette_minimale";
                               ]
                               traitement_aide_finale_depense_nette_minimale_)
                              (log_variable_definition
                                 [
                                   "CalculAllocationLogementAccessionPropriété";
                                   "traitement_aide_finale_dépense_nette_minimale";
                                   "input";
                                 ]
                                 embed_money param_)))
                     -$ log_end_call
                          [
                            "ContributionsSocialesAidesPersonnelleLogement";
                            "montant";
                          ]
                          (log_variable_definition
                             [
                               "ContributionsSocialesAidesPersonnelleLogement";
                               "montant";
                               "output";
                             ]
                             embed_money
                             ((log_begin_call
                                 [
                                   "ContributionsSocialesAidesPersonnelleLogement";
                                   "montant";
                                 ]
                                 contributions_sociales_dot_montant_)
                                (log_variable_definition
                                   [
                                     "ContributionsSocialesAidesPersonnelleLogement";
                                     "montant";
                                     "input";
                                   ]
                                   embed_money
                                   (log_end_call
                                      [
                                        "CalculAllocationLogementAccessionPropriété";
                                        "traitement_aide_finale_dépense_nette_minimale";
                                      ]
                                      (log_variable_definition
                                         [
                                           "CalculAllocationLogementAccessionPropriété";
                                           "traitement_aide_finale_dépense_nette_minimale";
                                           "output";
                                         ]
                                         embed_money
                                         ((log_begin_call
                                             [
                                               "CalculAllocationLogementAccessionPropriété";
                                               "traitement_aide_finale_dépense_nette_minimale";
                                             ]
                                             traitement_aide_finale_depense_nette_minimale_)
                                            (log_variable_definition
                                               [
                                                 "CalculAllocationLogementAccessionPropriété";
                                                 "traitement_aide_finale_dépense_nette_minimale";
                                                 "input";
                                               ]
                                               embed_money param_)))))))
                     -$ money_of_cents_string "50")
                   +$ log_end_call
                        [
                          "ContributionsSocialesAidesPersonnelleLogement";
                          "montant";
                        ]
                        (log_variable_definition
                           [
                             "ContributionsSocialesAidesPersonnelleLogement";
                             "montant";
                             "output";
                           ]
                           embed_money
                           ((log_begin_call
                               [
                                 "ContributionsSocialesAidesPersonnelleLogement";
                                 "montant";
                               ]
                               contributions_sociales_dot_montant_)
                              (log_variable_definition
                                 [
                                   "ContributionsSocialesAidesPersonnelleLogement";
                                   "montant";
                                   "input";
                                 ]
                                 embed_money
                                 (log_end_call
                                    [
                                      "CalculAllocationLogementAccessionPropriété";
                                      "traitement_aide_finale_dépense_nette_minimale";
                                    ]
                                    (log_variable_definition
                                       [
                                         "CalculAllocationLogementAccessionPropriété";
                                         "traitement_aide_finale_dépense_nette_minimale";
                                         "output";
                                       ]
                                       embed_money
                                       ((log_begin_call
                                           [
                                             "CalculAllocationLogementAccessionPropriété";
                                             "traitement_aide_finale_dépense_nette_minimale";
                                           ]
                                           traitement_aide_finale_depense_nette_minimale_)
                                          (log_variable_definition
                                             [
                                               "CalculAllocationLogementAccessionPropriété";
                                               "traitement_aide_finale_dépense_nette_minimale";
                                               "input";
                                             ]
                                             embed_money param_)))))))
                 else money_of_cents_string "0")
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 904;
                    start_column = 10;
                    end_line = 904;
                    end_column = 40;
                    law_headings =
                      [
                        "Secteur accession à la propriété";
                        "Calcul du montant de l'allocation logement";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 904;
                start_column = 10;
                end_line = 904;
                end_column = 40;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let traitement_aide_finale_montant_minimal_ : money -> money =
    log_variable_definition
      [
        "CalculAllocationLogementAccessionPropriété";
        "traitement_aide_finale_montant_minimal";
      ]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 4569;
                     start_column = 14;
                     end_line = 4569;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D842-6";
                         "Section 2 : Accession à la propriété";
                         "Chapitre 2 : Modalités de liquidation et de \
                          versement des allocations de logement";
                         "Titre IV : Allocations de Logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if
                   log_end_call
                     [
                       "CalculAllocationLogementAccessionPropriété";
                       "traitement_aide_finale_contributions_sociales_arrondi";
                     ]
                     (log_variable_definition
                        [
                          "CalculAllocationLogementAccessionPropriété";
                          "traitement_aide_finale_contributions_sociales_arrondi";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAllocationLogementAccessionPropriété";
                              "traitement_aide_finale_contributions_sociales_arrondi";
                            ]
                            traitement_aide_finale_contributions_sociales_arrondi_)
                           (log_variable_definition
                              [
                                "CalculAllocationLogementAccessionPropriété";
                                "traitement_aide_finale_contributions_sociales_arrondi";
                                "input";
                              ]
                              embed_money param_)))
                   <$ montant_minimal_aide_d842_6_
                 then money_of_cents_string "0"
                 else
                   log_end_call
                     [
                       "CalculAllocationLogementAccessionPropriété";
                       "traitement_aide_finale_contributions_sociales_arrondi";
                     ]
                     (log_variable_definition
                        [
                          "CalculAllocationLogementAccessionPropriété";
                          "traitement_aide_finale_contributions_sociales_arrondi";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAllocationLogementAccessionPropriété";
                              "traitement_aide_finale_contributions_sociales_arrondi";
                            ]
                            traitement_aide_finale_contributions_sociales_arrondi_)
                           (log_variable_definition
                              [
                                "CalculAllocationLogementAccessionPropriété";
                                "traitement_aide_finale_contributions_sociales_arrondi";
                                "input";
                              ]
                              embed_money param_))))
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 905;
                    start_column = 10;
                    end_line = 905;
                    end_column = 25;
                    law_headings =
                      [
                        "Secteur accession à la propriété";
                        "Calcul du montant de l'allocation logement";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 905;
                start_column = 10;
                end_line = 905;
                end_column = 25;
                law_headings =
                  [
                    "Secteur accession à la propriété";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  {
    CalculAllocationLogementAccessionProprieteOut.aide_finale_formule_out =
      aide_finale_formule_;
    CalculAllocationLogementAccessionProprieteOut
    .traitement_aide_finale_montant_minimal_out =
      traitement_aide_finale_montant_minimal_;
  }

let calcul_aide_personnalisee_logement
    (calcul_aide_personnalisee_logement_in :
      CalculAidePersonnaliseeLogementIn.t) :
    CalculAidePersonnaliseeLogementOut.t =
  let mode_occupation_ : ModeOccupation.t =
    calcul_aide_personnalisee_logement_in
      .CalculAidePersonnaliseeLogementIn.mode_occupation_in
  in
  let type_aide_ : TypeAidesPersonnelleLogement.t =
    calcul_aide_personnalisee_logement_in
      .CalculAidePersonnaliseeLogementIn.type_aide_in
  in
  let informations_calcul_ : InformationsCalculAPL.t =
    calcul_aide_personnalisee_logement_in
      .CalculAidePersonnaliseeLogementIn.informations_calcul_in
  in
  let ressources_menage_sans_arrondi_ : money =
    calcul_aide_personnalisee_logement_in
      .CalculAidePersonnaliseeLogementIn.ressources_menage_sans_arrondi_in
  in
  let situation_familiale_ : SituationFamiliale.t =
    calcul_aide_personnalisee_logement_in
      .CalculAidePersonnaliseeLogementIn.situation_familiale_in
  in
  let nombre_personnes_a_charge_ : integer =
    calcul_aide_personnalisee_logement_in
      .CalculAidePersonnaliseeLogementIn.nombre_personnes_a_charge_in
  in
  let zone_ : ZoneDHabitation.t =
    calcul_aide_personnalisee_logement_in
      .CalculAidePersonnaliseeLogementIn.zone_in
  in
  let date_courante_ : date =
    calcul_aide_personnalisee_logement_in
      .CalculAidePersonnaliseeLogementIn.date_courante_in
  in
  let categorie_calcul_apl_ : CategorieCalculAPL.t =
    log_variable_definition
      ["CalculAidePersonnaliséeLogement"; "catégorie_calcul_apl"]
      embed_categorie_calcul_a_p_l
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1416;
                 start_column = 14;
                 end_line = 1416;
                 end_column = 34;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match mode_occupation_ with
             | ModeOccupation.Locataire _ -> CategorieCalculAPL.Location ()
             | ModeOccupation.ResidentLogementFoyer _ ->
               CategorieCalculAPL.LogementFoyer ()
             | ModeOccupation.AccessionProprieteLocalUsageExclusifHabitation _
               ->
               CategorieCalculAPL.AccessionPropriete ()
             | ModeOccupation.SousLocataire _ -> CategorieCalculAPL.Location ()
             | ModeOccupation.LocationAccession _ ->
               CategorieCalculAPL.AccessionPropriete ())
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 762;
                start_column = 11;
                end_line = 762;
                end_column = 31;
                law_headings =
                  [
                    "Tous secteurs";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let ressources_menage_avec_arrondi_ : money =
    log_variable_definition
      ["CalculAidePersonnaliséeLogement"; "ressources_ménage_avec_arrondi"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 2041;
                 start_column = 14;
                 end_line = 2041;
                 end_column = 31;
                 law_headings =
                   [
                     "Article D823-17";
                     "Sous-section 2 : Calcul de l'aide en secteur locatif";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             money_round
               ((ressources_menage_sans_arrondi_ +$ money_of_cents_string "4999")
               *$ decimal_of_string "0.01")
             *$ decimal_of_string "100.")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 756;
                start_column = 10;
                end_line = 756;
                end_column = 22;
                law_headings =
                  [
                    "Tous secteurs";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let situation_familiale_calcul_apl_ : SituationFamilialeCalculAPL.t =
    log_variable_definition
      ["CalculAidePersonnaliséeLogement"; "situation_familiale_calcul_apl"]
      embed_situation_familiale_calcul_a_p_l
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 71;
                 start_column = 14;
                 end_line = 71;
                 end_column = 44;
                 law_headings =
                   [
                     "Article 7";
                     "Chapitre III : Calcul des aides personnelles au logement \
                      en secteur locatif";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) ->
             match situation_familiale_ with
             | SituationFamiliale.Celibataire _ ->
               SituationFamilialeCalculAPL.PersonneSeule ()
             | SituationFamiliale.Maries _ ->
               SituationFamilialeCalculAPL.Couple ()
             | SituationFamiliale.Pacses _ ->
               SituationFamilialeCalculAPL.Couple ()
             | SituationFamiliale.Concubins _ ->
               SituationFamilialeCalculAPL.Couple ()
             | SituationFamiliale.CelibataireSepareDeFait _ ->
               SituationFamilialeCalculAPL.PersonneSeule ()
             | SituationFamiliale.ConcubinageDontSepareDeFait _ ->
               SituationFamilialeCalculAPL.Couple ())
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 763;
                start_column = 11;
                end_line = 763;
                end_column = 41;
                law_headings =
                  [
                    "Tous secteurs";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let accession_propriete_dot_mensualite_principale_ : money =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogement";
          "accession_propriété.mensualité_principale";
        ]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1537;
                 start_column = 14;
                 end_line = 1537;
                 end_column = 55;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif _ -> money_of_cents_string "0"
             | InformationsCalculAPL.InfosLogementFoyer _ ->
               money_of_cents_string "0"
             | InformationsCalculAPL.InfosAccessionPropriete infos_ ->
               infos_
                 .InformationsCalculAPLAccessionPropriete.mensualite_principale))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 689;
             start_column = 10;
             end_line = 689;
             end_column = 31;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_ressources_menage_arrondies_ : money =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogement";
          "accession_propriété.ressources_ménage_arrondies";
        ]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1476;
                 start_column = 14;
                 end_line = 1476;
                 end_column = 61;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> ressources_menage_avec_arrondi_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 690;
             start_column = 10;
             end_line = 690;
             end_column = 37;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_nombre_personnes_a_charge_ : integer =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogement";
          "accession_propriété.nombre_personnes_à_charge";
        ]
        embed_integer
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1482;
                 start_column = 14;
                 end_line = 1482;
                 end_column = 59;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> nombre_personnes_a_charge_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 691;
             start_column = 10;
             end_line = 691;
             end_column = 35;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_situation_familiale_calcul_apl_ :
      SituationFamilialeCalculAPL.t =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogement";
          "accession_propriété.situation_familiale_calcul_apl";
        ]
        embed_situation_familiale_calcul_a_p_l
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1494;
                 start_column = 14;
                 end_line = 1494;
                 end_column = 64;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> situation_familiale_calcul_apl_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 692;
             start_column = 10;
             end_line = 692;
             end_column = 40;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_type_travaux_logement_ :
      TypeTravauxLogementD83215.t =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogement";
          "accession_propriété.type_travaux_logement";
        ]
        embed_type_travaux_logement_d832_15
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1542;
                 start_column = 14;
                 end_line = 1542;
                 end_column = 55;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif _ ->
               TypeTravauxLogementD83215.PasDeTravaux ()
             | InformationsCalculAPL.InfosLogementFoyer _ ->
               TypeTravauxLogementD83215.PasDeTravaux ()
             | InformationsCalculAPL.InfosAccessionPropriete infos_ ->
               infos_
                 .InformationsCalculAPLAccessionPropriete
                  .type_travaux_logement_d832_15))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 693;
             start_column = 10;
             end_line = 693;
             end_column = 31;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_date_signature_pret_ : date =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogement";
          "accession_propriété.date_signature_prêt";
        ]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1548;
                 start_column = 14;
                 end_line = 1548;
                 end_column = 53;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif _ -> date_of_numbers 2010 1 1
             | InformationsCalculAPL.InfosLogementFoyer _ ->
               date_of_numbers 2010 1 1
             | InformationsCalculAPL.InfosAccessionPropriete infos_ ->
               infos_
                 .InformationsCalculAPLAccessionPropriete.date_signature_pret))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 694;
             start_column = 10;
             end_line = 694;
             end_column = 29;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_local_habite_premiere_fois_beneficiaire_ : bool =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogement";
          "accession_propriété.local_habité_première_fois_bénéficiaire";
        ]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1553;
                 start_column = 14;
                 end_line = 1553;
                 end_column = 73;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif _ -> false
             | InformationsCalculAPL.InfosLogementFoyer _ -> false
             | InformationsCalculAPL.InfosAccessionPropriete infos_ ->
               infos_
                 .InformationsCalculAPLAccessionPropriete
                  .local_habite_premiere_fois_beneficiaire))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 695;
             start_column = 10;
             end_line = 695;
             end_column = 49;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_date_entree_logement_ : date =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogement";
          "accession_propriété.date_entrée_logement";
        ]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1559;
                 start_column = 14;
                 end_line = 1559;
                 end_column = 54;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif _ -> date_of_numbers 2010 1 1
             | InformationsCalculAPL.InfosLogementFoyer _ ->
               date_of_numbers 2010 1 1
             | InformationsCalculAPL.InfosAccessionPropriete infos_ ->
               infos_
                 .InformationsCalculAPLAccessionPropriete.date_entree_logement))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 696;
             start_column = 10;
             end_line = 696;
             end_column = 30;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_copropriete_ : bool =
    try
      log_variable_definition
        ["CalculAidePersonnaliséeLogement"; "accession_propriété.copropriété"]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1564;
                 start_column = 14;
                 end_line = 1564;
                 end_column = 45;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif _ -> false
             | InformationsCalculAPL.InfosLogementFoyer _ -> false
             | InformationsCalculAPL.InfosAccessionPropriete infos_ ->
               infos_.InformationsCalculAPLAccessionPropriete.copropriete))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 697;
             start_column = 10;
             end_line = 697;
             end_column = 21;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_situation_r822_11_13_17_ : bool =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogement";
          "accession_propriété.situation_r822_11_13_17";
        ]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1569;
                 start_column = 14;
                 end_line = 1569;
                 end_column = 57;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif _ -> false
             | InformationsCalculAPL.InfosLogementFoyer _ -> false
             | InformationsCalculAPL.InfosAccessionPropriete infos_ ->
               infos_
                 .InformationsCalculAPLAccessionPropriete
                  .situation_r822_11_13_17))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 698;
             start_column = 10;
             end_line = 698;
             end_column = 33;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_zone_ : ZoneDHabitation.t =
    try
      log_variable_definition
        ["CalculAidePersonnaliséeLogement"; "accession_propriété.zone"]
        embed_zone_d_habitation
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1486;
                 start_column = 14;
                 end_line = 1486;
                 end_column = 38;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> zone_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 699;
             start_column = 10;
             end_line = 699;
             end_column = 14;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_type_pret_ : TypePret.t =
    try
      log_variable_definition
        ["CalculAidePersonnaliséeLogement"; "accession_propriété.type_prêt"]
        embed_type_pret
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1574;
                 start_column = 14;
                 end_line = 1574;
                 end_column = 43;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif _ -> TypePret.D331_32 ()
             | InformationsCalculAPL.InfosLogementFoyer _ -> TypePret.D331_32 ()
             | InformationsCalculAPL.InfosAccessionPropriete infos_ ->
               infos_.InformationsCalculAPLAccessionPropriete.type_pret))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 700;
             start_column = 10;
             end_line = 700;
             end_column = 19;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_anciennete_logement_ : NeufOuAncien.t =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogement";
          "accession_propriété.ancienneté_logement";
        ]
        embed_neuf_ou_ancien
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1580;
                 start_column = 14;
                 end_line = 1580;
                 end_column = 53;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif _ -> NeufOuAncien.Neuf ()
             | InformationsCalculAPL.InfosLogementFoyer _ ->
               NeufOuAncien.Neuf ()
             | InformationsCalculAPL.InfosAccessionPropriete infos_ ->
               infos_
                 .InformationsCalculAPLAccessionPropriete.anciennete_logement))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 701;
             start_column = 10;
             end_line = 701;
             end_column = 29;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_date_courante_ : date =
    try
      log_variable_definition
        ["CalculAidePersonnaliséeLogement"; "accession_propriété.date_courante"]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1489;
                 start_column = 14;
                 end_line = 1489;
                 end_column = 47;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 702;
             start_column = 10;
             end_line = 702;
             end_column = 23;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : CalculAidePersonnaliseeLogementAccessionProprieteOut.t =
    log_end_call
      [
        "CalculAidePersonnaliséeLogement";
        "accession_propriété";
        "CalculAidePersonnaliséeLogementAccessionPropriété";
      ]
      ((log_begin_call
          [
            "CalculAidePersonnaliséeLogement";
            "accession_propriété";
            "CalculAidePersonnaliséeLogementAccessionPropriété";
          ]
          calcul_aide_personnalisee_logement_accession_propriete)
         {
           CalculAidePersonnaliseeLogementAccessionProprieteIn
           .mensualite_principale_in =
             accession_propriete_dot_mensualite_principale_;
           CalculAidePersonnaliseeLogementAccessionProprieteIn
           .ressources_menage_arrondies_in =
             accession_propriete_dot_ressources_menage_arrondies_;
           CalculAidePersonnaliseeLogementAccessionProprieteIn
           .nombre_personnes_a_charge_in =
             accession_propriete_dot_nombre_personnes_a_charge_;
           CalculAidePersonnaliseeLogementAccessionProprieteIn
           .situation_familiale_calcul_apl_in =
             accession_propriete_dot_situation_familiale_calcul_apl_;
           CalculAidePersonnaliseeLogementAccessionProprieteIn
           .type_travaux_logement_in =
             accession_propriete_dot_type_travaux_logement_;
           CalculAidePersonnaliseeLogementAccessionProprieteIn
           .date_signature_pret_in =
             accession_propriete_dot_date_signature_pret_;
           CalculAidePersonnaliseeLogementAccessionProprieteIn
           .local_habite_premiere_fois_beneficiaire_in =
             accession_propriete_dot_local_habite_premiere_fois_beneficiaire_;
           CalculAidePersonnaliseeLogementAccessionProprieteIn
           .date_entree_logement_in =
             accession_propriete_dot_date_entree_logement_;
           CalculAidePersonnaliseeLogementAccessionProprieteIn.copropriete_in =
             accession_propriete_dot_copropriete_;
           CalculAidePersonnaliseeLogementAccessionProprieteIn
           .situation_r822_11_13_17_in =
             accession_propriete_dot_situation_r822_11_13_17_;
           CalculAidePersonnaliseeLogementAccessionProprieteIn.zone_in =
             accession_propriete_dot_zone_;
           CalculAidePersonnaliseeLogementAccessionProprieteIn.type_pret_in =
             accession_propriete_dot_type_pret_;
           CalculAidePersonnaliseeLogementAccessionProprieteIn
           .anciennete_logement_in =
             accession_propriete_dot_anciennete_logement_;
           CalculAidePersonnaliseeLogementAccessionProprieteIn.date_courante_in =
             accession_propriete_dot_date_courante_;
         })
  in
  let accession_propriete_dot_mensualite_eligible_ : money =
    result_
      .CalculAidePersonnaliseeLogementAccessionProprieteOut
       .mensualite_eligible_out
  in
  let accession_propriete_dot_mensualite_minimale_ : money =
    result_
      .CalculAidePersonnaliseeLogementAccessionProprieteOut
       .mensualite_minimale_out
  in
  let accession_propriete_dot_coefficient_prise_en_charge_d832_10_seuil_ :
      decimal =
    result_
      .CalculAidePersonnaliseeLogementAccessionProprieteOut
       .coefficient_prise_en_charge_d832_10_seuil_out
  in
  let accession_propriete_dot_aide_finale_formule_ : money =
    result_
      .CalculAidePersonnaliseeLogementAccessionProprieteOut
       .aide_finale_formule_out
  in
  let accession_propriete_dot_traitement_aide_finale_montant_minimal_ :
      money -> money =
    result_
      .CalculAidePersonnaliseeLogementAccessionProprieteOut
       .traitement_aide_finale_montant_minimal_out
  in
  let logement_foyer_dot_mode_occupation_ : ModeOccupation.t =
    try
      log_variable_definition
        ["CalculAidePersonnaliséeLogement"; "logement_foyer.mode_occupation"]
        embed_mode_occupation
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1496;
                 start_column = 14;
                 end_line = 1496;
                 end_column = 44;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> mode_occupation_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 632;
             start_column = 10;
             end_line = 632;
             end_column = 25;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let logement_foyer_dot_ressources_menage_arrondies_ : money =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogement";
          "logement_foyer.ressources_ménage_arrondies";
        ]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1474;
                 start_column = 14;
                 end_line = 1474;
                 end_column = 56;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> ressources_menage_avec_arrondi_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 633;
             start_column = 10;
             end_line = 633;
             end_column = 37;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let logement_foyer_dot_nombre_personnes_a_charge_ : integer =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogement";
          "logement_foyer.nombre_personnes_à_charge";
        ]
        embed_integer
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1480;
                 start_column = 14;
                 end_line = 1480;
                 end_column = 54;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> nombre_personnes_a_charge_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 634;
             start_column = 10;
             end_line = 634;
             end_column = 35;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let logement_foyer_dot_situation_familiale_calcul_apl_ :
      SituationFamilialeCalculAPL.t =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogement";
          "logement_foyer.situation_familiale_calcul_apl";
        ]
        embed_situation_familiale_calcul_a_p_l
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1492;
                 start_column = 14;
                 end_line = 1492;
                 end_column = 59;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> situation_familiale_calcul_apl_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 635;
             start_column = 10;
             end_line = 635;
             end_column = 40;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let logement_foyer_dot_zone_ : ZoneDHabitation.t =
    try
      log_variable_definition
        ["CalculAidePersonnaliséeLogement"; "logement_foyer.zone"]
        embed_zone_d_habitation
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1485;
                 start_column = 14;
                 end_line = 1485;
                 end_column = 33;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> zone_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 636;
             start_column = 10;
             end_line = 636;
             end_column = 14;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let logement_foyer_dot_date_courante_ : date =
    try
      log_variable_definition
        ["CalculAidePersonnaliséeLogement"; "logement_foyer.date_courante"]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1488;
                 start_column = 14;
                 end_line = 1488;
                 end_column = 42;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 637;
             start_column = 10;
             end_line = 637;
             end_column = 23;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let logement_foyer_dot_redevance_ : money =
    try
      log_variable_definition
        ["CalculAidePersonnaliséeLogement"; "logement_foyer.redevance"]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1587;
                 start_column = 14;
                 end_line = 1587;
                 end_column = 38;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif _ -> money_of_cents_string "0"
             | InformationsCalculAPL.InfosLogementFoyer infos_ ->
               infos_.InformationsCalculAPLLogementFoyer.redevance
             | InformationsCalculAPL.InfosAccessionPropriete _ ->
               money_of_cents_string "0"))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 638;
             start_column = 10;
             end_line = 638;
             end_column = 19;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let logement_foyer_dot_condition_2_du_832_25_ : unit -> bool =
   fun (_ : unit) ->
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogement"; "logement_foyer.condition_2_du_832_25";
      ]
      embed_bool (raise EmptyError)
  in
  let logement_foyer_dot_n_nombre_parts_d832_25_ : unit -> decimal =
   fun (_ : unit) ->
    log_variable_definition
      [
        "CalculAidePersonnaliséeLogement";
        "logement_foyer.n_nombre_parts_d832_25";
      ]
      embed_decimal (raise EmptyError)
  in
  let result_ : CalculAidePersonnaliseeLogementFoyerOut.t =
    log_end_call
      [
        "CalculAidePersonnaliséeLogement";
        "logement_foyer";
        "CalculAidePersonnaliséeLogementFoyer";
      ]
      ((log_begin_call
          [
            "CalculAidePersonnaliséeLogement";
            "logement_foyer";
            "CalculAidePersonnaliséeLogementFoyer";
          ]
          calcul_aide_personnalisee_logement_foyer)
         {
           CalculAidePersonnaliseeLogementFoyerIn.mode_occupation_in =
             logement_foyer_dot_mode_occupation_;
           CalculAidePersonnaliseeLogementFoyerIn.ressources_menage_arrondies_in =
             logement_foyer_dot_ressources_menage_arrondies_;
           CalculAidePersonnaliseeLogementFoyerIn.nombre_personnes_a_charge_in =
             logement_foyer_dot_nombre_personnes_a_charge_;
           CalculAidePersonnaliseeLogementFoyerIn
           .situation_familiale_calcul_apl_in =
             logement_foyer_dot_situation_familiale_calcul_apl_;
           CalculAidePersonnaliseeLogementFoyerIn.zone_in =
             logement_foyer_dot_zone_;
           CalculAidePersonnaliseeLogementFoyerIn.date_courante_in =
             logement_foyer_dot_date_courante_;
           CalculAidePersonnaliseeLogementFoyerIn.redevance_in =
             logement_foyer_dot_redevance_;
           CalculAidePersonnaliseeLogementFoyerIn.condition_2_du_832_25_in =
             logement_foyer_dot_condition_2_du_832_25_;
           CalculAidePersonnaliseeLogementFoyerIn.n_nombre_parts_d832_25_in =
             logement_foyer_dot_n_nombre_parts_d832_25_;
         })
  in
  let logement_foyer_dot_coefficient_multiplicateur_d832_25_ : money =
    result_
      .CalculAidePersonnaliseeLogementFoyerOut
       .coefficient_multiplicateur_d832_25_out
  in
  let logement_foyer_dot_coefficient_r_d832_25_ : money =
    result_.CalculAidePersonnaliseeLogementFoyerOut.coefficient_r_d832_25_out
  in
  let logement_foyer_dot_n_nombre_parts_d832_25_ : decimal =
    result_.CalculAidePersonnaliseeLogementFoyerOut.n_nombre_parts_d832_25_out
  in
  let logement_foyer_dot_equivalence_loyer_eligible_ : money =
    result_
      .CalculAidePersonnaliseeLogementFoyerOut.equivalence_loyer_eligible_out
  in
  let logement_foyer_dot_plafond_equivalence_loyer_eligible_ : money =
    result_
      .CalculAidePersonnaliseeLogementFoyerOut
       .plafond_equivalence_loyer_eligible_out
  in
  let logement_foyer_dot_equivalence_loyer_minimale_ : money =
    result_
      .CalculAidePersonnaliseeLogementFoyerOut.equivalence_loyer_minimale_out
  in
  let logement_foyer_dot_coefficient_prise_en_charge_d832_25_seuil_ : decimal =
    result_
      .CalculAidePersonnaliseeLogementFoyerOut
       .coefficient_prise_en_charge_d832_25_seuil_out
  in
  let logement_foyer_dot_aide_finale_formule_ : money =
    result_.CalculAidePersonnaliseeLogementFoyerOut.aide_finale_formule_out
  in
  let logement_foyer_dot_traitement_aide_finale_montant_minimal_ :
      money -> money =
    result_
      .CalculAidePersonnaliseeLogementFoyerOut
       .traitement_aide_finale_montant_minimal_out
  in
  let locatif_dot_loyer_principal_ : money =
    try
      log_variable_definition
        ["CalculAidePersonnaliséeLogement"; "locatif.loyer_principal"]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1499;
                 start_column = 14;
                 end_line = 1499;
                 end_column = 37;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif infos_ ->
               infos_.InformationsCalculAPLLocatif.loyer_principal
             | InformationsCalculAPL.InfosLogementFoyer _ ->
               money_of_cents_string "0"
             | InformationsCalculAPL.InfosAccessionPropriete _ ->
               money_of_cents_string "0"))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 558;
             start_column = 10;
             end_line = 558;
             end_column = 25;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_ressources_menage_arrondies_ : money =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogement";
          "locatif.ressources_ménage_arrondies";
        ]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1473;
                 start_column = 14;
                 end_line = 1473;
                 end_column = 49;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> ressources_menage_avec_arrondi_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 559;
             start_column = 10;
             end_line = 559;
             end_column = 37;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_beneficiaire_aide_adulte_ou_enfant_handicapes_ : bool =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogement";
          "locatif.bénéficiaire_aide_adulte_ou_enfant_handicapés";
        ]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1504;
                 start_column = 14;
                 end_line = 1504;
                 end_column = 67;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif infos_ ->
               infos_
                 .InformationsCalculAPLLocatif
                  .beneficiaire_aide_adulte_ou_enfant_handicapes
             | InformationsCalculAPL.InfosLogementFoyer _ -> false
             | InformationsCalculAPL.InfosAccessionPropriete _ -> false))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 560;
             start_column = 10;
             end_line = 560;
             end_column = 55;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_date_courante_ : date =
    try
      log_variable_definition
        ["CalculAidePersonnaliséeLogement"; "locatif.date_courante"]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1487;
                 start_column = 14;
                 end_line = 1487;
                 end_column = 35;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 562;
             start_column = 10;
             end_line = 562;
             end_column = 23;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_nombre_personnes_a_charge_ : integer =
    try
      log_variable_definition
        ["CalculAidePersonnaliséeLogement"; "locatif.nombre_personnes_à_charge"]
        embed_integer
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1478;
                 start_column = 14;
                 end_line = 1478;
                 end_column = 47;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> nombre_personnes_a_charge_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 563;
             start_column = 10;
             end_line = 563;
             end_column = 35;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_situation_familiale_calcul_apl_ :
      SituationFamilialeCalculAPL.t =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogement";
          "locatif.situation_familiale_calcul_apl";
        ]
        embed_situation_familiale_calcul_a_p_l
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1490;
                 start_column = 14;
                 end_line = 1490;
                 end_column = 52;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> situation_familiale_calcul_apl_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 564;
             start_column = 10;
             end_line = 564;
             end_column = 40;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_zone_ : ZoneDHabitation.t =
    try
      log_variable_definition
        ["CalculAidePersonnaliséeLogement"; "locatif.zone"]
        embed_zone_d_habitation
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1484;
                 start_column = 14;
                 end_line = 1484;
                 end_column = 26;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> zone_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 565;
             start_column = 10;
             end_line = 565;
             end_column = 14;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_logement_est_chambre_ : bool =
    try
      log_variable_definition
        ["CalculAidePersonnaliséeLogement"; "locatif.logement_est_chambre"]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1510;
                 start_column = 14;
                 end_line = 1510;
                 end_column = 42;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif infos_ ->
               infos_.InformationsCalculAPLLocatif.logement_est_chambre
             | InformationsCalculAPL.InfosLogementFoyer _ -> false
             | InformationsCalculAPL.InfosAccessionPropriete _ -> false))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 566;
             start_column = 10;
             end_line = 566;
             end_column = 30;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_agees_ou_handicap_adultes_hebergees_onereux_particuliers_ :
      bool =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogement";
          "locatif.âgées_ou_handicap_adultes_hébergées_onéreux_particuliers";
        ]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1523;
                 start_column = 5;
                 end_line = 1523;
                 end_column = 69;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif infos_ ->
               infos_
                 .InformationsCalculAPLLocatif
                  .agees_ou_handicap_adultes_hebergees_onereux_particuliers
             | InformationsCalculAPL.InfosLogementFoyer _ -> false
             | InformationsCalculAPL.InfosAccessionPropriete _ -> false))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 567;
             start_column = 10;
             end_line = 567;
             end_column = 66;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_type_aide_ : TypeAidesPersonnelleLogement.t =
    try
      log_variable_definition
        ["CalculAidePersonnaliséeLogement"; "locatif.type_aide"]
        embed_type_aides_personnelle_logement
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1530;
                 start_column = 14;
                 end_line = 1530;
                 end_column = 31;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> type_aide_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 569;
             start_column = 10;
             end_line = 569;
             end_column = 19;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_colocation_ : bool =
    try
      log_variable_definition
        ["CalculAidePersonnaliséeLogement"; "locatif.colocation"]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1516;
                 start_column = 14;
                 end_line = 1516;
                 end_column = 32;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif infos_ ->
               infos_.InformationsCalculAPLLocatif.colocation
             | InformationsCalculAPL.InfosLogementFoyer _ -> false
             | InformationsCalculAPL.InfosAccessionPropriete _ -> false))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 570;
             start_column = 10;
             end_line = 570;
             end_column = 20;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_reduction_loyer_solidarite_ : money =
    try
      log_variable_definition
        [
          "CalculAidePersonnaliséeLogement"; "locatif.réduction_loyer_solidarité";
        ]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1531;
                 start_column = 14;
                 end_line = 1531;
                 end_column = 48;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif infos_ ->
               infos_.InformationsCalculAPLLocatif.reduction_loyer_solidarite
             | InformationsCalculAPL.InfosLogementFoyer _ ->
               money_of_cents_string "0"
             | InformationsCalculAPL.InfosAccessionPropriete _ ->
               money_of_cents_string "0"))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 571;
             start_column = 10;
             end_line = 571;
             end_column = 36;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : CalculAidePersonnaliseeLogementLocatifOut.t =
    log_end_call
      [
        "CalculAidePersonnaliséeLogement";
        "locatif";
        "CalculAidePersonnaliséeLogementLocatif";
      ]
      ((log_begin_call
          [
            "CalculAidePersonnaliséeLogement";
            "locatif";
            "CalculAidePersonnaliséeLogementLocatif";
          ]
          calcul_aide_personnalisee_logement_locatif)
         {
           CalculAidePersonnaliseeLogementLocatifIn.loyer_principal_in =
             locatif_dot_loyer_principal_;
           CalculAidePersonnaliseeLogementLocatifIn
           .ressources_menage_arrondies_in =
             locatif_dot_ressources_menage_arrondies_;
           CalculAidePersonnaliseeLogementLocatifIn
           .beneficiaire_aide_adulte_ou_enfant_handicapes_in =
             locatif_dot_beneficiaire_aide_adulte_ou_enfant_handicapes_;
           CalculAidePersonnaliseeLogementLocatifIn.date_courante_in =
             locatif_dot_date_courante_;
           CalculAidePersonnaliseeLogementLocatifIn.nombre_personnes_a_charge_in =
             locatif_dot_nombre_personnes_a_charge_;
           CalculAidePersonnaliseeLogementLocatifIn
           .situation_familiale_calcul_apl_in =
             locatif_dot_situation_familiale_calcul_apl_;
           CalculAidePersonnaliseeLogementLocatifIn.zone_in = locatif_dot_zone_;
           CalculAidePersonnaliseeLogementLocatifIn.logement_est_chambre_in =
             locatif_dot_logement_est_chambre_;
           CalculAidePersonnaliseeLogementLocatifIn
           .agees_ou_handicap_adultes_hebergees_onereux_particuliers_in =
             locatif_dot_agees_ou_handicap_adultes_hebergees_onereux_particuliers_;
           CalculAidePersonnaliseeLogementLocatifIn.type_aide_in =
             locatif_dot_type_aide_;
           CalculAidePersonnaliseeLogementLocatifIn.colocation_in =
             locatif_dot_colocation_;
           CalculAidePersonnaliseeLogementLocatifIn
           .reduction_loyer_solidarite_in =
             locatif_dot_reduction_loyer_solidarite_;
         })
  in
  let locatif_dot_montant_forfaitaire_charges_d823_16_ : money =
    result_
      .CalculAidePersonnaliseeLogementLocatifOut
       .montant_forfaitaire_charges_d823_16_out
  in
  let locatif_dot_plafond_loyer_d823_16_2_ : money =
    result_
      .CalculAidePersonnaliseeLogementLocatifOut.plafond_loyer_d823_16_2_out
  in
  let locatif_dot_participation_minimale_ : money =
    result_.CalculAidePersonnaliseeLogementLocatifOut.participation_minimale_out
  in
  let locatif_dot_taux_composition_familiale_ : decimal =
    result_
      .CalculAidePersonnaliseeLogementLocatifOut.taux_composition_familiale_out
  in
  let locatif_dot_participation_personnelle_ : money =
    result_
      .CalculAidePersonnaliseeLogementLocatifOut.participation_personnelle_out
  in
  let locatif_dot_aide_finale_formule_ : money =
    result_.CalculAidePersonnaliseeLogementLocatifOut.aide_finale_formule_out
  in
  let locatif_dot_traitement_aide_finale_montant_minimal_ : money -> money =
    result_
      .CalculAidePersonnaliseeLogementLocatifOut
       .traitement_aide_finale_montant_minimal_out
  in
  let traitement_aide_finale_ : money -> money =
    log_variable_definition
      ["CalculAidePersonnaliséeLogement"; "traitement_aide_finale"]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 1429;
                     start_column = 14;
                     end_line = 1429;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D823-9";
                         "Section 1 : Calcul, liquidation et versement des \
                          aides";
                         "Chapitre III : Modalités de liquidation et de \
                          versement";
                         "Titre II : Dispositions communes aux aides \
                          personnelles au logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 match categorie_calcul_apl_ with
                 | CategorieCalculAPL.Location _ ->
                   log_end_call
                     [
                       "CalculAidePersonnaliséeLogementLocatif";
                       "traitement_aide_finale_montant_minimal";
                     ]
                     (log_variable_definition
                        [
                          "CalculAidePersonnaliséeLogementLocatif";
                          "traitement_aide_finale_montant_minimal";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAidePersonnaliséeLogementLocatif";
                              "traitement_aide_finale_montant_minimal";
                            ]
                            locatif_dot_traitement_aide_finale_montant_minimal_)
                           (log_variable_definition
                              [
                                "CalculAidePersonnaliséeLogementLocatif";
                                "traitement_aide_finale_montant_minimal";
                                "input";
                              ]
                              embed_money param_)))
                 | CategorieCalculAPL.AccessionPropriete _ ->
                   log_end_call
                     [
                       "CalculAidePersonnaliséeLogementAccessionPropriété";
                       "traitement_aide_finale_montant_minimal";
                     ]
                     (log_variable_definition
                        [
                          "CalculAidePersonnaliséeLogementAccessionPropriété";
                          "traitement_aide_finale_montant_minimal";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAidePersonnaliséeLogementAccessionPropriété";
                              "traitement_aide_finale_montant_minimal";
                            ]
                            accession_propriete_dot_traitement_aide_finale_montant_minimal_)
                           (log_variable_definition
                              [
                                "CalculAidePersonnaliséeLogementAccessionPropriété";
                                "traitement_aide_finale_montant_minimal";
                                "input";
                              ]
                              embed_money param_)))
                 | CategorieCalculAPL.LogementFoyer _ ->
                   log_end_call
                     [
                       "CalculAidePersonnaliséeLogementFoyer";
                       "traitement_aide_finale_montant_minimal";
                     ]
                     (log_variable_definition
                        [
                          "CalculAidePersonnaliséeLogementFoyer";
                          "traitement_aide_finale_montant_minimal";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAidePersonnaliséeLogementFoyer";
                              "traitement_aide_finale_montant_minimal";
                            ]
                            logement_foyer_dot_traitement_aide_finale_montant_minimal_)
                           (log_variable_definition
                              [
                                "CalculAidePersonnaliséeLogementFoyer";
                                "traitement_aide_finale_montant_minimal";
                                "input";
                              ]
                              embed_money param_))))
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 771;
                    start_column = 10;
                    end_line = 771;
                    end_column = 32;
                    law_headings =
                      [
                        "Tous secteurs";
                        "Calcul du montant de l'aide personnalisée au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 771;
                start_column = 10;
                end_line = 771;
                end_column = 32;
                law_headings =
                  [
                    "Tous secteurs";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let aide_finale_formule_ : money =
    log_variable_definition
      ["CalculAidePersonnaliséeLogement"; "aide_finale_formule"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1424;
                 start_column = 14;
                 end_line = 1424;
                 end_column = 33;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match categorie_calcul_apl_ with
             | CategorieCalculAPL.Location _ -> locatif_dot_aide_finale_formule_
             | CategorieCalculAPL.AccessionPropriete _ ->
               accession_propriete_dot_aide_finale_formule_
             | CategorieCalculAPL.LogementFoyer _ ->
               logement_foyer_dot_aide_finale_formule_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 770;
                start_column = 10;
                end_line = 770;
                end_column = 29;
                law_headings =
                  [
                    "Tous secteurs";
                    "Calcul du montant de l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let (_ : unit) =
    if
      try
        if
          match categorie_calcul_apl_ with
          | CategorieCalculAPL.Location _ -> false
          | CategorieCalculAPL.AccessionPropriete _ -> true
          | CategorieCalculAPL.LogementFoyer _ -> false
        then
          match informations_calcul_ with
          | InformationsCalculAPL.InfosLocatif _ -> false
          | InformationsCalculAPL.InfosLogementFoyer _ -> false
          | InformationsCalculAPL.InfosAccessionPropriete _ -> true
        else true
      with EmptyError ->
        raise
          (NoValueProvided
             {
               filename =
                 "examples/aides_logement/code_construction_reglementaire.catala_fr";
               start_line = 1469;
               start_column = 5;
               end_line = 1471;
               end_column = 15;
               law_headings =
                 [
                   "Article D823-9";
                   "Section 1 : Calcul, liquidation et versement des aides";
                   "Chapitre III : Modalités de liquidation et de versement";
                   "Titre II : Dispositions communes aux aides personnelles au \
                    logement";
                   "Livre VIII : Aides personnelles au logement";
                   "Partie réglementaire";
                   "Code de la construction et de l'habitation";
                 ];
             })
    then ()
    else raise AssertionFailed
  in
  let (_ : unit) =
    if
      try
        if
          match categorie_calcul_apl_ with
          | CategorieCalculAPL.Location _ -> false
          | CategorieCalculAPL.AccessionPropriete _ -> false
          | CategorieCalculAPL.LogementFoyer _ -> true
        then
          match informations_calcul_ with
          | InformationsCalculAPL.InfosLocatif _ -> false
          | InformationsCalculAPL.InfosLogementFoyer _ -> true
          | InformationsCalculAPL.InfosAccessionPropriete _ -> false
        else true
      with EmptyError ->
        raise
          (NoValueProvided
             {
               filename =
                 "examples/aides_logement/code_construction_reglementaire.catala_fr";
               start_line = 1465;
               start_column = 5;
               end_line = 1467;
               end_column = 15;
               law_headings =
                 [
                   "Article D823-9";
                   "Section 1 : Calcul, liquidation et versement des aides";
                   "Chapitre III : Modalités de liquidation et de versement";
                   "Titre II : Dispositions communes aux aides personnelles au \
                    logement";
                   "Livre VIII : Aides personnelles au logement";
                   "Partie réglementaire";
                   "Code de la construction et de l'habitation";
                 ];
             })
    then ()
    else raise AssertionFailed
  in
  let (_ : unit) =
    if
      try
        if
          match categorie_calcul_apl_ with
          | CategorieCalculAPL.Location _ -> true
          | CategorieCalculAPL.AccessionPropriete _ -> false
          | CategorieCalculAPL.LogementFoyer _ -> false
        then
          match informations_calcul_ with
          | InformationsCalculAPL.InfosLocatif _ -> true
          | InformationsCalculAPL.InfosLogementFoyer _ -> false
          | InformationsCalculAPL.InfosAccessionPropriete _ -> false
        else true
      with EmptyError ->
        raise
          (NoValueProvided
             {
               filename =
                 "examples/aides_logement/code_construction_reglementaire.catala_fr";
               start_line = 1461;
               start_column = 5;
               end_line = 1463;
               end_column = 15;
               law_headings =
                 [
                   "Article D823-9";
                   "Section 1 : Calcul, liquidation et versement des aides";
                   "Chapitre III : Modalités de liquidation et de versement";
                   "Titre II : Dispositions communes aux aides personnelles au \
                    logement";
                   "Livre VIII : Aides personnelles au logement";
                   "Partie réglementaire";
                   "Code de la construction et de l'habitation";
                 ];
             })
    then ()
    else raise AssertionFailed
  in
  {
    CalculAidePersonnaliseeLogementOut.aide_finale_formule_out =
      aide_finale_formule_;
    CalculAidePersonnaliseeLogementOut.traitement_aide_finale_out =
      traitement_aide_finale_;
  }

let eligibilite_prime_de_demenagement
    (eligibilite_prime_de_demenagement_in : EligibilitePrimeDeDemenagementIn.t)
    : EligibilitePrimeDeDemenagementOut.t =
  let date_emmenagement_ : date =
    eligibilite_prime_de_demenagement_in
      .EligibilitePrimeDeDemenagementIn.date_emmenagement_in
  in
  let menage_ : Menage.t =
    eligibilite_prime_de_demenagement_in
      .EligibilitePrimeDeDemenagementIn.menage_in
  in
  let demandeur_ : Demandeur.t =
    eligibilite_prime_de_demenagement_in
      .EligibilitePrimeDeDemenagementIn.demandeur_in
  in
  let date_courante_ : date =
    eligibilite_prime_de_demenagement_in
      .EligibilitePrimeDeDemenagementIn.date_courante_in
  in
  let depenses_justifiees_reellement_engagees_ : money =
    eligibilite_prime_de_demenagement_in
      .EligibilitePrimeDeDemenagementIn
       .depenses_justifiees_reellement_engagees_in
  in
  let delai_apres_emmenagement_l823_8_2_ : duration =
    log_variable_definition
      ["ÉligibilitéPrimeDeDéménagement"; "délai_après_emménagement_l823_8_2"]
      embed_duration
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 2148;
                 start_column = 14;
                 end_line = 2148;
                 end_column = 47;
                 law_headings =
                   [
                     "Article D823-20";
                     "Section 2 : Prime de déménagement";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> duration_of_numbers 0 6 0)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 486;
                start_column = 11;
                end_line = 486;
                end_column = 44;
                law_headings =
                  [
                    "Éligibilité à la prime de déménagement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let condition_rang_enfant_ : bool =
    log_variable_definition
      ["ÉligibilitéPrimeDeDéménagement"; "condition_rang_enfant"]
      embed_bool
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 2127;
                       start_column = 5;
                       end_line = 2132;
                       end_column = 71;
                       law_headings =
                         [
                           "Article D823-20";
                           "Section 2 : Prime de déménagement";
                           "Chapitre III : Modalités de liquidation et de \
                            versement";
                           "Titre II : Dispositions communes aux aides \
                            personnelles au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     (Array.fold_left
                        (fun (acc_ : integer) (personne_a_charge_ : _) ->
                          if
                            match personne_a_charge_ with
                            | PersonneACharge.EnfantACharge _ -> true
                            | PersonneACharge.AutrePersonneACharge _ -> false
                          then acc_ +! integer_of_string "1"
                          else acc_)
                        (integer_of_string "0")
                        menage_.Menage.personnes_a_charge
                      +! menage_
                           .Menage
                            .nombre_enfants_a_naitre_apres_troisieme_mois_grossesse
                     >=! integer_of_string "3"))
                 (fun (_ : _) -> true));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 483;
                 start_column = 11;
                 end_line = 483;
                 end_column = 32;
                 law_headings =
                   [
                     "Éligibilité à la prime de déménagement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> false)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 483;
                start_column = 11;
                end_line = 483;
                end_column = 32;
                law_headings =
                  [
                    "Éligibilité à la prime de déménagement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let base_mensuelle_allocations_familiales_dot_date_courante_ : date =
    try
      log_variable_definition
        [
          "ÉligibilitéPrimeDeDéménagement";
          "base_mensuelle_allocations_familiales.date_courante";
        ]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 500;
                 start_column = 14;
                 end_line = 500;
                 end_column = 65;
                 law_headings =
                   [
                     "Éligibilité à la prime de déménagement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename =
               "examples/aides_logement/../base_mensuelle_allocations_familiales/bmaf.catala_fr";
             start_line = 5;
             start_column = 10;
             end_line = 5;
             end_column = 23;
             law_headings =
               ["Montant de la base mensuelle des allocations familiales"];
           })
  in
  let result_ : BaseMensuelleAllocationsFamilialesOut.t =
    log_end_call
      [
        "ÉligibilitéPrimeDeDéménagement";
        "base_mensuelle_allocations_familiales";
        "BaseMensuelleAllocationsFamiliales";
      ]
      ((log_begin_call
          [
            "ÉligibilitéPrimeDeDéménagement";
            "base_mensuelle_allocations_familiales";
            "BaseMensuelleAllocationsFamiliales";
          ]
          base_mensuelle_allocations_familiales)
         {
           BaseMensuelleAllocationsFamilialesIn.date_courante_in =
             base_mensuelle_allocations_familiales_dot_date_courante_;
         })
  in
  let base_mensuelle_allocations_familiales_dot_montant_ : money =
    result_.BaseMensuelleAllocationsFamilialesOut.montant_out
  in
  let eligibilite_apl_dot_menage_ : Menage.t =
    try
      log_variable_definition
        ["ÉligibilitéPrimeDeDéménagement"; "éligibilité_apl.ménage"]
        embed_menage
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 496;
                 start_column = 14;
                 end_line = 496;
                 end_column = 36;
                 law_headings =
                   [
                     "Éligibilité à la prime de déménagement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> menage_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 311;
             start_column = 10;
             end_line = 311;
             end_column = 16;
             law_headings =
               [
                 "Éligibilité aux aides personnelles au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let eligibilite_apl_dot_demandeur_ : Demandeur.t =
    try
      log_variable_definition
        ["ÉligibilitéPrimeDeDéménagement"; "éligibilité_apl.demandeur"]
        embed_demandeur
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 497;
                 start_column = 14;
                 end_line = 497;
                 end_column = 39;
                 law_headings =
                   [
                     "Éligibilité à la prime de déménagement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> demandeur_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 312;
             start_column = 10;
             end_line = 312;
             end_column = 19;
             law_headings =
               [
                 "Éligibilité aux aides personnelles au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let eligibilite_apl_dot_date_courante_ : date =
    try
      log_variable_definition
        ["ÉligibilitéPrimeDeDéménagement"; "éligibilité_apl.date_courante"]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 498;
                 start_column = 14;
                 end_line = 498;
                 end_column = 43;
                 law_headings =
                   [
                     "Éligibilité à la prime de déménagement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 313;
             start_column = 17;
             end_line = 313;
             end_column = 30;
             law_headings =
               [
                 "Éligibilité aux aides personnelles au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let eligibilite_apl_dot_condition_logement_residence_principale_ :
      unit -> bool =
   fun (_ : unit) ->
    log_variable_definition
      [
        "ÉligibilitéPrimeDeDéménagement";
        "éligibilité_apl.condition_logement_résidence_principale";
      ]
      embed_bool (raise EmptyError)
  in
  let eligibilite_apl_dot_condition_logement_surface_ : unit -> bool =
   fun (_ : unit) ->
    log_variable_definition
      [
        "ÉligibilitéPrimeDeDéménagement";
        "éligibilité_apl.condition_logement_surface";
      ]
      embed_bool (raise EmptyError)
  in
  let result_ : EligibiliteAidesPersonnelleLogementOut.t =
    log_end_call
      [
        "ÉligibilitéPrimeDeDéménagement";
        "éligibilité_apl";
        "ÉligibilitéAidesPersonnelleLogement";
      ]
      ((log_begin_call
          [
            "ÉligibilitéPrimeDeDéménagement";
            "éligibilité_apl";
            "ÉligibilitéAidesPersonnelleLogement";
          ]
          eligibilite_aides_personnelle_logement)
         {
           EligibiliteAidesPersonnelleLogementIn.menage_in =
             eligibilite_apl_dot_menage_;
           EligibiliteAidesPersonnelleLogementIn.demandeur_in =
             eligibilite_apl_dot_demandeur_;
           EligibiliteAidesPersonnelleLogementIn.date_courante_in =
             eligibilite_apl_dot_date_courante_;
           EligibiliteAidesPersonnelleLogementIn
           .condition_logement_residence_principale_in =
             eligibilite_apl_dot_condition_logement_residence_principale_;
           EligibiliteAidesPersonnelleLogementIn.condition_logement_surface_in =
             eligibilite_apl_dot_condition_logement_surface_;
         })
  in
  let eligibilite_apl_dot_date_courante_ : date =
    result_.EligibiliteAidesPersonnelleLogementOut.date_courante_out
  in
  let eligibilite_apl_dot_eligibilite_ : bool =
    result_.EligibiliteAidesPersonnelleLogementOut.eligibilite_out
  in
  let eligibilite_apl_dot_nombre_personnes_a_charge_prises_en_compte_ : integer
      =
    result_
      .EligibiliteAidesPersonnelleLogementOut
       .nombre_personnes_a_charge_prises_en_compte_out
  in
  let eligibilite_apl_dot_coefficents_enfants_garde_alternee_pris_en_compte_ :
      decimal array =
    result_
      .EligibiliteAidesPersonnelleLogementOut
       .coefficents_enfants_garde_alternee_pris_en_compte_out
  in
  let eligibilite_apl_dot_condition_2_r823_4_ : PersonneACharge.t -> bool =
    result_.EligibiliteAidesPersonnelleLogementOut.condition_2_r823_4_out
  in
  let condition_periode_demenagement_ : bool =
    log_variable_definition
      ["ÉligibilitéPrimeDeDéménagement"; "condition_période_déménagement"]
      embed_bool
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                       start_line = 2136;
                       start_column = 6;
                       end_line = 2144;
                       end_column = 77;
                       law_headings =
                         [
                           "Article D823-20";
                           "Section 2 : Prime de déménagement";
                           "Chapitre III : Modalités de liquidation et de \
                            versement";
                           "Titre II : Dispositions communes aux aides \
                            personnelles au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie réglementaire";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     (match
                        menage_
                          .Menage
                           .date_naissance_troisieme_enfant_ou_dernier_si_plus
                      with
                     | DateNaissanceTroisiemeOuDernierPlusEnfant
                       .MoinsDeTroisEnfants _ ->
                       false
                     | DateNaissanceTroisiemeOuDernierPlusEnfant
                       .PlusDeTroisEnfants date_naissance_ou_grossesse_ -> (
                       match date_naissance_ou_grossesse_ with
                       | DateDeNaissanceOuMoisDeGrossesse.DateDeNaissance
                           date_naissance_ ->
                         date_courante_
                         <=@ first_day_of_month
                               (date_naissance_ +@ duration_of_numbers 2 0 0)
                             +@ duration_of_numbers 0 0 (-1)
                       | DateDeNaissanceOuMoisDeGrossesse
                         .AvantPremierJourMoisCivilTroisiemeMoisDeGrossesse _ ->
                         false
                       | DateDeNaissanceOuMoisDeGrossesse
                         .ApresPremierJourMoisCivilTroisiemeMoisDeGrossesse _ ->
                         true)))
                 (fun (_ : _) -> true));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 484;
                 start_column = 11;
                 end_line = 484;
                 end_column = 41;
                 law_headings =
                   [
                     "Éligibilité à la prime de déménagement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> false)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 484;
                start_column = 11;
                end_line = 484;
                end_column = 41;
                law_headings =
                  [
                    "Éligibilité à la prime de déménagement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let plafond_d823_22_ : money =
    log_variable_definition
      ["ÉligibilitéPrimeDeDéménagement"; "plafond_d823_22"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 4394;
                 start_column = 14;
                 end_line = 4394;
                 end_column = 29;
                 law_headings =
                   [
                     "Article 45";
                     "Chapitre VIII : Prime de déménagement";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) ->
             base_mensuelle_allocations_familiales_dot_montant_
             *$ decimal_of_string "2.4"
             +$
             if
               Array.fold_left
                 (fun (acc_ : integer) (personne_a_charge_ : _) ->
                   if
                     match personne_a_charge_ with
                     | PersonneACharge.EnfantACharge _ -> true
                     | PersonneACharge.AutrePersonneACharge _ -> false
                   then acc_ +! integer_of_string "1"
                   else acc_)
                 (integer_of_string "0") menage_.Menage.personnes_a_charge
               >! integer_of_string "3"
             then
               base_mensuelle_allocations_familiales_dot_montant_
               *$ (decimal_of_integer
                     (Array.fold_left
                        (fun (acc_ : integer) (personne_a_charge_ : _) ->
                          if
                            match personne_a_charge_ with
                            | PersonneACharge.EnfantACharge _ -> true
                            | PersonneACharge.AutrePersonneACharge _ -> false
                          then acc_ +! integer_of_string "1"
                          else acc_)
                        (integer_of_string "0")
                        menage_.Menage.personnes_a_charge
                     -! integer_of_string "3")
                  *& decimal_of_string "0.2")
             else money_of_cents_string "0")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 487;
                start_column = 11;
                end_line = 487;
                end_column = 26;
                law_headings =
                  [
                    "Éligibilité à la prime de déménagement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let eligibilite_logement_ : bool =
    log_variable_definition
      ["ÉligibilitéPrimeDeDéménagement"; "éligibilité_logement"]
      embed_bool
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_legislatif.catala_fr";
                       start_line = 556;
                       start_column = 5;
                       end_line = 559;
                       end_column = 43;
                       law_headings =
                         [
                           "Article L823-8";
                           "Chapitre III : Modalités de liquidation et de \
                            versement";
                           "Titre II : Dispositions communes aux aides \
                            personnelles au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie législative";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     (eligibilite_apl_dot_eligibilite_ && condition_rang_enfant_
                    && condition_periode_demenagement_
                     && eligibilite_apl_dot_date_courante_ -@ date_emmenagement_
                        <=^ delai_apres_emmenagement_l823_8_2_))
                 (fun (_ : _) -> true));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 485;
                 start_column = 11;
                 end_line = 485;
                 end_column = 31;
                 law_headings =
                   [
                     "Éligibilité à la prime de déménagement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> false)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 485;
                start_column = 11;
                end_line = 485;
                end_column = 31;
                law_headings =
                  [
                    "Éligibilité à la prime de déménagement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let montant_prime_demenagement_ : money =
    log_variable_definition
      ["ÉligibilitéPrimeDeDéménagement"; "montant_prime_déménagement"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 2174;
                 start_column = 14;
                 end_line = 2174;
                 end_column = 40;
                 law_headings =
                   [
                     "Article D823-22";
                     "Section 2 : Prime de déménagement";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             if depenses_justifiees_reellement_engagees_ <=$ plafond_d823_22_
             then depenses_justifiees_reellement_engagees_
             else plafond_d823_22_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 493;
                start_column = 10;
                end_line = 493;
                end_column = 36;
                law_headings =
                  [
                    "Éligibilité à la prime de déménagement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  {
    EligibilitePrimeDeDemenagementOut.montant_prime_demenagement_out =
      montant_prime_demenagement_;
  }

let eligibilite_aide_personnalisee_logement
    (eligibilite_aide_personnalisee_logement_in :
      EligibiliteAidePersonnaliseeLogementIn.t) :
    EligibiliteAidePersonnaliseeLogementOut.t =
  let menage_ : Menage.t =
    eligibilite_aide_personnalisee_logement_in
      .EligibiliteAidePersonnaliseeLogementIn.menage_in
  in
  let demandeur_ : Demandeur.t =
    eligibilite_aide_personnalisee_logement_in
      .EligibiliteAidePersonnaliseeLogementIn.demandeur_in
  in
  let date_courante_ : date =
    eligibilite_aide_personnalisee_logement_in
      .EligibiliteAidePersonnaliseeLogementIn.date_courante_in
  in
  let caracteristiques_pret_l831_1_1_ : Pret.t -> bool =
    log_variable_definition
      ["ÉligibilitéAidePersonnaliséeLogement"; "caractéristiques_prêt_l831_1_1"]
      unembeddable
      (try
         fun (param_ : Pret.t) ->
           try
             handle_default
               [|
                 (fun (_ : _) ->
                   handle_default
                     [|
                       (fun (_ : _) ->
                         handle_default
                           [|
                             (fun (_ : _) ->
                               handle_default [||]
                                 (fun (_ : _) ->
                                   log_decision_taken
                                     {
                                       filename =
                                         "examples/aides_logement/code_construction_reglementaire.catala_fr";
                                       start_line = 3085;
                                       start_column = 5;
                                       end_line = 3088;
                                       end_column = 46;
                                       law_headings =
                                         [
                                           "Article R832-7";
                                           "Section 2 : Accession à la \
                                            propriété";
                                           "Chapitre II : Modalités de \
                                            liquidation et de versement de \
                                            l'aide personnalisée au logement";
                                           "Titre III : Aide personnalisée au \
                                            logement";
                                           "Livre VIII : Aides personnelles au \
                                            logement";
                                           "Partie réglementaire";
                                           "Code de la construction et de \
                                            l'habitation";
                                         ];
                                     }
                                     ((match param_.Pret.titulaire_pret with
                                      | TitulairePret.Demandeur _ -> false
                                      | TitulairePret
                                        .VendeurQuandDemandeurAContratLocationAccession
                                          _ ->
                                        true)
                                     && ((match param_.Pret.type_pret with
                                         | TypePret.D331_32 _ -> false
                                         | TypePret.D331_63_64 _ -> false
                                         | TypePret.D331_59_8 _ -> true
                                         | TypePret.D331_76_1 _ -> false
                                         | TypePret.Autre _ -> false)
                                        ||
                                        match param_.Pret.type_pret with
                                        | TypePret.D331_32 _ -> false
                                        | TypePret.D331_63_64 _ -> false
                                        | TypePret.D331_59_8 _ -> false
                                        | TypePret.D331_76_1 _ -> true
                                        | TypePret.Autre _ -> false)))
                                 (fun (_ : _) -> true));
                           |]
                           (fun (_ : _) ->
                             log_decision_taken
                               {
                                 filename =
                                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                                 start_line = 3050;
                                 start_column = 5;
                                 end_line = 3052;
                                 end_column = 47;
                                 law_headings =
                                   [
                                     "Article R832-5";
                                     "Section 2 : Accession à la propriété";
                                     "Chapitre II : Modalités de liquidation \
                                      et de versement de l'aide personnalisée \
                                      au logement";
                                     "Titre III : Aide personnalisée au \
                                      logement";
                                     "Livre VIII : Aides personnelles au \
                                      logement";
                                     "Partie réglementaire";
                                     "Code de la construction et de \
                                      l'habitation";
                                   ];
                               }
                               ((match param_.Pret.titulaire_pret with
                                | TitulairePret.Demandeur _ -> true
                                | TitulairePret
                                  .VendeurQuandDemandeurAContratLocationAccession
                                    _ ->
                                  false)
                               && ((match param_.Pret.type_pret with
                                   | TypePret.D331_32 _ -> true
                                   | TypePret.D331_63_64 _ -> false
                                   | TypePret.D331_59_8 _ -> false
                                   | TypePret.D331_76_1 _ -> false
                                   | TypePret.Autre _ -> false)
                                  ||
                                  match param_.Pret.type_pret with
                                  | TypePret.D331_32 _ -> false
                                  | TypePret.D331_63_64 _ -> true
                                  | TypePret.D331_59_8 _ -> false
                                  | TypePret.D331_76_1 _ -> false
                                  | TypePret.Autre _ -> false)))
                           (fun (_ : _) -> true));
                     |]
                     (fun (_ : _) -> false)
                     (fun (_ : _) -> raise EmptyError));
               |]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename = "examples/aides_logement/prologue.catala_fr";
                     start_line = 392;
                     start_column = 11;
                     end_line = 392;
                     end_column = 41;
                     law_headings =
                       [
                         "Éligibilité à l'aide personnalisée au logement";
                         "Déclarations des champs d'application";
                         "Prologue : aides au logement";
                       ];
                   }
                   true)
               (fun (_ : _) -> false)
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 392;
                    start_column = 11;
                    end_line = 392;
                    end_column = 41;
                    law_headings =
                      [
                        "Éligibilité à l'aide personnalisée au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 392;
                start_column = 11;
                end_line = 392;
                end_column = 41;
                law_headings =
                  [
                    "Éligibilité à l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let caracteristiques_pret_l831_1_6_ : Pret.t -> bool =
    log_variable_definition
      ["ÉligibilitéAidePersonnaliséeLogement"; "caractéristiques_prêt_l831_1_6"]
      unembeddable
      (try
         fun (param_ : Pret.t) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename = "examples/aides_logement/prologue.catala_fr";
                     start_line = 393;
                     start_column = 11;
                     end_line = 393;
                     end_column = 41;
                     law_headings =
                       [
                         "Éligibilité à l'aide personnalisée au logement";
                         "Déclarations des champs d'application";
                         "Prologue : aides au logement";
                       ];
                   }
                   true)
               (fun (_ : _) -> false)
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 393;
                    start_column = 11;
                    end_line = 393;
                    end_column = 41;
                    law_headings =
                      [
                        "Éligibilité à l'aide personnalisée au logement";
                        "Déclarations des champs d'application";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 393;
                start_column = 11;
                end_line = 393;
                end_column = 41;
                law_headings =
                  [
                    "Éligibilité à l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let condition_logement_pret_ : bool =
    log_variable_definition
      ["ÉligibilitéAidePersonnaliséeLogement"; "condition_logement_prêt"]
      embed_bool
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default
                       [|
                         (fun (_ : _) ->
                           handle_default [||]
                             (fun (_ : _) ->
                               log_decision_taken
                                 {
                                   filename =
                                     "examples/aides_logement/code_construction_legislatif.catala_fr";
                                   start_line = 756;
                                   start_column = 5;
                                   end_line = 769;
                                   end_column = 30;
                                   law_headings =
                                     [
                                       "Article L831-2";
                                       "Chapitre Ier : Champ d'application";
                                       "Titre III : Aide personnalisée au \
                                        logement";
                                       "Livre VIII : Aides personnelles au \
                                        logement";
                                       "Partie législative";
                                       "Code de la construction et de \
                                        l'habitation";
                                     ];
                                 }
                                 (match
                                    menage_.Menage.logement
                                      .Logement.mode_occupation
                                  with
                                 | ModeOccupation.Locataire _ -> false
                                 | ModeOccupation.ResidentLogementFoyer _ ->
                                   false
                                 | ModeOccupation
                                   .AccessionProprieteLocalUsageExclusifHabitation
                                     propriete_ ->
                                   propriete_.Proprietaire.pret
                                     .Pret.date_signature
                                   >=@ date_of_numbers 2018 1 1
                                   && propriete_.Proprietaire.pret
                                        .Pret.date_signature
                                      <@ date_of_numbers 2020 1 1
                                   && menage_.Menage.logement
                                        .Logement.est_ancien_l831_2
                                   && menage_.Menage.logement
                                        .Logement
                                         .situe_commune_desequilibre_l831_2
                                 | ModeOccupation.SousLocataire _ -> false
                                 | ModeOccupation.LocationAccession propriete_
                                   ->
                                   propriete_.Proprietaire.pret
                                     .Pret.date_signature
                                   >=@ date_of_numbers 2018 1 1
                                   && propriete_.Proprietaire.pret
                                        .Pret.date_signature
                                      <@ date_of_numbers 2020 1 1
                                   && menage_.Menage.logement
                                        .Logement.est_ancien_l831_2
                                   && menage_.Menage.logement
                                        .Logement
                                         .situe_commune_desequilibre_l831_2))
                             (fun (_ : _) -> true));
                       |]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/code_construction_legislatif.catala_fr";
                             start_line = 737;
                             start_column = 5;
                             end_line = 742;
                             end_column = 30;
                             law_headings =
                               [
                                 "Article L831-2";
                                 "Chapitre Ier : Champ d'application";
                                 "Titre III : Aide personnalisée au logement";
                                 "Livre VIII : Aides personnelles au logement";
                                 "Partie législative";
                                 "Code de la construction et de l'habitation";
                               ];
                           }
                           (match
                              menage_.Menage.logement.Logement.mode_occupation
                            with
                           | ModeOccupation.Locataire _ -> false
                           | ModeOccupation.ResidentLogementFoyer _ -> false
                           | ModeOccupation
                             .AccessionProprieteLocalUsageExclusifHabitation
                               propriete_ ->
                             propriete_.Proprietaire.pret.Pret.date_signature
                             >=@ date_of_numbers 2017 12 31
                           | ModeOccupation.SousLocataire _ -> false
                           | ModeOccupation.LocationAccession propriete_ ->
                             propriete_.Proprietaire.pret.Pret.date_signature
                             >=@ date_of_numbers 2017 12 31))
                       (fun (_ : _) -> false));
                 |]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_legislatif.catala_fr";
                       start_line = 733;
                       start_column = 31;
                       end_line = 733;
                       end_column = 54;
                       law_headings =
                         [
                           "Article L831-2";
                           "Chapitre Ier : Champ d'application";
                           "Titre III : Aide personnalisée au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie législative";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     true)
                 (fun (_ : _) -> true));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 391;
                 start_column = 11;
                 end_line = 391;
                 end_column = 34;
                 law_headings =
                   [
                     "Éligibilité à l'aide personnalisée au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> false)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 391;
                start_column = 11;
                end_line = 391;
                end_column = 34;
                law_headings =
                  [
                    "Éligibilité à l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let eligibilite_commune_dot_menage_ : Menage.t =
    try
      log_variable_definition
        ["ÉligibilitéAidePersonnaliséeLogement"; "éligibilité_commune.ménage"]
        embed_menage
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 404;
                 start_column = 14;
                 end_line = 404;
                 end_column = 40;
                 law_headings =
                   [
                     "Éligibilité à l'aide personnalisée au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> menage_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 311;
             start_column = 10;
             end_line = 311;
             end_column = 16;
             law_headings =
               [
                 "Éligibilité aux aides personnelles au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let eligibilite_commune_dot_demandeur_ : Demandeur.t =
    try
      log_variable_definition
        [
          "ÉligibilitéAidePersonnaliséeLogement"; "éligibilité_commune.demandeur";
        ]
        embed_demandeur
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 405;
                 start_column = 14;
                 end_line = 405;
                 end_column = 43;
                 law_headings =
                   [
                     "Éligibilité à l'aide personnalisée au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> demandeur_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 312;
             start_column = 10;
             end_line = 312;
             end_column = 19;
             law_headings =
               [
                 "Éligibilité aux aides personnelles au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let eligibilite_commune_dot_date_courante_ : date =
    try
      log_variable_definition
        [
          "ÉligibilitéAidePersonnaliséeLogement";
          "éligibilité_commune.date_courante";
        ]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 406;
                 start_column = 14;
                 end_line = 406;
                 end_column = 47;
                 law_headings =
                   [
                     "Éligibilité à l'aide personnalisée au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 313;
             start_column = 17;
             end_line = 313;
             end_column = 30;
             law_headings =
               [
                 "Éligibilité aux aides personnelles au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let eligibilite_commune_dot_condition_logement_residence_principale_ :
      unit -> bool =
   fun (_ : unit) ->
    log_variable_definition
      [
        "ÉligibilitéAidePersonnaliséeLogement";
        "éligibilité_commune.condition_logement_résidence_principale";
      ]
      embed_bool (raise EmptyError)
  in
  let eligibilite_commune_dot_condition_logement_surface_ : unit -> bool =
   fun (_ : unit) ->
    log_variable_definition
      [
        "ÉligibilitéAidePersonnaliséeLogement";
        "éligibilité_commune.condition_logement_surface";
      ]
      embed_bool (raise EmptyError)
  in
  let result_ : EligibiliteAidesPersonnelleLogementOut.t =
    log_end_call
      [
        "ÉligibilitéAidePersonnaliséeLogement";
        "éligibilité_commune";
        "ÉligibilitéAidesPersonnelleLogement";
      ]
      ((log_begin_call
          [
            "ÉligibilitéAidePersonnaliséeLogement";
            "éligibilité_commune";
            "ÉligibilitéAidesPersonnelleLogement";
          ]
          eligibilite_aides_personnelle_logement)
         {
           EligibiliteAidesPersonnelleLogementIn.menage_in =
             eligibilite_commune_dot_menage_;
           EligibiliteAidesPersonnelleLogementIn.demandeur_in =
             eligibilite_commune_dot_demandeur_;
           EligibiliteAidesPersonnelleLogementIn.date_courante_in =
             eligibilite_commune_dot_date_courante_;
           EligibiliteAidesPersonnelleLogementIn
           .condition_logement_residence_principale_in =
             eligibilite_commune_dot_condition_logement_residence_principale_;
           EligibiliteAidesPersonnelleLogementIn.condition_logement_surface_in =
             eligibilite_commune_dot_condition_logement_surface_;
         })
  in
  let eligibilite_commune_dot_date_courante_ : date =
    result_.EligibiliteAidesPersonnelleLogementOut.date_courante_out
  in
  let eligibilite_commune_dot_eligibilite_ : bool =
    result_.EligibiliteAidesPersonnelleLogementOut.eligibilite_out
  in
  let eligibilite_commune_dot_nombre_personnes_a_charge_prises_en_compte_ :
      integer =
    result_
      .EligibiliteAidesPersonnelleLogementOut
       .nombre_personnes_a_charge_prises_en_compte_out
  in
  let eligibilite_commune_dot_coefficents_enfants_garde_alternee_pris_en_compte_
      : decimal array =
    result_
      .EligibiliteAidesPersonnelleLogementOut
       .coefficents_enfants_garde_alternee_pris_en_compte_out
  in
  let eligibilite_commune_dot_condition_2_r823_4_ : PersonneACharge.t -> bool =
    result_.EligibiliteAidesPersonnelleLogementOut.condition_2_r823_4_out
  in
  let condition_logement_bailleur_ : bool =
    log_variable_definition
      ["ÉligibilitéAidePersonnaliséeLogement"; "condition_logement_bailleur"]
      embed_bool
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default
                       [|
                         (fun (_ : _) ->
                           handle_default [||]
                             (fun (_ : _) ->
                               log_decision_taken
                                 {
                                   filename =
                                     "examples/aides_logement/code_construction_legislatif.catala_fr";
                                   start_line = 661;
                                   start_column = 5;
                                   end_line = 671;
                                   end_column = 30;
                                   law_headings =
                                     [
                                       "Article L831-1";
                                       "Chapitre Ier : Champ d'application";
                                       "Titre III : Aide personnalisée au \
                                        logement";
                                       "Livre VIII : Aides personnelles au \
                                        logement";
                                       "Partie législative";
                                       "Code de la construction et de \
                                        l'habitation";
                                     ];
                                 }
                                 (match
                                    menage_.Menage.logement
                                      .Logement.mode_occupation
                                  with
                                 | ModeOccupation.Locataire location_ -> (
                                   match
                                     location_.Location.bailleur
                                       .Bailleur.type_bailleur
                                   with
                                   | TypeBailleur.BailleurSocial _ -> false
                                   | TypeBailleur.BailleurPrive _ ->
                                     location_.Location.bailleur
                                       .Bailleur
                                        .acquisition_aides_etat_pret_titre_II_ou_livre_III
                                     && not
                                          location_.Location.bailleur
                                            .Bailleur
                                             .respecte_convention_titre_V)
                                 | ModeOccupation.ResidentLogementFoyer _ ->
                                   false
                                 | ModeOccupation
                                   .AccessionProprieteLocalUsageExclusifHabitation
                                     _ ->
                                   false
                                 | ModeOccupation.SousLocataire _ -> false
                                 | ModeOccupation.LocationAccession _ -> false))
                             (fun (_ : _) -> false));
                       |]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/code_construction_legislatif.catala_fr";
                             start_line = 684;
                             start_column = 5;
                             end_line = 695;
                             end_column = 30;
                             law_headings =
                               [
                                 "Article L831-1";
                                 "Chapitre Ier : Champ d'application";
                                 "Titre III : Aide personnalisée au logement";
                                 "Livre VIII : Aides personnelles au logement";
                                 "Partie législative";
                                 "Code de la construction et de l'habitation";
                               ];
                           }
                           (match
                              menage_.Menage.logement.Logement.mode_occupation
                            with
                           | ModeOccupation.Locataire location_ -> (
                             match
                               location_.Location.bailleur
                                 .Bailleur.type_bailleur
                             with
                             | TypeBailleur.BailleurSocial _ ->
                               location_.Location.bailleur
                                 .Bailleur
                                  .construit_ameliore_conditions_l831_1_4
                               && (location_.Location.bailleur
                                     .Bailleur.respecte_convention_titre_V
                                 || location_.Location.bailleur
                                      .Bailleur.respecte_convention_titre_II)
                             | TypeBailleur.BailleurPrive _ ->
                               location_.Location.bailleur
                                 .Bailleur
                                  .construit_ameliore_conditions_l831_1_4
                               && (location_.Location.bailleur
                                     .Bailleur.respecte_convention_titre_V
                                 || location_.Location.bailleur
                                      .Bailleur.respecte_convention_titre_II))
                           | ModeOccupation.ResidentLogementFoyer _ -> false
                           | ModeOccupation
                             .AccessionProprieteLocalUsageExclusifHabitation _
                             ->
                             false
                           | ModeOccupation.SousLocataire _ -> false
                           | ModeOccupation.LocationAccession _ -> false))
                       (fun (_ : _) -> true));
                 |]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_legislatif.catala_fr";
                       start_line = 634;
                       start_column = 5;
                       end_line = 641;
                       end_column = 30;
                       law_headings =
                         [
                           "Article L831-1";
                           "Chapitre Ier : Champ d'application";
                           "Titre III : Aide personnalisée au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie législative";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     (match
                        menage_.Menage.logement.Logement.mode_occupation
                      with
                     | ModeOccupation.Locataire location_ -> (
                       match
                         location_.Location.bailleur.Bailleur.type_bailleur
                       with
                       | TypeBailleur.BailleurSocial _ ->
                         location_.Location.bailleur
                           .Bailleur.respecte_convention_titre_V
                       | TypeBailleur.BailleurPrive _ ->
                         location_.Location.bailleur
                           .Bailleur.respecte_convention_titre_II)
                     | ModeOccupation.ResidentLogementFoyer _ -> false
                     | ModeOccupation
                       .AccessionProprieteLocalUsageExclusifHabitation _ ->
                       false
                     | ModeOccupation.SousLocataire _ -> false
                     | ModeOccupation.LocationAccession _ -> false))
                 (fun (_ : _) -> true));
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default
                       [|
                         (fun (_ : _) ->
                           handle_default
                             [|
                               (fun (_ : _) ->
                                 handle_default [||]
                                   (fun (_ : _) ->
                                     log_decision_taken
                                       {
                                         filename =
                                           "examples/aides_logement/code_construction_reglementaire.catala_fr";
                                         start_line = 3758;
                                         start_column = 5;
                                         end_line = 3763;
                                         end_column = 30;
                                         law_headings =
                                           [
                                             "Article R832-21";
                                             "Sous-Section 1 : Conditions \
                                              d'assimilation des \
                                              logements-foyers aux logements à \
                                              usage locatif";
                                             "Section 3 : Logements-foyers";
                                             "Chapitre II : Modalités de \
                                              liquidation et de versement de \
                                              l'aide personnalisée au logement";
                                             "Titre III : Aide personnalisée \
                                              au logement";
                                             "Livre VIII : Aides personnelles \
                                              au logement";
                                             "Partie réglementaire";
                                             "Code de la construction et de \
                                              l'habitation";
                                           ];
                                       }
                                       (match
                                          menage_.Menage.logement
                                            .Logement.mode_occupation
                                        with
                                       | ModeOccupation.Locataire _ -> false
                                       | ModeOccupation.ResidentLogementFoyer
                                           logement_foyer_ ->
                                         logement_foyer_
                                           .LogementFoyer
                                            .remplit_conditions_r832_21
                                       | ModeOccupation
                                         .AccessionProprieteLocalUsageExclusifHabitation
                                           _ ->
                                         false
                                       | ModeOccupation.SousLocataire _ -> false
                                       | ModeOccupation.LocationAccession _ ->
                                         false))
                                   (fun (_ : _) -> true));
                             |]
                             (fun (_ : _) ->
                               log_decision_taken
                                 {
                                   filename =
                                     "examples/aides_logement/code_construction_legislatif.catala_fr";
                                   start_line = 718;
                                   start_column = 5;
                                   end_line = 721;
                                   end_column = 30;
                                   law_headings =
                                     [
                                       "Article L831-1";
                                       "Chapitre Ier : Champ d'application";
                                       "Titre III : Aide personnalisée au \
                                        logement";
                                       "Livre VIII : Aides personnelles au \
                                        logement";
                                       "Partie législative";
                                       "Code de la construction et de \
                                        l'habitation";
                                     ];
                                 }
                                 (match
                                    menage_.Menage.logement
                                      .Logement.mode_occupation
                                  with
                                 | ModeOccupation.Locataire _ -> false
                                 | ModeOccupation.ResidentLogementFoyer _ ->
                                   false
                                 | ModeOccupation
                                   .AccessionProprieteLocalUsageExclusifHabitation
                                     _ ->
                                   false
                                 | ModeOccupation.SousLocataire _ -> false
                                 | ModeOccupation.LocationAccession propriete_
                                   ->
                                   log_end_call
                                     [
                                       "ÉligibilitéAidePersonnaliséeLogement";
                                       "caractéristiques_prêt_l831_1_6";
                                     ]
                                     (log_variable_definition
                                        [
                                          "ÉligibilitéAidePersonnaliséeLogement";
                                          "caractéristiques_prêt_l831_1_6";
                                          "output";
                                        ]
                                        embed_bool
                                        ((log_begin_call
                                            [
                                              "ÉligibilitéAidePersonnaliséeLogement";
                                              "caractéristiques_prêt_l831_1_6";
                                            ]
                                            caracteristiques_pret_l831_1_6_)
                                           (log_variable_definition
                                              [
                                                "ÉligibilitéAidePersonnaliséeLogement";
                                                "caractéristiques_prêt_l831_1_6";
                                                "input";
                                              ]
                                              embed_pret
                                              propriete_.Proprietaire.pret)))))
                             (fun (_ : _) -> true));
                       |]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/code_construction_legislatif.catala_fr";
                             start_line = 613;
                             start_column = 5;
                             end_line = 616;
                             end_column = 30;
                             law_headings =
                               [
                                 "Article L831-1";
                                 "Chapitre Ier : Champ d'application";
                                 "Titre III : Aide personnalisée au logement";
                                 "Livre VIII : Aides personnelles au logement";
                                 "Partie législative";
                                 "Code de la construction et de l'habitation";
                               ];
                           }
                           (match
                              menage_.Menage.logement.Logement.mode_occupation
                            with
                           | ModeOccupation.Locataire _ -> false
                           | ModeOccupation.ResidentLogementFoyer _ -> false
                           | ModeOccupation
                             .AccessionProprieteLocalUsageExclusifHabitation
                               propriete_ ->
                             log_end_call
                               [
                                 "ÉligibilitéAidePersonnaliséeLogement";
                                 "caractéristiques_prêt_l831_1_1";
                               ]
                               (log_variable_definition
                                  [
                                    "ÉligibilitéAidePersonnaliséeLogement";
                                    "caractéristiques_prêt_l831_1_1";
                                    "output";
                                  ]
                                  embed_bool
                                  ((log_begin_call
                                      [
                                        "ÉligibilitéAidePersonnaliséeLogement";
                                        "caractéristiques_prêt_l831_1_1";
                                      ]
                                      caracteristiques_pret_l831_1_1_)
                                     (log_variable_definition
                                        [
                                          "ÉligibilitéAidePersonnaliséeLogement";
                                          "caractéristiques_prêt_l831_1_1";
                                          "input";
                                        ]
                                        embed_pret propriete_.Proprietaire.pret)))
                           | ModeOccupation.SousLocataire _ -> false
                           | ModeOccupation.LocationAccession _ -> false))
                       (fun (_ : _) -> true));
                 |]
                 (fun (_ : _) -> false)
                 (fun (_ : _) -> raise EmptyError));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 390;
                 start_column = 11;
                 end_line = 390;
                 end_column = 38;
                 law_headings =
                   [
                     "Éligibilité à l'aide personnalisée au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> false)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 390;
                start_column = 11;
                end_line = 390;
                end_column = 38;
                law_headings =
                  [
                    "Éligibilité à l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let coefficents_enfants_garde_alternee_pris_en_compte_ : decimal array =
    log_variable_definition
      [
        "ÉligibilitéAidePersonnaliséeLogement";
        "coefficents_enfants_garde_alternée_pris_en_compte";
      ]
      (embed_array embed_decimal)
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 410;
                 start_column = 14;
                 end_line = 410;
                 end_column = 63;
                 law_headings =
                   [
                     "Éligibilité à l'aide personnalisée au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) ->
             eligibilite_commune_dot_coefficents_enfants_garde_alternee_pris_en_compte_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 399;
                start_column = 10;
                end_line = 399;
                end_column = 59;
                law_headings =
                  [
                    "Éligibilité à l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let nombre_personnes_a_charge_prises_en_compte_ : integer =
    log_variable_definition
      [
        "ÉligibilitéAidePersonnaliséeLogement";
        "nombre_personnes_à_charge_prises_en_compte";
      ]
      embed_integer
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 408;
                 start_column = 14;
                 end_line = 408;
                 end_column = 56;
                 law_headings =
                   [
                     "Éligibilité à l'aide personnalisée au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) ->
             eligibilite_commune_dot_nombre_personnes_a_charge_prises_en_compte_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 398;
                start_column = 10;
                end_line = 398;
                end_column = 52;
                law_headings =
                  [
                    "Éligibilité à l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let eligibilite_ : bool =
    log_variable_definition
      ["ÉligibilitéAidePersonnaliséeLogement"; "éligibilité"]
      embed_bool
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_legislatif.catala_fr";
                       start_line = 584;
                       start_column = 5;
                       end_line = 586;
                       end_column = 36;
                       law_headings =
                         [
                           "Chapitre Ier : Champ d'application";
                           "Titre III : Aide personnalisée au logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie législative";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     (condition_logement_bailleur_ && condition_logement_pret_
                    && eligibilite_commune_dot_eligibilite_))
                 (fun (_ : _) -> true));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 397;
                 start_column = 10;
                 end_line = 397;
                 end_column = 21;
                 law_headings =
                   [
                     "Éligibilité à l'aide personnalisée au logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> false)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 397;
                start_column = 10;
                end_line = 397;
                end_column = 21;
                law_headings =
                  [
                    "Éligibilité à l'aide personnalisée au logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  {
    EligibiliteAidePersonnaliseeLogementOut.date_courante_out = date_courante_;
    EligibiliteAidePersonnaliseeLogementOut.eligibilite_out = eligibilite_;
    EligibiliteAidePersonnaliseeLogementOut
    .nombre_personnes_a_charge_prises_en_compte_out =
      nombre_personnes_a_charge_prises_en_compte_;
    EligibiliteAidePersonnaliseeLogementOut
    .coefficents_enfants_garde_alternee_pris_en_compte_out =
      coefficents_enfants_garde_alternee_pris_en_compte_;
  }

let eligibilite_allocation_logement
    (eligibilite_allocation_logement_in : EligibiliteAllocationLogementIn.t) :
    EligibiliteAllocationLogementOut.t =
  let date_courante_ : date =
    eligibilite_allocation_logement_in
      .EligibiliteAllocationLogementIn.date_courante_in
  in
  let menage_ : Menage.t =
    eligibilite_allocation_logement_in.EligibiliteAllocationLogementIn.menage_in
  in
  let demandeur_ : Demandeur.t =
    eligibilite_allocation_logement_in
      .EligibiliteAllocationLogementIn.demandeur_in
  in
  let beneficie_aide_personnalisee_logement_ : bool =
    eligibilite_allocation_logement_in
      .EligibiliteAllocationLogementIn.beneficie_aide_personnalisee_logement_in
  in
  let informations_calcul_ : InformationsCalculAPL.t =
    eligibilite_allocation_logement_in
      .EligibiliteAllocationLogementIn.informations_calcul_in
  in
  let duree_l841_1_3_ : duration =
    log_variable_definition
      ["ÉligibilitéAllocationLogement"; "durée_l841_1_3"]
      embed_duration
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4241;
                 start_column = 14;
                 end_line = 4241;
                 end_column = 28;
                 law_headings =
                   [
                     "Article D841-1";
                     "Chapitre 1 : Champ d'application";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> duration_of_numbers 5 0 0)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 433;
                start_column = 11;
                end_line = 433;
                end_column = 25;
                law_headings =
                  [
                    "Éligibilité aux allocations de logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let prestations_familiales_dot_date_courante_ : date =
    try
      log_variable_definition
        [
          "ÉligibilitéAllocationLogement"; "prestations_familiales.date_courante";
        ]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 450;
                 start_column = 14;
                 end_line = 450;
                 end_column = 50;
                 law_headings =
                   [
                     "Éligibilité aux allocations de logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename =
               "examples/aides_logement/../prestations_familiales/prologue.catala_fr";
             start_line = 46;
             start_column = 10;
             end_line = 46;
             end_column = 23;
             law_headings = ["Prologue : prestations familiales"];
           })
  in
  let prestations_familiales_dot_prestation_courante_ :
      ElementPrestationsFamiliales.t =
    try
      log_variable_definition
        [
          "ÉligibilitéAllocationLogement";
          "prestations_familiales.prestation_courante";
        ]
        embed_element_prestations_familiales
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 451;
                 start_column = 14;
                 end_line = 451;
                 end_column = 56;
                 law_headings =
                   [
                     "Éligibilité aux allocations de logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) ->
             ElementPrestationsFamiliales.AllocationsFamiliales ()))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename =
               "examples/aides_logement/../prestations_familiales/prologue.catala_fr";
             start_line = 47;
             start_column = 10;
             end_line = 47;
             end_column = 29;
             law_headings = ["Prologue : prestations familiales"];
           })
  in
  let prestations_familiales_dot_residence_ : Collectivite.t =
    try
      log_variable_definition
        ["ÉligibilitéAllocationLogement"; "prestations_familiales.résidence"]
        embed_collectivite
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 455;
                 start_column = 14;
                 end_line = 455;
                 end_column = 46;
                 law_headings =
                   [
                     "Éligibilité aux allocations de logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> Collectivite.Metropole ()))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename =
               "examples/aides_logement/../prestations_familiales/prologue.catala_fr";
             start_line = 48;
             start_column = 10;
             end_line = 48;
             end_column = 19;
             law_headings = ["Prologue : prestations familiales"];
           })
  in
  let result_ : EligibilitePrestationsFamilialesOut.t =
    log_end_call
      [
        "ÉligibilitéAllocationLogement";
        "prestations_familiales";
        "ÉligibilitéPrestationsFamiliales";
      ]
      ((log_begin_call
          [
            "ÉligibilitéAllocationLogement";
            "prestations_familiales";
            "ÉligibilitéPrestationsFamiliales";
          ]
          eligibilite_prestations_familiales)
         {
           EligibilitePrestationsFamilialesIn.date_courante_in =
             prestations_familiales_dot_date_courante_;
           EligibilitePrestationsFamilialesIn.prestation_courante_in =
             prestations_familiales_dot_prestation_courante_;
           EligibilitePrestationsFamilialesIn.residence_in =
             prestations_familiales_dot_residence_;
         })
  in
  let prestations_familiales_dot_droit_ouvert_ :
      EnfantPrestationsFamiliales.t -> bool =
    result_.EligibilitePrestationsFamilialesOut.droit_ouvert_out
  in
  let prestations_familiales_dot_conditions_hors_age_ :
      EnfantPrestationsFamiliales.t -> bool =
    result_.EligibilitePrestationsFamilialesOut.conditions_hors_age_out
  in
  let prestations_familiales_dot_age_l512_3_2_ : integer =
    result_.EligibilitePrestationsFamilialesOut.age_l512_3_2_out
  in
  let prestations_familiales_dot_regime_outre_mer_l751_1_ : bool =
    result_.EligibilitePrestationsFamilialesOut.regime_outre_mer_l751_1_out
  in
  let eligibilite_commune_dot_menage_ : Menage.t =
    try
      log_variable_definition
        ["ÉligibilitéAllocationLogement"; "éligibilité_commune.ménage"]
        embed_menage
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 457;
                 start_column = 14;
                 end_line = 457;
                 end_column = 40;
                 law_headings =
                   [
                     "Éligibilité aux allocations de logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> menage_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 311;
             start_column = 10;
             end_line = 311;
             end_column = 16;
             law_headings =
               [
                 "Éligibilité aux aides personnelles au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let eligibilite_commune_dot_demandeur_ : Demandeur.t =
    try
      log_variable_definition
        ["ÉligibilitéAllocationLogement"; "éligibilité_commune.demandeur"]
        embed_demandeur
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 458;
                 start_column = 14;
                 end_line = 458;
                 end_column = 43;
                 law_headings =
                   [
                     "Éligibilité aux allocations de logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> demandeur_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 312;
             start_column = 10;
             end_line = 312;
             end_column = 19;
             law_headings =
               [
                 "Éligibilité aux aides personnelles au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let eligibilite_commune_dot_date_courante_ : date =
    try
      log_variable_definition
        ["ÉligibilitéAllocationLogement"; "éligibilité_commune.date_courante"]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 459;
                 start_column = 14;
                 end_line = 459;
                 end_column = 47;
                 law_headings =
                   [
                     "Éligibilité aux allocations de logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 313;
             start_column = 17;
             end_line = 313;
             end_column = 30;
             law_headings =
               [
                 "Éligibilité aux aides personnelles au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let eligibilite_commune_dot_condition_logement_residence_principale_ :
      unit -> bool =
   fun (_ : unit) ->
    log_variable_definition
      [
        "ÉligibilitéAllocationLogement";
        "éligibilité_commune.condition_logement_résidence_principale";
      ]
      embed_bool
      (handle_default
         [|
           (fun (_ : _) ->
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 4828;
                     start_column = 9;
                     end_line = 4828;
                     end_column = 68;
                     law_headings =
                       [
                         "Article R842-14";
                         "Section 3 : Logements-foyers";
                         "Chapitre 2 : Modalités de liquidation et de \
                          versement des allocations de logement";
                         "Titre IV : Allocations de Logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   (match menage_.Menage.logement.Logement.mode_occupation with
                   | ModeOccupation.Locataire _ -> false
                   | ModeOccupation.ResidentLogementFoyer logement_foyer_ ->
                     logement_foyer_
                       .LogementFoyer.construit_application_loi_1957_12_III
                   | ModeOccupation
                     .AccessionProprieteLocalUsageExclusifHabitation _ ->
                     false
                   | ModeOccupation.SousLocataire _ -> false
                   | ModeOccupation.LocationAccession _ -> false))
               (fun (_ : _) -> true));
         |]
         (fun (_ : _) ->
           log_decision_taken
             {
               filename = "examples/aides_logement/prologue.catala_fr";
               start_line = 436;
               start_column = 3;
               end_line = 436;
               end_column = 22;
               law_headings =
                 [
                   "Éligibilité aux allocations de logement";
                   "Déclarations des champs d'application";
                   "Prologue : aides au logement";
                 ];
             }
             true)
         (fun (_ : _) -> false))
  in
  let eligibilite_commune_dot_condition_logement_surface_ : unit -> bool =
   fun (_ : unit) ->
    log_variable_definition
      [
        "ÉligibilitéAllocationLogement";
        "éligibilité_commune.condition_logement_surface";
      ]
      embed_bool
      (handle_default
         [|
           (fun (_ : _) ->
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 4829;
                     start_column = 9;
                     end_line = 4829;
                     end_column = 55;
                     law_headings =
                       [
                         "Article R842-14";
                         "Section 3 : Logements-foyers";
                         "Chapitre 2 : Modalités de liquidation et de \
                          versement des allocations de logement";
                         "Titre IV : Allocations de Logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   (match menage_.Menage.logement.Logement.mode_occupation with
                   | ModeOccupation.Locataire _ -> false
                   | ModeOccupation.ResidentLogementFoyer logement_foyer_ ->
                     logement_foyer_
                       .LogementFoyer.construit_application_loi_1957_12_III
                   | ModeOccupation
                     .AccessionProprieteLocalUsageExclusifHabitation _ ->
                     false
                   | ModeOccupation.SousLocataire _ -> false
                   | ModeOccupation.LocationAccession _ -> false))
               (fun (_ : _) -> true));
         |]
         (fun (_ : _) ->
           log_decision_taken
             {
               filename = "examples/aides_logement/prologue.catala_fr";
               start_line = 436;
               start_column = 3;
               end_line = 436;
               end_column = 22;
               law_headings =
                 [
                   "Éligibilité aux allocations de logement";
                   "Déclarations des champs d'application";
                   "Prologue : aides au logement";
                 ];
             }
             true)
         (fun (_ : _) -> false))
  in
  let result_ : EligibiliteAidesPersonnelleLogementOut.t =
    log_end_call
      [
        "ÉligibilitéAllocationLogement";
        "éligibilité_commune";
        "ÉligibilitéAidesPersonnelleLogement";
      ]
      ((log_begin_call
          [
            "ÉligibilitéAllocationLogement";
            "éligibilité_commune";
            "ÉligibilitéAidesPersonnelleLogement";
          ]
          eligibilite_aides_personnelle_logement)
         {
           EligibiliteAidesPersonnelleLogementIn.menage_in =
             eligibilite_commune_dot_menage_;
           EligibiliteAidesPersonnelleLogementIn.demandeur_in =
             eligibilite_commune_dot_demandeur_;
           EligibiliteAidesPersonnelleLogementIn.date_courante_in =
             eligibilite_commune_dot_date_courante_;
           EligibiliteAidesPersonnelleLogementIn
           .condition_logement_residence_principale_in =
             eligibilite_commune_dot_condition_logement_residence_principale_;
           EligibiliteAidesPersonnelleLogementIn.condition_logement_surface_in =
             eligibilite_commune_dot_condition_logement_surface_;
         })
  in
  let eligibilite_commune_dot_date_courante_ : date =
    result_.EligibiliteAidesPersonnelleLogementOut.date_courante_out
  in
  let eligibilite_commune_dot_eligibilite_ : bool =
    result_.EligibiliteAidesPersonnelleLogementOut.eligibilite_out
  in
  let eligibilite_commune_dot_nombre_personnes_a_charge_prises_en_compte_ :
      integer =
    result_
      .EligibiliteAidesPersonnelleLogementOut
       .nombre_personnes_a_charge_prises_en_compte_out
  in
  let eligibilite_commune_dot_coefficents_enfants_garde_alternee_pris_en_compte_
      : decimal array =
    result_
      .EligibiliteAidesPersonnelleLogementOut
       .coefficents_enfants_garde_alternee_pris_en_compte_out
  in
  let eligibilite_commune_dot_condition_2_r823_4_ : PersonneACharge.t -> bool =
    result_.EligibiliteAidesPersonnelleLogementOut.condition_2_r823_4_out
  in
  let eligibilite_allocation_logement_sociale_ : bool =
    log_variable_definition
      [
        "ÉligibilitéAllocationLogement";
        "éligibilité_allocation_logement_sociale";
      ]
      embed_bool
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_legislatif.catala_fr";
                       start_line = 1136;
                       start_column = 5;
                       end_line = 1136;
                       end_column = 73;
                       law_headings =
                         [
                           "Article L841-3";
                           "Chapitre Ier : Champ d'application";
                           "Titre IV : Allocations de logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie législative";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     demandeur_
                       .Demandeur
                        .personne_hebergee_centre_soin_l_L162_22_3_securite_sociale)
                 (fun (_ : _) -> true));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 432;
                 start_column = 11;
                 end_line = 432;
                 end_column = 50;
                 law_headings =
                   [
                     "Éligibilité aux allocations de logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> false)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 432;
                start_column = 11;
                end_line = 432;
                end_column = 50;
                law_headings =
                  [
                    "Éligibilité aux allocations de logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let condition_logement_ : bool =
    log_variable_definition
      ["ÉligibilitéAllocationLogement"; "condition_logement"]
      embed_bool
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default
                       [|
                         (fun (_ : _) ->
                           handle_default
                             [|
                               (fun (_ : _) ->
                                 handle_default [||]
                                   (fun (_ : _) ->
                                     log_decision_taken
                                       {
                                         filename =
                                           "examples/aides_logement/code_construction_reglementaire.catala_fr";
                                         start_line = 4418;
                                         start_column = 5;
                                         end_line = 4426;
                                         end_column = 28;
                                         law_headings =
                                           [
                                             "Article R842-5";
                                             "Section 2 : Accession à la \
                                              propriété";
                                             "Chapitre 2 : Modalités de \
                                              liquidation et de versement des \
                                              allocations de logement";
                                             "Titre IV : Allocations de \
                                              Logement";
                                             "Livre VIII : Aides personnelles \
                                              au logement";
                                             "Partie réglementaire";
                                             "Code de la construction et de \
                                              l'habitation";
                                           ];
                                       }
                                       (match informations_calcul_ with
                                       | InformationsCalculAPL.InfosLocatif _ ->
                                         false
                                       | InformationsCalculAPL
                                         .InfosLogementFoyer _ ->
                                         false
                                       | InformationsCalculAPL
                                         .InfosAccessionPropriete infos_ -> (
                                         match
                                           menage_.Menage.logement
                                             .Logement.mode_occupation
                                         with
                                         | ModeOccupation.Locataire _ -> false
                                         | ModeOccupation.ResidentLogementFoyer
                                             _ ->
                                           false
                                         | ModeOccupation
                                           .AccessionProprieteLocalUsageExclusifHabitation
                                             proprietaire_ -> (
                                           (match
                                              proprietaire_.Proprietaire.pret
                                                .Pret.titulaire_pret
                                            with
                                           | TitulairePret.Demandeur _ -> true
                                           | TitulairePret
                                             .VendeurQuandDemandeurAContratLocationAccession
                                               _ ->
                                             false)
                                           &&
                                           match
                                             infos_
                                               .InformationsCalculAPLAccessionPropriete
                                                .type_travaux_logement_r842_5
                                           with
                                           | TypeTravauxLogementR8425
                                             .ObjectifDecenceLogement _ ->
                                             false
                                           | TypeTravauxLogementR8425
                                             .PrevuDansListeR321_15 _ ->
                                             false
                                           | TypeTravauxLogementR8425
                                             .AgrandirOuRendreHabitableD331_63 _
                                             ->
                                             true
                                           | TypeTravauxLogementR8425
                                             .PasDeTravaux _ ->
                                             false)
                                         | ModeOccupation.SousLocataire _ ->
                                           false
                                         | ModeOccupation.LocationAccession _ ->
                                           false)))
                                   (fun (_ : _) -> true));
                             |]
                             (fun (_ : _) ->
                               log_decision_taken
                                 {
                                   filename =
                                     "examples/aides_logement/code_construction_reglementaire.catala_fr";
                                   start_line = 4399;
                                   start_column = 5;
                                   end_line = 4406;
                                   end_column = 28;
                                   law_headings =
                                     [
                                       "Article R842-5";
                                       "Section 2 : Accession à la propriété";
                                       "Chapitre 2 : Modalités de liquidation \
                                        et de versement des allocations de \
                                        logement";
                                       "Titre IV : Allocations de Logement";
                                       "Livre VIII : Aides personnelles au \
                                        logement";
                                       "Partie réglementaire";
                                       "Code de la construction et de \
                                        l'habitation";
                                     ];
                                 }
                                 (match informations_calcul_ with
                                 | InformationsCalculAPL.InfosLocatif _ -> false
                                 | InformationsCalculAPL.InfosLogementFoyer _ ->
                                   false
                                 | InformationsCalculAPL.InfosAccessionPropriete
                                     infos_ -> (
                                   match
                                     menage_.Menage.logement
                                       .Logement.mode_occupation
                                   with
                                   | ModeOccupation.Locataire _ -> false
                                   | ModeOccupation.ResidentLogementFoyer _ ->
                                     false
                                   | ModeOccupation
                                     .AccessionProprieteLocalUsageExclusifHabitation
                                       proprietaire_ -> (
                                     (match
                                        proprietaire_.Proprietaire.pret
                                          .Pret.titulaire_pret
                                      with
                                     | TitulairePret.Demandeur _ -> true
                                     | TitulairePret
                                       .VendeurQuandDemandeurAContratLocationAccession
                                         _ ->
                                       false)
                                     &&
                                     match
                                       infos_
                                         .InformationsCalculAPLAccessionPropriete
                                          .type_travaux_logement_r842_5
                                     with
                                     | TypeTravauxLogementR8425
                                       .ObjectifDecenceLogement _ ->
                                       false
                                     | TypeTravauxLogementR8425
                                       .PrevuDansListeR321_15 _ ->
                                       true
                                     | TypeTravauxLogementR8425
                                       .AgrandirOuRendreHabitableD331_63 _ ->
                                       false
                                     | TypeTravauxLogementR8425.PasDeTravaux _
                                       ->
                                       false)
                                   | ModeOccupation.SousLocataire _ -> false
                                   | ModeOccupation.LocationAccession _ -> false
                                   )))
                             (fun (_ : _) -> true));
                       |]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/code_construction_reglementaire.catala_fr";
                             start_line = 4380;
                             start_column = 5;
                             end_line = 4389;
                             end_column = 28;
                             law_headings =
                               [
                                 "Article R842-5";
                                 "Section 2 : Accession à la propriété";
                                 "Chapitre 2 : Modalités de liquidation et de \
                                  versement des allocations de logement";
                                 "Titre IV : Allocations de Logement";
                                 "Livre VIII : Aides personnelles au logement";
                                 "Partie réglementaire";
                                 "Code de la construction et de l'habitation";
                               ];
                           }
                           (match informations_calcul_ with
                           | InformationsCalculAPL.InfosLocatif _ -> false
                           | InformationsCalculAPL.InfosLogementFoyer _ -> false
                           | InformationsCalculAPL.InfosAccessionPropriete
                               infos_ -> (
                             match
                               menage_.Menage.logement.Logement.mode_occupation
                             with
                             | ModeOccupation.Locataire _ -> false
                             | ModeOccupation.ResidentLogementFoyer _ -> false
                             | ModeOccupation
                               .AccessionProprieteLocalUsageExclusifHabitation
                                 proprietaire_ ->
                               (match
                                  proprietaire_.Proprietaire.pret
                                    .Pret.titulaire_pret
                                with
                               | TitulairePret.Demandeur _ -> true
                               | TitulairePret
                                 .VendeurQuandDemandeurAContratLocationAccession
                                   _ ->
                                 false)
                               && ((match
                                      infos_
                                        .InformationsCalculAPLAccessionPropriete
                                         .type_travaux_logement_r842_5
                                    with
                                   | TypeTravauxLogementR8425
                                     .ObjectifDecenceLogement _ ->
                                     false
                                   | TypeTravauxLogementR8425
                                     .PrevuDansListeR321_15 _ ->
                                     false
                                   | TypeTravauxLogementR8425
                                     .AgrandirOuRendreHabitableD331_63 _ ->
                                     false
                                   | TypeTravauxLogementR8425.PasDeTravaux _ ->
                                     true)
                                  ||
                                  match
                                    infos_
                                      .InformationsCalculAPLAccessionPropriete
                                       .type_travaux_logement_r842_5
                                  with
                                  | TypeTravauxLogementR8425
                                    .ObjectifDecenceLogement _ ->
                                    true
                                  | TypeTravauxLogementR8425
                                    .PrevuDansListeR321_15 _ ->
                                    false
                                  | TypeTravauxLogementR8425
                                    .AgrandirOuRendreHabitableD331_63 _ ->
                                    false
                                  | TypeTravauxLogementR8425.PasDeTravaux _ ->
                                    false)
                             | ModeOccupation.SousLocataire _ -> false
                             | ModeOccupation.LocationAccession _ -> false)))
                       (fun (_ : _) -> true));
                 |]
                 (fun (_ : _) -> false)
                 (fun (_ : _) -> raise EmptyError));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 429;
                 start_column = 11;
                 end_line = 429;
                 end_column = 29;
                 law_headings =
                   [
                     "Éligibilité aux allocations de logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> false)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 429;
                start_column = 11;
                end_line = 429;
                end_column = 29;
                law_headings =
                  [
                    "Éligibilité aux allocations de logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let coefficents_enfants_garde_alternee_pris_en_compte_ : decimal array =
    log_variable_definition
      [
        "ÉligibilitéAllocationLogement";
        "coefficents_enfants_garde_alternée_pris_en_compte";
      ]
      (embed_array embed_decimal)
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 469;
                 start_column = 14;
                 end_line = 469;
                 end_column = 63;
                 law_headings =
                   [
                     "Éligibilité aux allocations de logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) ->
             eligibilite_commune_dot_coefficents_enfants_garde_alternee_pris_en_compte_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 444;
                start_column = 10;
                end_line = 444;
                end_column = 59;
                law_headings =
                  [
                    "Éligibilité aux allocations de logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let nombre_personnes_a_charge_prises_en_compte_ : integer =
    log_variable_definition
      [
        "ÉligibilitéAllocationLogement";
        "nombre_personnes_à_charge_prises_en_compte";
      ]
      embed_integer
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 467;
                 start_column = 14;
                 end_line = 467;
                 end_column = 56;
                 law_headings =
                   [
                     "Éligibilité aux allocations de logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) ->
             eligibilite_commune_dot_nombre_personnes_a_charge_prises_en_compte_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 443;
                start_column = 10;
                end_line = 443;
                end_column = 52;
                law_headings =
                  [
                    "Éligibilité aux allocations de logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let eligibilite_dispositions_communes_ : EligibiliteAllocationLogement.t =
    log_variable_definition
      ["ÉligibilitéAllocationLogement"; "éligibilité_dispositions_communes"]
      embed_eligibilite_allocation_logement
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_legislatif.catala_fr";
                 start_line = 856;
                 start_column = 14;
                 end_line = 856;
                 end_column = 25;
                 law_headings =
                   [
                     "Chapitre Ier : Champ d'application";
                     "Titre IV : Allocations de logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie législative";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             if not eligibilite_commune_dot_eligibilite_ then
               EligibiliteAllocationLogement.PasEligible ()
             else EligibiliteAllocationLogement.AllocationLogementSociale ())
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 440;
                start_column = 10;
                end_line = 440;
                end_column = 31;
                law_headings =
                  [
                    "Éligibilité aux allocations de logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let eligibilite_allocation_logement_familiale_ : bool =
    log_variable_definition
      [
        "ÉligibilitéAllocationLogement";
        "éligibilité_allocation_logement_familiale";
      ]
      embed_bool
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default
                       [|
                         (fun (_ : _) ->
                           handle_default
                             [|
                               (fun (_ : _) ->
                                 handle_default
                                   [|
                                     (fun (_ : _) ->
                                       handle_default [||]
                                         (fun (_ : _) ->
                                           log_decision_taken
                                             {
                                               filename =
                                                 "examples/aides_logement/code_construction_legislatif.catala_fr";
                                               start_line = 1018;
                                               start_column = 5;
                                               end_line = 1022;
                                               end_column = 29;
                                               law_headings =
                                                 [
                                                   "Article L841-1";
                                                   "Chapitre Ier : Champ \
                                                    d'application";
                                                   "Titre IV : Allocations de \
                                                    logement";
                                                   "Livre VIII : Aides \
                                                    personnelles au logement";
                                                   "Partie législative";
                                                   "Code de la construction et \
                                                    de l'habitation";
                                                 ];
                                             }
                                             (match
                                                menage_
                                                  .Menage.situation_familiale
                                              with
                                             | SituationFamiliale.Celibataire _
                                               ->
                                               array_length
                                                 menage_
                                                   .Menage.personnes_a_charge
                                               = integer_of_string "0"
                                               && menage_
                                                    .Menage
                                                     .enfant_a_naitre_apres_quatrieme_mois_grossesse
                                             | SituationFamiliale.Maries _ ->
                                               false
                                             | SituationFamiliale.Pacses _ ->
                                               false
                                             | SituationFamiliale.Concubins _ ->
                                               false
                                             | SituationFamiliale
                                               .CelibataireSepareDeFait _ ->
                                               false
                                             | SituationFamiliale
                                               .ConcubinageDontSepareDeFait _ ->
                                               false))
                                         (fun (_ : _) -> true));
                                   |]
                                   (fun (_ : _) -> true)
                                   (fun (_ : _) ->
                                     handle_default
                                       [|
                                         (fun (_ : _) ->
                                           handle_default
                                             [|
                                               (fun (_ : _) ->
                                                 handle_default [||]
                                                   (fun (_ : _) ->
                                                     log_decision_taken
                                                       {
                                                         filename =
                                                           "examples/aides_logement/code_construction_legislatif.catala_fr";
                                                         start_line = 995;
                                                         start_column = 5;
                                                         end_line = 1006;
                                                         end_column = 12;
                                                         law_headings =
                                                           [
                                                             "Article L841-1";
                                                             "Chapitre Ier : \
                                                              Champ \
                                                              d'application";
                                                             "Titre IV : \
                                                              Allocations de \
                                                              logement";
                                                             "Livre VIII : \
                                                              Aides \
                                                              personnelles au \
                                                              logement";
                                                             "Partie \
                                                              législative";
                                                             "Code de la \
                                                              construction et \
                                                              de l'habitation";
                                                           ];
                                                       }
                                                       (Array.fold_left
                                                          (fun (acc_ : integer)
                                                               (personne_a_charge_ :
                                                                 _) ->
                                                            if
                                                              match
                                                                personne_a_charge_
                                                              with
                                                              | PersonneACharge
                                                                .EnfantACharge
                                                                  enfant_ ->
                                                                false
                                                              | PersonneACharge
                                                                .AutrePersonneACharge
                                                                  parent_ ->
                                                                parent_
                                                                  .AutrePersonneACharge
                                                                   .ascendant_descendant_collateral_deuxieme_troisieme_degre
                                                                && parent_
                                                                     .AutrePersonneACharge
                                                                      .incapacite_80_pourcent_ou_restriction_emploi
                                                            then
                                                              acc_
                                                              +! integer_of_string
                                                                   "1"
                                                            else acc_)
                                                          (integer_of_string "0")
                                                          menage_
                                                            .Menage
                                                             .personnes_a_charge
                                                       >=! integer_of_string "1"
                                                       ))
                                                   (fun (_ : _) -> true));
                                             |]
                                             (fun (_ : _) ->
                                               log_decision_taken
                                                 {
                                                   filename =
                                                     "examples/aides_logement/code_construction_legislatif.catala_fr";
                                                   start_line = 978;
                                                   start_column = 5;
                                                   end_line = 979;
                                                   end_column = 72;
                                                   law_headings =
                                                     [
                                                       "Article L841-1";
                                                       "Chapitre Ier : Champ \
                                                        d'application";
                                                       "Titre IV : Allocations \
                                                        de logement";
                                                       "Livre VIII : Aides \
                                                        personnelles au \
                                                        logement";
                                                       "Partie législative";
                                                       "Code de la \
                                                        construction et de \
                                                        l'habitation";
                                                     ];
                                                 }
                                                 (Array.fold_left
                                                    (fun (acc_ : integer)
                                                         (personne_a_charge_ :
                                                           _) ->
                                                      if
                                                        log_end_call
                                                          [
                                                            "ÉligibilitéAidesPersonnelleLogement";
                                                            "condition_2_r823_4";
                                                          ]
                                                          (log_variable_definition
                                                             [
                                                               "ÉligibilitéAidesPersonnelleLogement";
                                                               "condition_2_r823_4";
                                                               "output";
                                                             ]
                                                             embed_bool
                                                             ((log_begin_call
                                                                 [
                                                                   "ÉligibilitéAidesPersonnelleLogement";
                                                                   "condition_2_r823_4";
                                                                 ]
                                                                 eligibilite_commune_dot_condition_2_r823_4_)
                                                                (log_variable_definition
                                                                   [
                                                                     "ÉligibilitéAidesPersonnelleLogement";
                                                                     "condition_2_r823_4";
                                                                     "input";
                                                                   ]
                                                                   embed_personne_a_charge
                                                                   personne_a_charge_)))
                                                      then
                                                        acc_
                                                        +! integer_of_string "1"
                                                      else acc_)
                                                    (integer_of_string "0")
                                                    menage_
                                                      .Menage.personnes_a_charge
                                                 >=! integer_of_string "1"))
                                             (fun (_ : _) -> true));
                                       |]
                                       (fun (_ : _) -> false)
                                       (fun (_ : _) -> raise EmptyError)));
                             |]
                             (fun (_ : _) ->
                               log_decision_taken
                                 {
                                   filename =
                                     "examples/aides_logement/code_construction_legislatif.catala_fr";
                                   start_line = 937;
                                   start_column = 5;
                                   end_line = 964;
                                   end_column = 29;
                                   law_headings =
                                     [
                                       "Article L841-1";
                                       "Chapitre Ier : Champ d'application";
                                       "Titre IV : Allocations de logement";
                                       "Livre VIII : Aides personnelles au \
                                        logement";
                                       "Partie législative";
                                       "Code de la construction et de \
                                        l'habitation";
                                     ];
                                 }
                                 (Array.fold_left
                                    (fun (acc_ : integer)
                                         (personne_a_charge_ : _) ->
                                      if
                                        match personne_a_charge_ with
                                        | PersonneACharge.EnfantACharge enfant_
                                          ->
                                          not
                                            (log_end_call
                                               [
                                                 "ÉligibilitéPrestationsFamiliales";
                                                 "droit_ouvert";
                                               ]
                                               (log_variable_definition
                                                  [
                                                    "ÉligibilitéPrestationsFamiliales";
                                                    "droit_ouvert";
                                                    "output";
                                                  ]
                                                  embed_bool
                                                  ((log_begin_call
                                                      [
                                                        "ÉligibilitéPrestationsFamiliales";
                                                        "droit_ouvert";
                                                      ]
                                                      prestations_familiales_dot_droit_ouvert_)
                                                     (log_variable_definition
                                                        [
                                                          "ÉligibilitéPrestationsFamiliales";
                                                          "droit_ouvert";
                                                          "input";
                                                        ]
                                                        embed_enfant_prestations_familiales
                                                        {
                                                          EnfantPrestationsFamiliales
                                                          .identifiant =
                                                            enfant_
                                                              .EnfantACharge
                                                               .identifiant;
                                                          EnfantPrestationsFamiliales
                                                          .obligation_scolaire =
                                                            enfant_
                                                              .EnfantACharge
                                                               .obligation_scolaire;
                                                          EnfantPrestationsFamiliales
                                                          .remuneration_mensuelle =
                                                            enfant_
                                                              .EnfantACharge
                                                               .remuneration_mensuelle;
                                                          EnfantPrestationsFamiliales
                                                          .date_de_naissance =
                                                            enfant_
                                                              .EnfantACharge
                                                               .date_de_naissance;
                                                          EnfantPrestationsFamiliales
                                                          .age =
                                                            enfant_
                                                              .EnfantACharge.age;
                                                          EnfantPrestationsFamiliales
                                                          .prise_en_charge =
                                                            (match
                                                               enfant_
                                                                 .EnfantACharge
                                                                  .prise_en_charge
                                                             with
                                                            | PriseEnCharge
                                                              .EffectiveEtPermanente
                                                                _ ->
                                                              PriseEnChargeEnfant
                                                              .EffectiveEtPermanente
                                                                ()
                                                            | PriseEnCharge
                                                              .ResidenceAlterneeAllocataireUnique
                                                                _ ->
                                                              PriseEnChargeEnfant
                                                              .GardeAlterneeAllocataireUnique
                                                                ()
                                                            | PriseEnCharge
                                                              .ResidenceAlterneeAllocationsPartagee
                                                                _ ->
                                                              PriseEnChargeEnfant
                                                              .GardeAlterneePartageAllocations
                                                                ());
                                                          EnfantPrestationsFamiliales
                                                          .a_deja_ouvert_droit_aux_allocations_familiales =
                                                            enfant_
                                                              .EnfantACharge
                                                               .a_deja_ouvert_droit_aux_allocations_familiales;
                                                          EnfantPrestationsFamiliales
                                                          .beneficie_titre_personnel_aide_personnelle_logement =
                                                            enfant_
                                                              .EnfantACharge
                                                               .beneficie_titre_personnel_aide_personnelle_logement;
                                                        }))))
                                        | PersonneACharge.AutrePersonneACharge _
                                          ->
                                          false
                                      then acc_ +! integer_of_string "1"
                                      else acc_)
                                    (integer_of_string "0")
                                    menage_.Menage.personnes_a_charge
                                  = integer_of_string "0"
                                 &&
                                 match menage_.Menage.situation_familiale with
                                 | SituationFamiliale.Celibataire _ -> false
                                 | SituationFamiliale.Maries date_mariage_ ->
                                   date_courante_
                                   <=@ date_mariage_ +@ duree_l841_1_3_
                                 | SituationFamiliale.Pacses _ -> false
                                 | SituationFamiliale.Concubins _ -> false
                                 | SituationFamiliale.CelibataireSepareDeFait _
                                   ->
                                   false
                                 | SituationFamiliale
                                   .ConcubinageDontSepareDeFait _ ->
                                   false))
                             (fun (_ : _) -> true));
                       |]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/code_construction_legislatif.catala_fr";
                             start_line = 902;
                             start_column = 5;
                             end_line = 926;
                             end_column = 11;
                             law_headings =
                               [
                                 "Article L841-1";
                                 "Chapitre Ier : Champ d'application";
                                 "Titre IV : Allocations de logement";
                                 "Livre VIII : Aides personnelles au logement";
                                 "Partie législative";
                                 "Code de la construction et de l'habitation";
                               ];
                           }
                           (Array.fold_left
                              (fun (acc_ : integer) (personne_a_charge_ : _) ->
                                if
                                  match personne_a_charge_ with
                                  | PersonneACharge.EnfantACharge enfant_ ->
                                    log_end_call
                                      [
                                        "ÉligibilitéPrestationsFamiliales";
                                        "droit_ouvert";
                                      ]
                                      (log_variable_definition
                                         [
                                           "ÉligibilitéPrestationsFamiliales";
                                           "droit_ouvert";
                                           "output";
                                         ]
                                         embed_bool
                                         ((log_begin_call
                                             [
                                               "ÉligibilitéPrestationsFamiliales";
                                               "droit_ouvert";
                                             ]
                                             prestations_familiales_dot_droit_ouvert_)
                                            (log_variable_definition
                                               [
                                                 "ÉligibilitéPrestationsFamiliales";
                                                 "droit_ouvert";
                                                 "input";
                                               ]
                                               embed_enfant_prestations_familiales
                                               {
                                                 EnfantPrestationsFamiliales
                                                 .identifiant =
                                                   enfant_
                                                     .EnfantACharge.identifiant;
                                                 EnfantPrestationsFamiliales
                                                 .obligation_scolaire =
                                                   enfant_
                                                     .EnfantACharge
                                                      .obligation_scolaire;
                                                 EnfantPrestationsFamiliales
                                                 .remuneration_mensuelle =
                                                   enfant_
                                                     .EnfantACharge
                                                      .remuneration_mensuelle;
                                                 EnfantPrestationsFamiliales
                                                 .date_de_naissance =
                                                   enfant_
                                                     .EnfantACharge
                                                      .date_de_naissance;
                                                 EnfantPrestationsFamiliales.age =
                                                   enfant_.EnfantACharge.age;
                                                 EnfantPrestationsFamiliales
                                                 .prise_en_charge =
                                                   (match
                                                      enfant_
                                                        .EnfantACharge
                                                         .prise_en_charge
                                                    with
                                                   | PriseEnCharge
                                                     .EffectiveEtPermanente _ ->
                                                     PriseEnChargeEnfant
                                                     .EffectiveEtPermanente
                                                       ()
                                                   | PriseEnCharge
                                                     .ResidenceAlterneeAllocataireUnique
                                                       _ ->
                                                     PriseEnChargeEnfant
                                                     .GardeAlterneeAllocataireUnique
                                                       ()
                                                   | PriseEnCharge
                                                     .ResidenceAlterneeAllocationsPartagee
                                                       _ ->
                                                     PriseEnChargeEnfant
                                                     .GardeAlterneePartageAllocations
                                                       ());
                                                 EnfantPrestationsFamiliales
                                                 .a_deja_ouvert_droit_aux_allocations_familiales =
                                                   enfant_
                                                     .EnfantACharge
                                                      .a_deja_ouvert_droit_aux_allocations_familiales;
                                                 EnfantPrestationsFamiliales
                                                 .beneficie_titre_personnel_aide_personnelle_logement =
                                                   enfant_
                                                     .EnfantACharge
                                                      .beneficie_titre_personnel_aide_personnelle_logement;
                                               })))
                                  | PersonneACharge.AutrePersonneACharge _ ->
                                    false
                                then acc_ +! integer_of_string "1"
                                else acc_)
                              (integer_of_string "0")
                              menage_.Menage.personnes_a_charge
                           = integer_of_string "1"))
                       (fun (_ : _) -> true));
                 |]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_legislatif.catala_fr";
                       start_line = 883;
                       start_column = 5;
                       end_line = 887;
                       end_column = 52;
                       law_headings =
                         [
                           "Article L841-1";
                           "Chapitre Ier : Champ d'application";
                           "Titre IV : Allocations de logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie législative";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     (Array.fold_left
                        (fun (acc_ : bool) (prestation_ : _) ->
                          acc_
                          || prestation_
                             = PrestationRecue.AllocationsFamiliales ()
                          || prestation_ = PrestationRecue.ComplementFamilial ()
                          || prestation_
                             = PrestationRecue.AllocationSoutienFamilial ()
                          || prestation_
                             = PrestationRecue.AllocationSoutienEnfantHandicape
                                 ())
                        false menage_.Menage.prestations_recues))
                 (fun (_ : _) -> true));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 431;
                 start_column = 11;
                 end_line = 431;
                 end_column = 52;
                 law_headings =
                   [
                     "Éligibilité aux allocations de logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> false)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 431;
                start_column = 11;
                end_line = 431;
                end_column = 52;
                law_headings =
                  [
                    "Éligibilité aux allocations de logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let eligibilite_l841_2_ : EligibiliteAllocationLogement.t =
    log_variable_definition
      ["ÉligibilitéAllocationLogement"; "éligibilité_l841_2"]
      embed_eligibilite_allocation_logement
      (try
         handle_default
           [|
             (fun (_ : _) ->
               handle_default [||]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename =
                         "examples/aides_logement/code_construction_legislatif.catala_fr";
                       start_line = 1148;
                       start_column = 5;
                       end_line = 1151;
                       end_column = 28;
                       law_headings =
                         [
                           "Article L841-4";
                           "Chapitre Ier : Champ d'application";
                           "Titre IV : Allocations de logement";
                           "Livre VIII : Aides personnelles au logement";
                           "Partie législative";
                           "Code de la construction et de l'habitation";
                         ];
                     }
                     (match
                        menage_.Menage.logement.Logement.mode_occupation
                      with
                     | ModeOccupation.Locataire _ -> false
                     | ModeOccupation.ResidentLogementFoyer _ -> false
                     | ModeOccupation
                       .AccessionProprieteLocalUsageExclusifHabitation
                         proprietaire_ ->
                       proprietaire_.Proprietaire.pret.Pret.date_signature
                       >@ date_of_numbers 2017 12 31
                     | ModeOccupation.SousLocataire _ -> false
                     | ModeOccupation.LocationAccession _ -> false))
                 (fun (_ : _) -> EligibiliteAllocationLogement.PasEligible ()));
           |]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_legislatif.catala_fr";
                 start_line = 1049;
                 start_column = 14;
                 end_line = 1049;
                 end_column = 25;
                 law_headings =
                   [
                     "Article L841-2";
                     "Chapitre Ier : Champ d'application";
                     "Titre IV : Allocations de logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie législative";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             if
               eligibilite_dispositions_communes_
               = EligibiliteAllocationLogement.PasEligible ()
               || beneficie_aide_personnalisee_logement_
             then EligibiliteAllocationLogement.PasEligible ()
             else if eligibilite_allocation_logement_familiale_ then
               EligibiliteAllocationLogement.AllocationLogementFamiliale ()
             else if eligibilite_allocation_logement_sociale_ then
               EligibiliteAllocationLogement.AllocationLogementSociale ()
             else EligibiliteAllocationLogement.PasEligible ())
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 441;
                start_column = 10;
                end_line = 441;
                end_column = 16;
                law_headings =
                  [
                    "Éligibilité aux allocations de logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let eligibilite_avec_condition_logement_ : EligibiliteAllocationLogement.t =
    log_variable_definition
      ["ÉligibilitéAllocationLogement"; "éligibilité_avec_condition_logement"]
      embed_eligibilite_allocation_logement
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 462;
                 start_column = 14;
                 end_line = 462;
                 end_column = 25;
                 law_headings =
                   [
                     "Éligibilité aux allocations de logement";
                     "Déclarations des champs d'application";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) ->
             if not condition_logement_ then
               EligibiliteAllocationLogement.PasEligible ()
             else eligibilite_l841_2_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 442;
                start_column = 10;
                end_line = 442;
                end_column = 33;
                law_headings =
                  [
                    "Éligibilité aux allocations de logement";
                    "Déclarations des champs d'application";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  {
    EligibiliteAllocationLogementOut.eligibilite_avec_condition_logement_out =
      eligibilite_avec_condition_logement_;
    EligibiliteAllocationLogementOut
    .nombre_personnes_a_charge_prises_en_compte_out =
      nombre_personnes_a_charge_prises_en_compte_;
    EligibiliteAllocationLogementOut
    .coefficents_enfants_garde_alternee_pris_en_compte_out =
      coefficents_enfants_garde_alternee_pris_en_compte_;
  }

let calcul_allocation_logement
    (calcul_allocation_logement_in : CalculAllocationLogementIn.t) :
    CalculAllocationLogementOut.t =
  let mode_occupation_ : ModeOccupation.t =
    calcul_allocation_logement_in.CalculAllocationLogementIn.mode_occupation_in
  in
  let informations_calcul_ : InformationsCalculAPL.t =
    calcul_allocation_logement_in
      .CalculAllocationLogementIn.informations_calcul_in
  in
  let ressources_menage_sans_arrondi_ : money =
    calcul_allocation_logement_in
      .CalculAllocationLogementIn.ressources_menage_sans_arrondi_in
  in
  let situation_familiale_ : SituationFamiliale.t =
    calcul_allocation_logement_in
      .CalculAllocationLogementIn.situation_familiale_in
  in
  let nombre_personnes_a_charge_ : integer =
    calcul_allocation_logement_in
      .CalculAllocationLogementIn.nombre_personnes_a_charge_in
  in
  let zone_ : ZoneDHabitation.t =
    calcul_allocation_logement_in.CalculAllocationLogementIn.zone_in
  in
  let date_courante_ : date =
    calcul_allocation_logement_in.CalculAllocationLogementIn.date_courante_in
  in
  let type_aide_ : TypeAidesPersonnelleLogement.t =
    calcul_allocation_logement_in.CalculAllocationLogementIn.type_aide_in
  in
  let categorie_calcul_apl_ : CategorieCalculAPL.t =
    log_variable_definition
      ["CalculAllocationLogement"; "catégorie_calcul_apl"]
      embed_categorie_calcul_a_p_l
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1395;
                 start_column = 14;
                 end_line = 1395;
                 end_column = 34;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match mode_occupation_ with
             | ModeOccupation.Locataire _ -> CategorieCalculAPL.Location ()
             | ModeOccupation.ResidentLogementFoyer _ ->
               CategorieCalculAPL.LogementFoyer ()
             | ModeOccupation.AccessionProprieteLocalUsageExclusifHabitation _
               ->
               CategorieCalculAPL.AccessionPropriete ()
             | ModeOccupation.SousLocataire _ -> CategorieCalculAPL.Location ()
             | ModeOccupation.LocationAccession _ ->
               CategorieCalculAPL.AccessionPropriete ())
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 1017;
                start_column = 11;
                end_line = 1017;
                end_column = 31;
                law_headings =
                  [
                    "Tous secteurs";
                    "Secteur logement-foyer";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let ressources_menage_avec_arrondi_ : money =
    log_variable_definition
      ["CalculAllocationLogement"; "ressources_ménage_avec_arrondi"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 4871;
                 start_column = 14;
                 end_line = 4871;
                 end_column = 31;
                 law_headings =
                   [
                     "Article D842-15";
                     "Section 3 : Logements-foyers";
                     "Chapitre 2 : Modalités de liquidation et de versement \
                      des allocations de logement";
                     "Titre IV : Allocations de Logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             money_round
               ((ressources_menage_sans_arrondi_ +$ money_of_cents_string "4999")
               *$ decimal_of_string "0.01")
             *$ decimal_of_string "100.")
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 1010;
                start_column = 10;
                end_line = 1010;
                end_column = 22;
                law_headings =
                  [
                    "Tous secteurs";
                    "Secteur logement-foyer";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let situation_familiale_calcul_apl_ : SituationFamilialeCalculAPL.t =
    log_variable_definition
      ["CalculAllocationLogement"; "situation_familiale_calcul_apl"]
      embed_situation_familiale_calcul_a_p_l
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/arrete_2019-09-27.catala_fr";
                 start_line = 81;
                 start_column = 14;
                 end_line = 81;
                 end_column = 44;
                 law_headings =
                   [
                     "Article 7";
                     "Chapitre III : Calcul des aides personnelles au logement \
                      en secteur locatif";
                     "Arrêté du 27 septembre 2019 relatif au calcul des aides \
                      personnelles au logement et de la prime de déménagement";
                   ];
               }
               true)
           (fun (_ : _) ->
             match situation_familiale_ with
             | SituationFamiliale.Celibataire _ ->
               SituationFamilialeCalculAPL.PersonneSeule ()
             | SituationFamiliale.Maries _ ->
               SituationFamilialeCalculAPL.Couple ()
             | SituationFamiliale.Pacses _ ->
               SituationFamilialeCalculAPL.Couple ()
             | SituationFamiliale.Concubins _ ->
               SituationFamilialeCalculAPL.Couple ()
             | SituationFamiliale.CelibataireSepareDeFait _ ->
               SituationFamilialeCalculAPL.PersonneSeule ()
             | SituationFamiliale.ConcubinageDontSepareDeFait _ ->
               SituationFamilialeCalculAPL.Couple ())
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 1018;
                start_column = 11;
                end_line = 1018;
                end_column = 41;
                law_headings =
                  [
                    "Tous secteurs";
                    "Secteur logement-foyer";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let accession_propriete_dot_ressources_menage_arrondies_base_ : money =
    try
      log_variable_definition
        [
          "CalculAllocationLogement";
          "accession_propriété.ressources_ménage_arrondies_base";
        ]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1610;
                 start_column = 14;
                 end_line = 1610;
                 end_column = 61;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> ressources_menage_avec_arrondi_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 855;
             start_column = 10;
             end_line = 855;
             end_column = 37;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_nombre_personnes_a_charge_ : integer =
    try
      log_variable_definition
        [
          "CalculAllocationLogement";
          "accession_propriété.nombre_personnes_à_charge";
        ]
        embed_integer
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1616;
                 start_column = 14;
                 end_line = 1616;
                 end_column = 59;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> nombre_personnes_a_charge_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 858;
             start_column = 10;
             end_line = 858;
             end_column = 35;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_situation_familiale_calcul_apl_ :
      SituationFamilialeCalculAPL.t =
    try
      log_variable_definition
        [
          "CalculAllocationLogement";
          "accession_propriété.situation_familiale_calcul_apl";
        ]
        embed_situation_familiale_calcul_a_p_l
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1628;
                 start_column = 14;
                 end_line = 1628;
                 end_column = 64;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> situation_familiale_calcul_apl_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 859;
             start_column = 10;
             end_line = 859;
             end_column = 40;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_zone_ : ZoneDHabitation.t =
    try
      log_variable_definition
        ["CalculAllocationLogement"; "accession_propriété.zone"]
        embed_zone_d_habitation
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1620;
                 start_column = 14;
                 end_line = 1620;
                 end_column = 38;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> zone_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 860;
             start_column = 10;
             end_line = 860;
             end_column = 14;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_date_courante_ : date =
    try
      log_variable_definition
        ["CalculAllocationLogement"; "accession_propriété.date_courante"]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1623;
                 start_column = 14;
                 end_line = 1623;
                 end_column = 47;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 861;
             start_column = 10;
             end_line = 861;
             end_column = 23;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_mensualite_principale_ : money =
    try
      log_variable_definition
        [
          "CalculAllocationLogement"; "accession_propriété.mensualité_principale";
        ]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1681;
                 start_column = 14;
                 end_line = 1681;
                 end_column = 55;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif _ -> money_of_cents_string "0"
             | InformationsCalculAPL.InfosLogementFoyer _ ->
               money_of_cents_string "0"
             | InformationsCalculAPL.InfosAccessionPropriete infos_ ->
               infos_
                 .InformationsCalculAPLAccessionPropriete.mensualite_principale))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 862;
             start_column = 10;
             end_line = 862;
             end_column = 31;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_situation_r822_11_13_17_ : bool =
    try
      log_variable_definition
        [
          "CalculAllocationLogement";
          "accession_propriété.situation_r822_11_13_17";
        ]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1713;
                 start_column = 14;
                 end_line = 1713;
                 end_column = 57;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif _ -> false
             | InformationsCalculAPL.InfosLogementFoyer _ -> false
             | InformationsCalculAPL.InfosAccessionPropriete infos_ ->
               infos_
                 .InformationsCalculAPLAccessionPropriete
                  .situation_r822_11_13_17))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 863;
             start_column = 10;
             end_line = 863;
             end_column = 33;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_date_signature_pret_ : date =
    try
      log_variable_definition
        ["CalculAllocationLogement"; "accession_propriété.date_signature_prêt"]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1692;
                 start_column = 14;
                 end_line = 1692;
                 end_column = 53;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif _ -> date_of_numbers 2010 1 1
             | InformationsCalculAPL.InfosLogementFoyer _ ->
               date_of_numbers 2010 1 1
             | InformationsCalculAPL.InfosAccessionPropriete infos_ ->
               infos_
                 .InformationsCalculAPLAccessionPropriete.date_signature_pret))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 864;
             start_column = 10;
             end_line = 864;
             end_column = 29;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_type_travaux_logement_ :
      TypeTravauxLogementR8425.t =
    try
      log_variable_definition
        [
          "CalculAllocationLogement"; "accession_propriété.type_travaux_logement";
        ]
        embed_type_travaux_logement_r842_5
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1686;
                 start_column = 14;
                 end_line = 1686;
                 end_column = 55;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif _ ->
               TypeTravauxLogementR8425.PasDeTravaux ()
             | InformationsCalculAPL.InfosLogementFoyer _ ->
               TypeTravauxLogementR8425.PasDeTravaux ()
             | InformationsCalculAPL.InfosAccessionPropriete infos_ ->
               infos_
                 .InformationsCalculAPLAccessionPropriete
                  .type_travaux_logement_r842_5))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 865;
             start_column = 10;
             end_line = 865;
             end_column = 31;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_local_habite_premiere_fois_beneficiaire_ : bool =
    try
      log_variable_definition
        [
          "CalculAllocationLogement";
          "accession_propriété.local_habité_première_fois_bénéficiaire";
        ]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1697;
                 start_column = 14;
                 end_line = 1697;
                 end_column = 73;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif _ -> false
             | InformationsCalculAPL.InfosLogementFoyer _ -> false
             | InformationsCalculAPL.InfosAccessionPropriete infos_ ->
               infos_
                 .InformationsCalculAPLAccessionPropriete
                  .local_habite_premiere_fois_beneficiaire))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 866;
             start_column = 10;
             end_line = 866;
             end_column = 49;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_date_entree_logement_ : date =
    try
      log_variable_definition
        ["CalculAllocationLogement"; "accession_propriété.date_entrée_logement"]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1703;
                 start_column = 14;
                 end_line = 1703;
                 end_column = 54;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif _ -> date_of_numbers 2010 1 1
             | InformationsCalculAPL.InfosLogementFoyer _ ->
               date_of_numbers 2010 1 1
             | InformationsCalculAPL.InfosAccessionPropriete infos_ ->
               infos_
                 .InformationsCalculAPLAccessionPropriete.date_entree_logement))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 867;
             start_column = 10;
             end_line = 867;
             end_column = 30;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_charges_mensuelles_pret_ : money =
    try
      log_variable_definition
        [
          "CalculAllocationLogement";
          "accession_propriété.charges_mensuelles_prêt";
        ]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1718;
                 start_column = 14;
                 end_line = 1718;
                 end_column = 57;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif _ -> money_of_cents_string "0"
             | InformationsCalculAPL.InfosLogementFoyer _ ->
               money_of_cents_string "0"
             | InformationsCalculAPL.InfosAccessionPropriete infos_ ->
               infos_
                 .InformationsCalculAPLAccessionPropriete
                  .charges_mensuelles_pret))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 868;
             start_column = 10;
             end_line = 868;
             end_column = 33;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let accession_propriete_dot_copropriete_ : bool =
    try
      log_variable_definition
        ["CalculAllocationLogement"; "accession_propriété.copropriété"]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1708;
                 start_column = 14;
                 end_line = 1708;
                 end_column = 45;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif _ -> false
             | InformationsCalculAPL.InfosLogementFoyer _ -> false
             | InformationsCalculAPL.InfosAccessionPropriete infos_ ->
               infos_.InformationsCalculAPLAccessionPropriete.copropriete))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 869;
             start_column = 10;
             end_line = 869;
             end_column = 21;
             law_headings =
               [
                 "Secteur accession à la propriété";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : CalculAllocationLogementAccessionProprieteOut.t =
    log_end_call
      [
        "CalculAllocationLogement";
        "accession_propriété";
        "CalculAllocationLogementAccessionPropriété";
      ]
      ((log_begin_call
          [
            "CalculAllocationLogement";
            "accession_propriété";
            "CalculAllocationLogementAccessionPropriété";
          ]
          calcul_allocation_logement_accession_propriete)
         {
           CalculAllocationLogementAccessionProprieteIn
           .ressources_menage_arrondies_base_in =
             accession_propriete_dot_ressources_menage_arrondies_base_;
           CalculAllocationLogementAccessionProprieteIn
           .nombre_personnes_a_charge_in =
             accession_propriete_dot_nombre_personnes_a_charge_;
           CalculAllocationLogementAccessionProprieteIn
           .situation_familiale_calcul_apl_in =
             accession_propriete_dot_situation_familiale_calcul_apl_;
           CalculAllocationLogementAccessionProprieteIn.zone_in =
             accession_propriete_dot_zone_;
           CalculAllocationLogementAccessionProprieteIn.date_courante_in =
             accession_propriete_dot_date_courante_;
           CalculAllocationLogementAccessionProprieteIn.mensualite_principale_in =
             accession_propriete_dot_mensualite_principale_;
           CalculAllocationLogementAccessionProprieteIn
           .situation_r822_11_13_17_in =
             accession_propriete_dot_situation_r822_11_13_17_;
           CalculAllocationLogementAccessionProprieteIn.date_signature_pret_in =
             accession_propriete_dot_date_signature_pret_;
           CalculAllocationLogementAccessionProprieteIn.type_travaux_logement_in =
             accession_propriete_dot_type_travaux_logement_;
           CalculAllocationLogementAccessionProprieteIn
           .local_habite_premiere_fois_beneficiaire_in =
             accession_propriete_dot_local_habite_premiere_fois_beneficiaire_;
           CalculAllocationLogementAccessionProprieteIn.date_entree_logement_in =
             accession_propriete_dot_date_entree_logement_;
           CalculAllocationLogementAccessionProprieteIn
           .charges_mensuelles_pret_in =
             accession_propriete_dot_charges_mensuelles_pret_;
           CalculAllocationLogementAccessionProprieteIn.copropriete_in =
             accession_propriete_dot_copropriete_;
         })
  in
  let accession_propriete_dot_aide_finale_formule_ : money =
    result_
      .CalculAllocationLogementAccessionProprieteOut.aide_finale_formule_out
  in
  let accession_propriete_dot_traitement_aide_finale_montant_minimal_ :
      money -> money =
    result_
      .CalculAllocationLogementAccessionProprieteOut
       .traitement_aide_finale_montant_minimal_out
  in
  let logement_foyer_dot_redevance_ : money =
    try
      log_variable_definition
        ["CalculAllocationLogement"; "logement_foyer.redevance"]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1724;
                 start_column = 14;
                 end_line = 1724;
                 end_column = 38;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif _ -> money_of_cents_string "0"
             | InformationsCalculAPL.InfosLogementFoyer infos_ ->
               infos_.InformationsCalculAPLLogementFoyer.redevance
             | InformationsCalculAPL.InfosAccessionPropriete _ ->
               money_of_cents_string "0"))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 948;
             start_column = 10;
             end_line = 948;
             end_column = 19;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let logement_foyer_dot_mode_occupation_ : ModeOccupation.t =
    try
      log_variable_definition
        ["CalculAllocationLogement"; "logement_foyer.mode_occupation"]
        embed_mode_occupation
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1630;
                 start_column = 14;
                 end_line = 1630;
                 end_column = 44;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> mode_occupation_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 949;
             start_column = 10;
             end_line = 949;
             end_column = 25;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let logement_foyer_dot_ressources_menage_arrondies_ : money =
    try
      log_variable_definition
        [
          "CalculAllocationLogement";
          "logement_foyer.ressources_ménage_arrondies";
        ]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1608;
                 start_column = 14;
                 end_line = 1608;
                 end_column = 56;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> ressources_menage_avec_arrondi_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 950;
             start_column = 10;
             end_line = 950;
             end_column = 37;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let logement_foyer_dot_nombre_personnes_a_charge_ : integer =
    try
      log_variable_definition
        ["CalculAllocationLogement"; "logement_foyer.nombre_personnes_à_charge"]
        embed_integer
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1614;
                 start_column = 14;
                 end_line = 1614;
                 end_column = 54;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> nombre_personnes_a_charge_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 951;
             start_column = 10;
             end_line = 951;
             end_column = 35;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let logement_foyer_dot_situation_familiale_calcul_apl_ :
      SituationFamilialeCalculAPL.t =
    try
      log_variable_definition
        [
          "CalculAllocationLogement";
          "logement_foyer.situation_familiale_calcul_apl";
        ]
        embed_situation_familiale_calcul_a_p_l
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1626;
                 start_column = 14;
                 end_line = 1626;
                 end_column = 59;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> situation_familiale_calcul_apl_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 952;
             start_column = 10;
             end_line = 952;
             end_column = 40;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let logement_foyer_dot_zone_ : ZoneDHabitation.t =
    try
      log_variable_definition
        ["CalculAllocationLogement"; "logement_foyer.zone"]
        embed_zone_d_habitation
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1619;
                 start_column = 14;
                 end_line = 1619;
                 end_column = 33;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> zone_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 953;
             start_column = 10;
             end_line = 953;
             end_column = 14;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let logement_foyer_dot_date_courante_ : date =
    try
      log_variable_definition
        ["CalculAllocationLogement"; "logement_foyer.date_courante"]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1622;
                 start_column = 14;
                 end_line = 1622;
                 end_column = 42;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 954;
             start_column = 10;
             end_line = 954;
             end_column = 23;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let logement_foyer_dot_categorie_equivalence_loyer_d842_16_ :
      CategorieEquivalenceLoyerAllocationLogementFoyer.t =
    try
      log_variable_definition
        [
          "CalculAllocationLogement";
          "logement_foyer.catégorie_équivalence_loyer_d842_16";
        ]
        embed_categorie_equivalence_loyer_allocation_logement_foyer
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1729;
                 start_column = 14;
                 end_line = 1729;
                 end_column = 64;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif _ ->
               CategorieEquivalenceLoyerAllocationLogementFoyer.AutresPersonnes
                 ()
             | InformationsCalculAPL.InfosLogementFoyer infos_ ->
               infos_
                 .InformationsCalculAPLLogementFoyer
                  .categorie_equivalence_loyer_d842_16
             | InformationsCalculAPL.InfosAccessionPropriete _ ->
               CategorieEquivalenceLoyerAllocationLogementFoyer.AutresPersonnes
                 ()))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 955;
             start_column = 10;
             end_line = 955;
             end_column = 45;
             law_headings =
               [
                 "Secteur logement-foyer";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : CalculAllocationLogementFoyerOut.t =
    log_end_call
      [
        "CalculAllocationLogement";
        "logement_foyer";
        "CalculAllocationLogementFoyer";
      ]
      ((log_begin_call
          [
            "CalculAllocationLogement";
            "logement_foyer";
            "CalculAllocationLogementFoyer";
          ]
          calcul_allocation_logement_foyer)
         {
           CalculAllocationLogementFoyerIn.redevance_in =
             logement_foyer_dot_redevance_;
           CalculAllocationLogementFoyerIn.mode_occupation_in =
             logement_foyer_dot_mode_occupation_;
           CalculAllocationLogementFoyerIn.ressources_menage_arrondies_in =
             logement_foyer_dot_ressources_menage_arrondies_;
           CalculAllocationLogementFoyerIn.nombre_personnes_a_charge_in =
             logement_foyer_dot_nombre_personnes_a_charge_;
           CalculAllocationLogementFoyerIn.situation_familiale_calcul_apl_in =
             logement_foyer_dot_situation_familiale_calcul_apl_;
           CalculAllocationLogementFoyerIn.zone_in = logement_foyer_dot_zone_;
           CalculAllocationLogementFoyerIn.date_courante_in =
             logement_foyer_dot_date_courante_;
           CalculAllocationLogementFoyerIn
           .categorie_equivalence_loyer_d842_16_in =
             logement_foyer_dot_categorie_equivalence_loyer_d842_16_;
         })
  in
  let logement_foyer_dot_coefficient_prise_en_charge_ : decimal =
    result_.CalculAllocationLogementFoyerOut.coefficient_prise_en_charge_out
  in
  let logement_foyer_dot_equivalence_loyer_ : money =
    result_.CalculAllocationLogementFoyerOut.equivalence_loyer_out
  in
  let logement_foyer_dot_montant_forfaitaire_charges_ : money =
    result_.CalculAllocationLogementFoyerOut.montant_forfaitaire_charges_out
  in
  let logement_foyer_dot_loyer_minimal_ : money =
    result_.CalculAllocationLogementFoyerOut.loyer_minimal_out
  in
  let logement_foyer_dot_aide_finale_formule_ : money =
    result_.CalculAllocationLogementFoyerOut.aide_finale_formule_out
  in
  let logement_foyer_dot_traitement_aide_finale_montant_minimal_ :
      money -> money =
    result_
      .CalculAllocationLogementFoyerOut
       .traitement_aide_finale_montant_minimal_out
  in
  let locatif_dot_loyer_principal_ : money =
    try
      log_variable_definition
        ["CalculAllocationLogement"; "locatif.loyer_principal"]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1633;
                 start_column = 14;
                 end_line = 1633;
                 end_column = 37;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif infos_ ->
               infos_.InformationsCalculAPLLocatif.loyer_principal
             | InformationsCalculAPL.InfosLogementFoyer _ ->
               money_of_cents_string "0"
             | InformationsCalculAPL.InfosAccessionPropriete _ ->
               money_of_cents_string "0"))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 790;
             start_column = 10;
             end_line = 790;
             end_column = 25;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_ressources_menage_arrondies_ : money =
    try
      log_variable_definition
        ["CalculAllocationLogement"; "locatif.ressources_ménage_arrondies"]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1607;
                 start_column = 14;
                 end_line = 1607;
                 end_column = 49;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> ressources_menage_avec_arrondi_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 791;
             start_column = 10;
             end_line = 791;
             end_column = 37;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_beneficiaire_aide_adulte_ou_enfant_handicapes_ : bool =
    try
      log_variable_definition
        [
          "CalculAllocationLogement";
          "locatif.bénéficiaire_aide_adulte_ou_enfant_handicapés";
        ]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1638;
                 start_column = 14;
                 end_line = 1638;
                 end_column = 67;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif infos_ ->
               infos_
                 .InformationsCalculAPLLocatif
                  .beneficiaire_aide_adulte_ou_enfant_handicapes
             | InformationsCalculAPL.InfosLogementFoyer _ -> false
             | InformationsCalculAPL.InfosAccessionPropriete _ -> false))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 792;
             start_column = 10;
             end_line = 792;
             end_column = 55;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_date_courante_ : date =
    try
      log_variable_definition
        ["CalculAllocationLogement"; "locatif.date_courante"]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1621;
                 start_column = 14;
                 end_line = 1621;
                 end_column = 35;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 794;
             start_column = 10;
             end_line = 794;
             end_column = 23;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_nombre_personnes_a_charge_ : integer =
    try
      log_variable_definition
        ["CalculAllocationLogement"; "locatif.nombre_personnes_à_charge"]
        embed_integer
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1612;
                 start_column = 14;
                 end_line = 1612;
                 end_column = 47;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> nombre_personnes_a_charge_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 795;
             start_column = 10;
             end_line = 795;
             end_column = 35;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_situation_familiale_calcul_apl_ :
      SituationFamilialeCalculAPL.t =
    try
      log_variable_definition
        ["CalculAllocationLogement"; "locatif.situation_familiale_calcul_apl"]
        embed_situation_familiale_calcul_a_p_l
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1624;
                 start_column = 14;
                 end_line = 1624;
                 end_column = 52;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> situation_familiale_calcul_apl_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 796;
             start_column = 10;
             end_line = 796;
             end_column = 40;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_zone_ : ZoneDHabitation.t =
    try
      log_variable_definition
        ["CalculAllocationLogement"; "locatif.zone"]
        embed_zone_d_habitation
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1618;
                 start_column = 14;
                 end_line = 1618;
                 end_column = 26;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> zone_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 797;
             start_column = 10;
             end_line = 797;
             end_column = 14;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_logement_est_chambre_ : bool =
    try
      log_variable_definition
        ["CalculAllocationLogement"; "locatif.logement_est_chambre"]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1644;
                 start_column = 14;
                 end_line = 1644;
                 end_column = 42;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif infos_ ->
               infos_.InformationsCalculAPLLocatif.logement_est_chambre
             | InformationsCalculAPL.InfosLogementFoyer _ -> false
             | InformationsCalculAPL.InfosAccessionPropriete _ -> false))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 798;
             start_column = 10;
             end_line = 798;
             end_column = 30;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_agees_ou_handicap_adultes_hebergees_onereux_particuliers_ :
      bool =
    try
      log_variable_definition
        [
          "CalculAllocationLogement";
          "locatif.âgées_ou_handicap_adultes_hébergées_onéreux_particuliers";
        ]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1657;
                 start_column = 5;
                 end_line = 1657;
                 end_column = 69;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif infos_ ->
               infos_
                 .InformationsCalculAPLLocatif
                  .agees_ou_handicap_adultes_hebergees_onereux_particuliers
             | InformationsCalculAPL.InfosLogementFoyer _ -> false
             | InformationsCalculAPL.InfosAccessionPropriete _ -> false))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 799;
             start_column = 10;
             end_line = 799;
             end_column = 66;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_type_aide_ : TypeAidesPersonnelleLogement.t =
    try
      log_variable_definition
        ["CalculAllocationLogement"; "locatif.type_aide"]
        embed_type_aides_personnelle_logement
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1664;
                 start_column = 14;
                 end_line = 1664;
                 end_column = 31;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> type_aide_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 801;
             start_column = 10;
             end_line = 801;
             end_column = 19;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_colocation_ : bool =
    try
      log_variable_definition
        ["CalculAllocationLogement"; "locatif.colocation"]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1650;
                 start_column = 14;
                 end_line = 1650;
                 end_column = 32;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif infos_ ->
               infos_.InformationsCalculAPLLocatif.colocation
             | InformationsCalculAPL.InfosLogementFoyer _ -> false
             | InformationsCalculAPL.InfosAccessionPropriete _ -> false))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 802;
             start_column = 10;
             end_line = 802;
             end_column = 20;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_reduction_loyer_solidarite_ : money =
    try
      log_variable_definition
        ["CalculAllocationLogement"; "locatif.réduction_loyer_solidarité"]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1665;
                 start_column = 14;
                 end_line = 1665;
                 end_column = 48;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif infos_ ->
               infos_.InformationsCalculAPLLocatif.reduction_loyer_solidarite
             | InformationsCalculAPL.InfosLogementFoyer _ ->
               money_of_cents_string "0"
             | InformationsCalculAPL.InfosAccessionPropriete _ ->
               money_of_cents_string "0"))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 803;
             start_column = 10;
             end_line = 803;
             end_column = 36;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_logement_meuble_d842_2_ : bool =
    try
      log_variable_definition
        ["CalculAllocationLogement"; "locatif.logement_meublé_d842_2"]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1670;
                 start_column = 14;
                 end_line = 1670;
                 end_column = 44;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif infos_ ->
               infos_.InformationsCalculAPLLocatif.logement_meuble_d842_2
             | InformationsCalculAPL.InfosLogementFoyer _ -> false
             | InformationsCalculAPL.InfosAccessionPropriete _ -> false))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 806;
             start_column = 10;
             end_line = 806;
             end_column = 32;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let locatif_dot_changement_logement_d842_4_ : ChangementLogementD8424.t =
    try
      log_variable_definition
        ["CalculAllocationLogement"; "locatif.changement_logement_d842_4"]
        embed_changement_logement_d842_4
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1675;
                 start_column = 14;
                 end_line = 1675;
                 end_column = 48;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match informations_calcul_ with
             | InformationsCalculAPL.InfosLocatif infos_ ->
               infos_.InformationsCalculAPLLocatif.changement_logement_d842_4
             | InformationsCalculAPL.InfosLogementFoyer _ ->
               ChangementLogementD8424.PasDeChangement ()
             | InformationsCalculAPL.InfosAccessionPropriete _ ->
               ChangementLogementD8424.PasDeChangement ()))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 807;
             start_column = 10;
             end_line = 807;
             end_column = 36;
             law_headings =
               [
                 "Secteur locatif";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : CalculAllocationLogementLocatifOut.t =
    log_end_call
      ["CalculAllocationLogement"; "locatif"; "CalculAllocationLogementLocatif"]
      ((log_begin_call
          [
            "CalculAllocationLogement";
            "locatif";
            "CalculAllocationLogementLocatif";
          ]
          calcul_allocation_logement_locatif)
         {
           CalculAllocationLogementLocatifIn.loyer_principal_in =
             locatif_dot_loyer_principal_;
           CalculAllocationLogementLocatifIn.ressources_menage_arrondies_in =
             locatif_dot_ressources_menage_arrondies_;
           CalculAllocationLogementLocatifIn
           .beneficiaire_aide_adulte_ou_enfant_handicapes_in =
             locatif_dot_beneficiaire_aide_adulte_ou_enfant_handicapes_;
           CalculAllocationLogementLocatifIn.date_courante_in =
             locatif_dot_date_courante_;
           CalculAllocationLogementLocatifIn.nombre_personnes_a_charge_in =
             locatif_dot_nombre_personnes_a_charge_;
           CalculAllocationLogementLocatifIn.situation_familiale_calcul_apl_in =
             locatif_dot_situation_familiale_calcul_apl_;
           CalculAllocationLogementLocatifIn.zone_in = locatif_dot_zone_;
           CalculAllocationLogementLocatifIn.logement_est_chambre_in =
             locatif_dot_logement_est_chambre_;
           CalculAllocationLogementLocatifIn
           .agees_ou_handicap_adultes_hebergees_onereux_particuliers_in =
             locatif_dot_agees_ou_handicap_adultes_hebergees_onereux_particuliers_;
           CalculAllocationLogementLocatifIn.type_aide_in =
             locatif_dot_type_aide_;
           CalculAllocationLogementLocatifIn.colocation_in =
             locatif_dot_colocation_;
           CalculAllocationLogementLocatifIn.reduction_loyer_solidarite_in =
             locatif_dot_reduction_loyer_solidarite_;
           CalculAllocationLogementLocatifIn.logement_meuble_d842_2_in =
             locatif_dot_logement_meuble_d842_2_;
           CalculAllocationLogementLocatifIn.changement_logement_d842_4_in =
             locatif_dot_changement_logement_d842_4_;
         })
  in
  let locatif_dot_aide_finale_formule_ : money =
    result_.CalculAllocationLogementLocatifOut.aide_finale_formule_out
  in
  let locatif_dot_traitement_aide_finale_ : money -> money =
    result_.CalculAllocationLogementLocatifOut.traitement_aide_finale_out
  in
  let traitement_aide_finale_ : money -> money =
    log_variable_definition
      ["CalculAllocationLogement"; "traitement_aide_finale"]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_reglementaire.catala_fr";
                     start_line = 1408;
                     start_column = 14;
                     end_line = 1408;
                     end_column = 36;
                     law_headings =
                       [
                         "Article D823-9";
                         "Section 1 : Calcul, liquidation et versement des \
                          aides";
                         "Chapitre III : Modalités de liquidation et de \
                          versement";
                         "Titre II : Dispositions communes aux aides \
                          personnelles au logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie réglementaire";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 match categorie_calcul_apl_ with
                 | CategorieCalculAPL.Location _ ->
                   log_end_call
                     [
                       "CalculAllocationLogementLocatif";
                       "traitement_aide_finale";
                     ]
                     (log_variable_definition
                        [
                          "CalculAllocationLogementLocatif";
                          "traitement_aide_finale";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAllocationLogementLocatif";
                              "traitement_aide_finale";
                            ]
                            locatif_dot_traitement_aide_finale_)
                           (log_variable_definition
                              [
                                "CalculAllocationLogementLocatif";
                                "traitement_aide_finale";
                                "input";
                              ]
                              embed_money param_)))
                 | CategorieCalculAPL.AccessionPropriete _ ->
                   log_end_call
                     [
                       "CalculAllocationLogementAccessionPropriété";
                       "traitement_aide_finale_montant_minimal";
                     ]
                     (log_variable_definition
                        [
                          "CalculAllocationLogementAccessionPropriété";
                          "traitement_aide_finale_montant_minimal";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAllocationLogementAccessionPropriété";
                              "traitement_aide_finale_montant_minimal";
                            ]
                            accession_propriete_dot_traitement_aide_finale_montant_minimal_)
                           (log_variable_definition
                              [
                                "CalculAllocationLogementAccessionPropriété";
                                "traitement_aide_finale_montant_minimal";
                                "input";
                              ]
                              embed_money param_)))
                 | CategorieCalculAPL.LogementFoyer _ ->
                   log_end_call
                     [
                       "CalculAllocationLogementFoyer";
                       "traitement_aide_finale_montant_minimal";
                     ]
                     (log_variable_definition
                        [
                          "CalculAllocationLogementFoyer";
                          "traitement_aide_finale_montant_minimal";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAllocationLogementFoyer";
                              "traitement_aide_finale_montant_minimal";
                            ]
                            logement_foyer_dot_traitement_aide_finale_montant_minimal_)
                           (log_variable_definition
                              [
                                "CalculAllocationLogementFoyer";
                                "traitement_aide_finale_montant_minimal";
                                "input";
                              ]
                              embed_money param_))))
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 1026;
                    start_column = 10;
                    end_line = 1026;
                    end_column = 32;
                    law_headings =
                      [
                        "Tous secteurs";
                        "Secteur logement-foyer";
                        "Calcul du montant de l'allocation logement";
                        "Prologue : aides au logement";
                      ];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 1026;
                start_column = 10;
                end_line = 1026;
                end_column = 32;
                law_headings =
                  [
                    "Tous secteurs";
                    "Secteur logement-foyer";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let aide_finale_formule_ : money =
    log_variable_definition
      ["CalculAllocationLogement"; "aide_finale_formule"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_reglementaire.catala_fr";
                 start_line = 1403;
                 start_column = 14;
                 end_line = 1403;
                 end_column = 33;
                 law_headings =
                   [
                     "Article D823-9";
                     "Section 1 : Calcul, liquidation et versement des aides";
                     "Chapitre III : Modalités de liquidation et de versement";
                     "Titre II : Dispositions communes aux aides personnelles \
                      au logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie réglementaire";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match categorie_calcul_apl_ with
             | CategorieCalculAPL.Location _ -> locatif_dot_aide_finale_formule_
             | CategorieCalculAPL.AccessionPropriete _ ->
               accession_propriete_dot_aide_finale_formule_
             | CategorieCalculAPL.LogementFoyer _ ->
               logement_foyer_dot_aide_finale_formule_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 1025;
                start_column = 10;
                end_line = 1025;
                end_column = 29;
                law_headings =
                  [
                    "Tous secteurs";
                    "Secteur logement-foyer";
                    "Calcul du montant de l'allocation logement";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let (_ : unit) =
    if
      try
        if
          match categorie_calcul_apl_ with
          | CategorieCalculAPL.Location _ -> false
          | CategorieCalculAPL.AccessionPropriete _ -> true
          | CategorieCalculAPL.LogementFoyer _ -> false
        then
          match informations_calcul_ with
          | InformationsCalculAPL.InfosLocatif _ -> false
          | InformationsCalculAPL.InfosLogementFoyer _ -> false
          | InformationsCalculAPL.InfosAccessionPropriete _ -> true
        else true
      with EmptyError ->
        raise
          (NoValueProvided
             {
               filename =
                 "examples/aides_logement/code_construction_reglementaire.catala_fr";
               start_line = 1603;
               start_column = 5;
               end_line = 1605;
               end_column = 15;
               law_headings =
                 [
                   "Article D823-9";
                   "Section 1 : Calcul, liquidation et versement des aides";
                   "Chapitre III : Modalités de liquidation et de versement";
                   "Titre II : Dispositions communes aux aides personnelles au \
                    logement";
                   "Livre VIII : Aides personnelles au logement";
                   "Partie réglementaire";
                   "Code de la construction et de l'habitation";
                 ];
             })
    then ()
    else raise AssertionFailed
  in
  let (_ : unit) =
    if
      try
        if
          match categorie_calcul_apl_ with
          | CategorieCalculAPL.Location _ -> false
          | CategorieCalculAPL.AccessionPropriete _ -> false
          | CategorieCalculAPL.LogementFoyer _ -> true
        then
          match informations_calcul_ with
          | InformationsCalculAPL.InfosLocatif _ -> false
          | InformationsCalculAPL.InfosLogementFoyer _ -> true
          | InformationsCalculAPL.InfosAccessionPropriete _ -> false
        else true
      with EmptyError ->
        raise
          (NoValueProvided
             {
               filename =
                 "examples/aides_logement/code_construction_reglementaire.catala_fr";
               start_line = 1599;
               start_column = 5;
               end_line = 1601;
               end_column = 15;
               law_headings =
                 [
                   "Article D823-9";
                   "Section 1 : Calcul, liquidation et versement des aides";
                   "Chapitre III : Modalités de liquidation et de versement";
                   "Titre II : Dispositions communes aux aides personnelles au \
                    logement";
                   "Livre VIII : Aides personnelles au logement";
                   "Partie réglementaire";
                   "Code de la construction et de l'habitation";
                 ];
             })
    then ()
    else raise AssertionFailed
  in
  let (_ : unit) =
    if
      try
        if
          match categorie_calcul_apl_ with
          | CategorieCalculAPL.Location _ -> true
          | CategorieCalculAPL.AccessionPropriete _ -> false
          | CategorieCalculAPL.LogementFoyer _ -> false
        then
          match informations_calcul_ with
          | InformationsCalculAPL.InfosLocatif _ -> true
          | InformationsCalculAPL.InfosLogementFoyer _ -> false
          | InformationsCalculAPL.InfosAccessionPropriete _ -> false
        else true
      with EmptyError ->
        raise
          (NoValueProvided
             {
               filename =
                 "examples/aides_logement/code_construction_reglementaire.catala_fr";
               start_line = 1595;
               start_column = 5;
               end_line = 1597;
               end_column = 15;
               law_headings =
                 [
                   "Article D823-9";
                   "Section 1 : Calcul, liquidation et versement des aides";
                   "Chapitre III : Modalités de liquidation et de versement";
                   "Titre II : Dispositions communes aux aides personnelles au \
                    logement";
                   "Livre VIII : Aides personnelles au logement";
                   "Partie réglementaire";
                   "Code de la construction et de l'habitation";
                 ];
             })
    then ()
    else raise AssertionFailed
  in
  {
    CalculAllocationLogementOut.aide_finale_formule_out = aide_finale_formule_;
    CalculAllocationLogementOut.traitement_aide_finale_out =
      traitement_aide_finale_;
  }

let calculette_aides_au_logement
    (calculette_aides_au_logement_in : CalculetteAidesAuLogementIn.t) :
    CalculetteAidesAuLogementOut.t =
  let menage_ : Menage.t =
    calculette_aides_au_logement_in.CalculetteAidesAuLogementIn.menage_in
  in
  let demandeur_ : Demandeur.t =
    calculette_aides_au_logement_in.CalculetteAidesAuLogementIn.demandeur_in
  in
  let informations_calcul_ : InformationsCalculAPL.t =
    calculette_aides_au_logement_in
      .CalculetteAidesAuLogementIn.informations_calcul_in
  in
  let date_courante_ : date =
    calculette_aides_au_logement_in.CalculetteAidesAuLogementIn.date_courante_in
  in
  let ressources_menage_prises_en_compte_ : money =
    calculette_aides_au_logement_in
      .CalculetteAidesAuLogementIn.ressources_menage_prises_en_compte_in
  in
  let eligibilite_allocation_logement_dot_date_courante_ : date =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogement";
          "éligibilité_allocation_logement.date_courante";
        ]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1105;
                 start_column = 14;
                 end_line = 1105;
                 end_column = 59;
                 law_headings =
                   ["Calculette globale"; "Prologue : aides au logement"];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 423;
             start_column = 10;
             end_line = 423;
             end_column = 23;
             law_headings =
               [
                 "Éligibilité aux allocations de logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let eligibilite_allocation_logement_dot_menage_ : Menage.t =
    try
      log_variable_definition
        ["CalculetteAidesAuLogement"; "éligibilité_allocation_logement.ménage"]
        embed_menage
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1097;
                 start_column = 14;
                 end_line = 1097;
                 end_column = 52;
                 law_headings =
                   ["Calculette globale"; "Prologue : aides au logement"];
               }
               true)
           (fun (_ : _) -> menage_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 424;
             start_column = 10;
             end_line = 424;
             end_column = 16;
             law_headings =
               [
                 "Éligibilité aux allocations de logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let eligibilite_allocation_logement_dot_demandeur_ : Demandeur.t =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogement";
          "éligibilité_allocation_logement.demandeur";
        ]
        embed_demandeur
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1101;
                 start_column = 14;
                 end_line = 1101;
                 end_column = 55;
                 law_headings =
                   ["Calculette globale"; "Prologue : aides au logement"];
               }
               true)
           (fun (_ : _) -> demandeur_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 425;
             start_column = 10;
             end_line = 425;
             end_column = 19;
             law_headings =
               [
                 "Éligibilité aux allocations de logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let eligibilite_allocation_logement_dot_beneficie_aide_personnalisee_logement_
      : bool =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogement";
          "éligibilité_allocation_logement.bénéficie_aide_personnalisée_logement";
        ]
        embed_bool
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_legislatif.catala_fr";
                 start_line = 1066;
                 start_column = 5;
                 end_line = 1066;
                 end_column = 74;
                 law_headings =
                   [
                     "Article L841-2";
                     "Chapitre Ier : Champ d'application";
                     "Titre IV : Allocations de logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie législative";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) -> false))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 426;
             start_column = 10;
             end_line = 426;
             end_column = 47;
             law_headings =
               [
                 "Éligibilité aux allocations de logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let eligibilite_allocation_logement_dot_informations_calcul_ :
      InformationsCalculAPL.t =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogement";
          "éligibilité_allocation_logement.informations_calcul";
        ]
        embed_informations_calcul_a_p_l
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1107;
                 start_column = 14;
                 end_line = 1107;
                 end_column = 65;
                 law_headings =
                   ["Calculette globale"; "Prologue : aides au logement"];
               }
               true)
           (fun (_ : _) -> informations_calcul_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 427;
             start_column = 10;
             end_line = 427;
             end_column = 29;
             law_headings =
               [
                 "Éligibilité aux allocations de logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : EligibiliteAllocationLogementOut.t =
    log_end_call
      [
        "CalculetteAidesAuLogement";
        "éligibilité_allocation_logement";
        "ÉligibilitéAllocationLogement";
      ]
      ((log_begin_call
          [
            "CalculetteAidesAuLogement";
            "éligibilité_allocation_logement";
            "ÉligibilitéAllocationLogement";
          ]
          eligibilite_allocation_logement)
         {
           EligibiliteAllocationLogementIn.date_courante_in =
             eligibilite_allocation_logement_dot_date_courante_;
           EligibiliteAllocationLogementIn.menage_in =
             eligibilite_allocation_logement_dot_menage_;
           EligibiliteAllocationLogementIn.demandeur_in =
             eligibilite_allocation_logement_dot_demandeur_;
           EligibiliteAllocationLogementIn
           .beneficie_aide_personnalisee_logement_in =
             eligibilite_allocation_logement_dot_beneficie_aide_personnalisee_logement_;
           EligibiliteAllocationLogementIn.informations_calcul_in =
             eligibilite_allocation_logement_dot_informations_calcul_;
         })
  in
  let eligibilite_allocation_logement_dot_eligibilite_avec_condition_logement_ :
      EligibiliteAllocationLogement.t =
    result_
      .EligibiliteAllocationLogementOut.eligibilite_avec_condition_logement_out
  in
  let eligibilite_allocation_logement_dot_nombre_personnes_a_charge_prises_en_compte_
      : integer =
    result_
      .EligibiliteAllocationLogementOut
       .nombre_personnes_a_charge_prises_en_compte_out
  in
  let eligibilite_allocation_logement_dot_coefficents_enfants_garde_alternee_pris_en_compte_
      : decimal array =
    result_
      .EligibiliteAllocationLogementOut
       .coefficents_enfants_garde_alternee_pris_en_compte_out
  in
  let eligibilite_aide_personnalisee_logement_dot_menage_ : Menage.t =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogement";
          "éligibilité_aide_personnalisée_logement.ménage";
        ]
        embed_menage
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1095;
                 start_column = 14;
                 end_line = 1095;
                 end_column = 60;
                 law_headings =
                   ["Calculette globale"; "Prologue : aides au logement"];
               }
               true)
           (fun (_ : _) -> menage_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 386;
             start_column = 10;
             end_line = 386;
             end_column = 16;
             law_headings =
               [
                 "Éligibilité à l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let eligibilite_aide_personnalisee_logement_dot_demandeur_ : Demandeur.t =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogement";
          "éligibilité_aide_personnalisée_logement.demandeur";
        ]
        embed_demandeur
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1099;
                 start_column = 14;
                 end_line = 1099;
                 end_column = 63;
                 law_headings =
                   ["Calculette globale"; "Prologue : aides au logement"];
               }
               true)
           (fun (_ : _) -> demandeur_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 387;
             start_column = 10;
             end_line = 387;
             end_column = 19;
             law_headings =
               [
                 "Éligibilité à l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let eligibilite_aide_personnalisee_logement_dot_date_courante_ : date =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogement";
          "éligibilité_aide_personnalisée_logement.date_courante";
        ]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1103;
                 start_column = 14;
                 end_line = 1103;
                 end_column = 67;
                 law_headings =
                   ["Calculette globale"; "Prologue : aides au logement"];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 388;
             start_column = 17;
             end_line = 388;
             end_column = 30;
             law_headings =
               [
                 "Éligibilité à l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : EligibiliteAidePersonnaliseeLogementOut.t =
    log_end_call
      [
        "CalculetteAidesAuLogement";
        "éligibilité_aide_personnalisée_logement";
        "ÉligibilitéAidePersonnaliséeLogement";
      ]
      ((log_begin_call
          [
            "CalculetteAidesAuLogement";
            "éligibilité_aide_personnalisée_logement";
            "ÉligibilitéAidePersonnaliséeLogement";
          ]
          eligibilite_aide_personnalisee_logement)
         {
           EligibiliteAidePersonnaliseeLogementIn.menage_in =
             eligibilite_aide_personnalisee_logement_dot_menage_;
           EligibiliteAidePersonnaliseeLogementIn.demandeur_in =
             eligibilite_aide_personnalisee_logement_dot_demandeur_;
           EligibiliteAidePersonnaliseeLogementIn.date_courante_in =
             eligibilite_aide_personnalisee_logement_dot_date_courante_;
         })
  in
  let eligibilite_aide_personnalisee_logement_dot_date_courante_ : date =
    result_.EligibiliteAidePersonnaliseeLogementOut.date_courante_out
  in
  let eligibilite_aide_personnalisee_logement_dot_eligibilite_ : bool =
    result_.EligibiliteAidePersonnaliseeLogementOut.eligibilite_out
  in
  let eligibilite_aide_personnalisee_logement_dot_nombre_personnes_a_charge_prises_en_compte_
      : integer =
    result_
      .EligibiliteAidePersonnaliseeLogementOut
       .nombre_personnes_a_charge_prises_en_compte_out
  in
  let eligibilite_aide_personnalisee_logement_dot_coefficents_enfants_garde_alternee_pris_en_compte_
      : decimal array =
    result_
      .EligibiliteAidePersonnaliseeLogementOut
       .coefficents_enfants_garde_alternee_pris_en_compte_out
  in
  let calcul_allocation_logement_dot_mode_occupation_ : ModeOccupation.t =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogement";
          "calcul_allocation_logement.mode_occupation";
        ]
        embed_mode_occupation
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1120;
                 start_column = 14;
                 end_line = 1120;
                 end_column = 56;
                 law_headings =
                   ["Calculette globale"; "Prologue : aides au logement"];
               }
               true)
           (fun (_ : _) -> menage_.Menage.logement.Logement.mode_occupation))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 1006;
             start_column = 10;
             end_line = 1006;
             end_column = 25;
             law_headings =
               [
                 "Tous secteurs";
                 "Secteur logement-foyer";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_allocation_logement_dot_informations_calcul_ :
      InformationsCalculAPL.t =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogement";
          "calcul_allocation_logement.informations_calcul";
        ]
        embed_informations_calcul_a_p_l
        (handle_default
           [|
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default [||]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/prologue.catala_fr";
                             start_line = 1116;
                             start_column = 14;
                             end_line = 1116;
                             end_column = 60;
                             law_headings =
                               [
                                 "Calculette globale";
                                 "Prologue : aides au logement";
                               ];
                           }
                           true)
                       (fun (_ : _) -> informations_calcul_));
                 |]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename = "examples/aides_logement/prologue.catala_fr";
                       start_line = 1112;
                       start_column = 14;
                       end_line = 1112;
                       end_column = 60;
                       law_headings =
                         ["Calculette globale"; "Prologue : aides au logement"];
                     }
                     true)
                 (fun (_ : _) -> informations_calcul_));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 1007;
             start_column = 10;
             end_line = 1007;
             end_column = 29;
             law_headings =
               [
                 "Tous secteurs";
                 "Secteur logement-foyer";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_allocation_logement_dot_ressources_menage_sans_arrondi_ : money =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogement";
          "calcul_allocation_logement.ressources_ménage_sans_arrondi";
        ]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1124;
                 start_column = 14;
                 end_line = 1124;
                 end_column = 58;
                 law_headings =
                   ["Calculette globale"; "Prologue : aides au logement"];
               }
               true)
           (fun (_ : _) -> ressources_menage_prises_en_compte_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 1008;
             start_column = 10;
             end_line = 1008;
             end_column = 27;
             law_headings =
               [
                 "Tous secteurs";
                 "Secteur logement-foyer";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_allocation_logement_dot_situation_familiale_ : SituationFamiliale.t
      =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogement";
          "calcul_allocation_logement.situation_familiale";
        ]
        embed_situation_familiale
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1128;
                 start_column = 14;
                 end_line = 1128;
                 end_column = 60;
                 law_headings =
                   ["Calculette globale"; "Prologue : aides au logement"];
               }
               true)
           (fun (_ : _) -> menage_.Menage.situation_familiale))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 1011;
             start_column = 10;
             end_line = 1011;
             end_column = 29;
             law_headings =
               [
                 "Tous secteurs";
                 "Secteur logement-foyer";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_allocation_logement_dot_nombre_personnes_a_charge_ : integer =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogement";
          "calcul_allocation_logement.nombre_personnes_à_charge";
        ]
        embed_integer
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1135;
                 start_column = 14;
                 end_line = 1135;
                 end_column = 66;
                 law_headings =
                   ["Calculette globale"; "Prologue : aides au logement"];
               }
               true)
           (fun (_ : _) ->
             eligibilite_allocation_logement_dot_nombre_personnes_a_charge_prises_en_compte_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 1012;
             start_column = 10;
             end_line = 1012;
             end_column = 35;
             law_headings =
               [
                 "Tous secteurs";
                 "Secteur logement-foyer";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_allocation_logement_dot_zone_ : ZoneDHabitation.t =
    try
      log_variable_definition
        ["CalculetteAidesAuLogement"; "calcul_allocation_logement.zone"]
        embed_zone_d_habitation
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1139;
                 start_column = 14;
                 end_line = 1139;
                 end_column = 45;
                 law_headings =
                   ["Calculette globale"; "Prologue : aides au logement"];
               }
               true)
           (fun (_ : _) -> menage_.Menage.logement.Logement.zone))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 1013;
             start_column = 10;
             end_line = 1013;
             end_column = 14;
             law_headings =
               [
                 "Tous secteurs";
                 "Secteur logement-foyer";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_allocation_logement_dot_date_courante_ : date =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogement"; "calcul_allocation_logement.date_courante";
        ]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1143;
                 start_column = 14;
                 end_line = 1143;
                 end_column = 54;
                 law_headings =
                   ["Calculette globale"; "Prologue : aides au logement"];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 1014;
             start_column = 10;
             end_line = 1014;
             end_column = 23;
             law_headings =
               [
                 "Tous secteurs";
                 "Secteur logement-foyer";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_allocation_logement_dot_type_aide_ : TypeAidesPersonnelleLogement.t
      =
    try
      log_variable_definition
        ["CalculetteAidesAuLogement"; "calcul_allocation_logement.type_aide"]
        embed_type_aides_personnelle_logement
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_legislatif.catala_fr";
                 start_line = 1082;
                 start_column = 14;
                 end_line = 1082;
                 end_column = 50;
                 law_headings =
                   [
                     "Article L841-2";
                     "Chapitre Ier : Champ d'application";
                     "Titre IV : Allocations de logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie législative";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             match
               eligibilite_allocation_logement_dot_eligibilite_avec_condition_logement_
             with
             | EligibiliteAllocationLogement.PasEligible _ ->
               TypeAidesPersonnelleLogement.AllocationLogementSociale ()
             | EligibiliteAllocationLogement.AllocationLogementFamiliale _ ->
               TypeAidesPersonnelleLogement.AllocationLogementFamiliale ()
             | EligibiliteAllocationLogement.AllocationLogementSociale _ ->
               TypeAidesPersonnelleLogement.AllocationLogementSociale ()))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 1015;
             start_column = 10;
             end_line = 1015;
             end_column = 19;
             law_headings =
               [
                 "Tous secteurs";
                 "Secteur logement-foyer";
                 "Calcul du montant de l'allocation logement";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : CalculAllocationLogementOut.t =
    log_end_call
      [
        "CalculetteAidesAuLogement";
        "calcul_allocation_logement";
        "CalculAllocationLogement";
      ]
      ((log_begin_call
          [
            "CalculetteAidesAuLogement";
            "calcul_allocation_logement";
            "CalculAllocationLogement";
          ]
          calcul_allocation_logement)
         {
           CalculAllocationLogementIn.mode_occupation_in =
             calcul_allocation_logement_dot_mode_occupation_;
           CalculAllocationLogementIn.informations_calcul_in =
             calcul_allocation_logement_dot_informations_calcul_;
           CalculAllocationLogementIn.ressources_menage_sans_arrondi_in =
             calcul_allocation_logement_dot_ressources_menage_sans_arrondi_;
           CalculAllocationLogementIn.situation_familiale_in =
             calcul_allocation_logement_dot_situation_familiale_;
           CalculAllocationLogementIn.nombre_personnes_a_charge_in =
             calcul_allocation_logement_dot_nombre_personnes_a_charge_;
           CalculAllocationLogementIn.zone_in =
             calcul_allocation_logement_dot_zone_;
           CalculAllocationLogementIn.date_courante_in =
             calcul_allocation_logement_dot_date_courante_;
           CalculAllocationLogementIn.type_aide_in =
             calcul_allocation_logement_dot_type_aide_;
         })
  in
  let calcul_allocation_logement_dot_aide_finale_formule_ : money =
    result_.CalculAllocationLogementOut.aide_finale_formule_out
  in
  let calcul_allocation_logement_dot_traitement_aide_finale_ : money -> money =
    result_.CalculAllocationLogementOut.traitement_aide_finale_out
  in
  let calcul_aide_personnalisee_logement_dot_mode_occupation_ : ModeOccupation.t
      =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogement";
          "calcul_aide_personnalisée_logement.mode_occupation";
        ]
        embed_mode_occupation
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1118;
                 start_column = 14;
                 end_line = 1118;
                 end_column = 64;
                 law_headings =
                   ["Calculette globale"; "Prologue : aides au logement"];
               }
               true)
           (fun (_ : _) -> menage_.Menage.logement.Logement.mode_occupation))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 751;
             start_column = 10;
             end_line = 751;
             end_column = 25;
             law_headings =
               [
                 "Tous secteurs";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_aide_personnalisee_logement_dot_type_aide_ :
      TypeAidesPersonnelleLogement.t =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogement";
          "calcul_aide_personnalisée_logement.type_aide";
        ]
        embed_type_aides_personnelle_logement
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_legislatif.catala_fr";
                 start_line = 1080;
                 start_column = 14;
                 end_line = 1080;
                 end_column = 58;
                 law_headings =
                   [
                     "Article L841-2";
                     "Chapitre Ier : Champ d'application";
                     "Titre IV : Allocations de logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie législative";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             TypeAidesPersonnelleLogement.AidePersonnaliseeLogement ()))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 752;
             start_column = 10;
             end_line = 752;
             end_column = 19;
             law_headings =
               [
                 "Tous secteurs";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_aide_personnalisee_logement_dot_informations_calcul_ :
      InformationsCalculAPL.t =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogement";
          "calcul_aide_personnalisée_logement.informations_calcul";
        ]
        embed_informations_calcul_a_p_l
        (handle_default
           [|
             (fun (_ : _) ->
               handle_default
                 [|
                   (fun (_ : _) ->
                     handle_default [||]
                       (fun (_ : _) ->
                         log_decision_taken
                           {
                             filename =
                               "examples/aides_logement/prologue.catala_fr";
                             start_line = 1114;
                             start_column = 14;
                             end_line = 1114;
                             end_column = 68;
                             law_headings =
                               [
                                 "Calculette globale";
                                 "Prologue : aides au logement";
                               ];
                           }
                           true)
                       (fun (_ : _) -> informations_calcul_));
                 |]
                 (fun (_ : _) ->
                   log_decision_taken
                     {
                       filename = "examples/aides_logement/prologue.catala_fr";
                       start_line = 1110;
                       start_column = 14;
                       end_line = 1110;
                       end_column = 68;
                       law_headings =
                         ["Calculette globale"; "Prologue : aides au logement"];
                     }
                     true)
                 (fun (_ : _) -> informations_calcul_));
           |]
           (fun (_ : _) -> false)
           (fun (_ : _) -> raise EmptyError))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 753;
             start_column = 10;
             end_line = 753;
             end_column = 29;
             law_headings =
               [
                 "Tous secteurs";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_aide_personnalisee_logement_dot_ressources_menage_sans_arrondi_ :
      money =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogement";
          "calcul_aide_personnalisée_logement.ressources_ménage_sans_arrondi";
        ]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1122;
                 start_column = 14;
                 end_line = 1122;
                 end_column = 66;
                 law_headings =
                   ["Calculette globale"; "Prologue : aides au logement"];
               }
               true)
           (fun (_ : _) -> ressources_menage_prises_en_compte_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 754;
             start_column = 10;
             end_line = 754;
             end_column = 27;
             law_headings =
               [
                 "Tous secteurs";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_aide_personnalisee_logement_dot_situation_familiale_ :
      SituationFamiliale.t =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogement";
          "calcul_aide_personnalisée_logement.situation_familiale";
        ]
        embed_situation_familiale
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1126;
                 start_column = 14;
                 end_line = 1126;
                 end_column = 68;
                 law_headings =
                   ["Calculette globale"; "Prologue : aides au logement"];
               }
               true)
           (fun (_ : _) -> menage_.Menage.situation_familiale))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 757;
             start_column = 10;
             end_line = 757;
             end_column = 29;
             law_headings =
               [
                 "Tous secteurs";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_aide_personnalisee_logement_dot_nombre_personnes_a_charge_ :
      integer =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogement";
          "calcul_aide_personnalisée_logement.nombre_personnes_à_charge";
        ]
        embed_integer
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1131;
                 start_column = 5;
                 end_line = 1131;
                 end_column = 65;
                 law_headings =
                   ["Calculette globale"; "Prologue : aides au logement"];
               }
               true)
           (fun (_ : _) ->
             eligibilite_aide_personnalisee_logement_dot_nombre_personnes_a_charge_prises_en_compte_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 758;
             start_column = 10;
             end_line = 758;
             end_column = 35;
             law_headings =
               [
                 "Tous secteurs";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_aide_personnalisee_logement_dot_zone_ : ZoneDHabitation.t =
    try
      log_variable_definition
        ["CalculetteAidesAuLogement"; "calcul_aide_personnalisée_logement.zone"]
        embed_zone_d_habitation
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1137;
                 start_column = 14;
                 end_line = 1137;
                 end_column = 53;
                 law_headings =
                   ["Calculette globale"; "Prologue : aides au logement"];
               }
               true)
           (fun (_ : _) -> menage_.Menage.logement.Logement.zone))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 759;
             start_column = 10;
             end_line = 759;
             end_column = 14;
             law_headings =
               [
                 "Tous secteurs";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let calcul_aide_personnalisee_logement_dot_date_courante_ : date =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogement";
          "calcul_aide_personnalisée_logement.date_courante";
        ]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1141;
                 start_column = 14;
                 end_line = 1141;
                 end_column = 62;
                 law_headings =
                   ["Calculette globale"; "Prologue : aides au logement"];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 760;
             start_column = 10;
             end_line = 760;
             end_column = 23;
             law_headings =
               [
                 "Tous secteurs";
                 "Calcul du montant de l'aide personnalisée au logement";
                 "Déclarations des champs d'application";
                 "Prologue : aides au logement";
               ];
           })
  in
  let result_ : CalculAidePersonnaliseeLogementOut.t =
    log_end_call
      [
        "CalculetteAidesAuLogement";
        "calcul_aide_personnalisée_logement";
        "CalculAidePersonnaliséeLogement";
      ]
      ((log_begin_call
          [
            "CalculetteAidesAuLogement";
            "calcul_aide_personnalisée_logement";
            "CalculAidePersonnaliséeLogement";
          ]
          calcul_aide_personnalisee_logement)
         {
           CalculAidePersonnaliseeLogementIn.mode_occupation_in =
             calcul_aide_personnalisee_logement_dot_mode_occupation_;
           CalculAidePersonnaliseeLogementIn.type_aide_in =
             calcul_aide_personnalisee_logement_dot_type_aide_;
           CalculAidePersonnaliseeLogementIn.informations_calcul_in =
             calcul_aide_personnalisee_logement_dot_informations_calcul_;
           CalculAidePersonnaliseeLogementIn.ressources_menage_sans_arrondi_in =
             calcul_aide_personnalisee_logement_dot_ressources_menage_sans_arrondi_;
           CalculAidePersonnaliseeLogementIn.situation_familiale_in =
             calcul_aide_personnalisee_logement_dot_situation_familiale_;
           CalculAidePersonnaliseeLogementIn.nombre_personnes_a_charge_in =
             calcul_aide_personnalisee_logement_dot_nombre_personnes_a_charge_;
           CalculAidePersonnaliseeLogementIn.zone_in =
             calcul_aide_personnalisee_logement_dot_zone_;
           CalculAidePersonnaliseeLogementIn.date_courante_in =
             calcul_aide_personnalisee_logement_dot_date_courante_;
         })
  in
  let calcul_aide_personnalisee_logement_dot_aide_finale_formule_ : money =
    result_.CalculAidePersonnaliseeLogementOut.aide_finale_formule_out
  in
  let calcul_aide_personnalisee_logement_dot_traitement_aide_finale_ :
      money -> money =
    result_.CalculAidePersonnaliseeLogementOut.traitement_aide_finale_out
  in
  let coefficents_enfants_garde_alternee_pris_en_compte_ : decimal array =
    log_variable_definition
      [
        "CalculetteAidesAuLogement";
        "coefficents_enfants_garde_alternée_pris_en_compte";
      ]
      (embed_array embed_decimal)
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1146;
                 start_column = 14;
                 end_line = 1146;
                 end_column = 63;
                 law_headings =
                   ["Calculette globale"; "Prologue : aides au logement"];
               }
               true)
           (fun (_ : _) ->
             eligibilite_aide_personnalisee_logement_dot_coefficents_enfants_garde_alternee_pris_en_compte_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 1091;
                start_column = 10;
                end_line = 1091;
                end_column = 59;
                law_headings =
                  ["Calculette globale"; "Prologue : aides au logement"];
              }))
  in
  let eligibilite_ : bool =
    log_variable_definition
      ["CalculetteAidesAuLogement"; "éligibilité"]
      embed_bool
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_legislatif.catala_fr";
                 start_line = 1071;
                 start_column = 14;
                 end_line = 1071;
                 end_column = 25;
                 law_headings =
                   [
                     "Article L841-2";
                     "Chapitre Ier : Champ d'application";
                     "Titre IV : Allocations de logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie législative";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             eligibilite_aide_personnalisee_logement_dot_eligibilite_
             ||
             match
               eligibilite_allocation_logement_dot_eligibilite_avec_condition_logement_
             with
             | EligibiliteAllocationLogement.PasEligible _ -> false
             | EligibiliteAllocationLogement.AllocationLogementFamiliale _ ->
               true
             | EligibiliteAllocationLogement.AllocationLogementSociale _ -> true)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 1088;
                start_column = 10;
                end_line = 1088;
                end_column = 21;
                law_headings =
                  ["Calculette globale"; "Prologue : aides au logement"];
              }))
  in
  let traitement_aide_finale_ : money -> money =
    log_variable_definition
      ["CalculetteAidesAuLogement"; "traitement_aide_finale"]
      unembeddable
      (try
         fun (param_ : money) ->
           try
             handle_default [||]
               (fun (_ : _) ->
                 log_decision_taken
                   {
                     filename =
                       "examples/aides_logement/code_construction_legislatif.catala_fr";
                     start_line = 1109;
                     start_column = 14;
                     end_line = 1109;
                     end_column = 36;
                     law_headings =
                       [
                         "Article L841-2";
                         "Chapitre Ier : Champ d'application";
                         "Titre IV : Allocations de logement";
                         "Livre VIII : Aides personnelles au logement";
                         "Partie législative";
                         "Code de la construction et de l'habitation";
                       ];
                   }
                   true)
               (fun (_ : _) ->
                 if not eligibilite_ then param_
                 else if
                   eligibilite_aide_personnalisee_logement_dot_eligibilite_
                   && not
                        (match
                           eligibilite_allocation_logement_dot_eligibilite_avec_condition_logement_
                         with
                        | EligibiliteAllocationLogement.PasEligible _ -> true
                        | EligibiliteAllocationLogement
                          .AllocationLogementFamiliale _ ->
                          false
                        | EligibiliteAllocationLogement
                          .AllocationLogementSociale _ ->
                          false)
                 then
                   if
                     log_end_call
                       [
                         "CalculAidePersonnaliséeLogement";
                         "traitement_aide_finale";
                       ]
                       (log_variable_definition
                          [
                            "CalculAidePersonnaliséeLogement";
                            "traitement_aide_finale";
                            "output";
                          ]
                          embed_money
                          ((log_begin_call
                              [
                                "CalculAidePersonnaliséeLogement";
                                "traitement_aide_finale";
                              ]
                              calcul_aide_personnalisee_logement_dot_traitement_aide_finale_)
                             (log_variable_definition
                                [
                                  "CalculAidePersonnaliséeLogement";
                                  "traitement_aide_finale";
                                  "input";
                                ]
                                embed_money
                                calcul_aide_personnalisee_logement_dot_aide_finale_formule_)))
                     >$ log_end_call
                          ["CalculAllocationLogement"; "traitement_aide_finale"]
                          (log_variable_definition
                             [
                               "CalculAllocationLogement";
                               "traitement_aide_finale";
                               "output";
                             ]
                             embed_money
                             ((log_begin_call
                                 [
                                   "CalculAllocationLogement";
                                   "traitement_aide_finale";
                                 ]
                                 calcul_allocation_logement_dot_traitement_aide_finale_)
                                (log_variable_definition
                                   [
                                     "CalculAllocationLogement";
                                     "traitement_aide_finale";
                                     "input";
                                   ]
                                   embed_money
                                   calcul_allocation_logement_dot_aide_finale_formule_)))
                   then
                     log_end_call
                       [
                         "CalculAidePersonnaliséeLogement";
                         "traitement_aide_finale";
                       ]
                       (log_variable_definition
                          [
                            "CalculAidePersonnaliséeLogement";
                            "traitement_aide_finale";
                            "output";
                          ]
                          embed_money
                          ((log_begin_call
                              [
                                "CalculAidePersonnaliséeLogement";
                                "traitement_aide_finale";
                              ]
                              calcul_aide_personnalisee_logement_dot_traitement_aide_finale_)
                             (log_variable_definition
                                [
                                  "CalculAidePersonnaliséeLogement";
                                  "traitement_aide_finale";
                                  "input";
                                ]
                                embed_money param_)))
                   else
                     log_end_call
                       ["CalculAllocationLogement"; "traitement_aide_finale"]
                       (log_variable_definition
                          [
                            "CalculAllocationLogement";
                            "traitement_aide_finale";
                            "output";
                          ]
                          embed_money
                          ((log_begin_call
                              [
                                "CalculAllocationLogement";
                                "traitement_aide_finale";
                              ]
                              calcul_allocation_logement_dot_traitement_aide_finale_)
                             (log_variable_definition
                                [
                                  "CalculAllocationLogement";
                                  "traitement_aide_finale";
                                  "input";
                                ]
                                embed_money param_)))
                 else if
                   eligibilite_aide_personnalisee_logement_dot_eligibilite_
                 then
                   log_end_call
                     [
                       "CalculAidePersonnaliséeLogement";
                       "traitement_aide_finale";
                     ]
                     (log_variable_definition
                        [
                          "CalculAidePersonnaliséeLogement";
                          "traitement_aide_finale";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAidePersonnaliséeLogement";
                              "traitement_aide_finale";
                            ]
                            calcul_aide_personnalisee_logement_dot_traitement_aide_finale_)
                           (log_variable_definition
                              [
                                "CalculAidePersonnaliséeLogement";
                                "traitement_aide_finale";
                                "input";
                              ]
                              embed_money param_)))
                 else
                   log_end_call
                     ["CalculAllocationLogement"; "traitement_aide_finale"]
                     (log_variable_definition
                        [
                          "CalculAllocationLogement";
                          "traitement_aide_finale";
                          "output";
                        ]
                        embed_money
                        ((log_begin_call
                            [
                              "CalculAllocationLogement";
                              "traitement_aide_finale";
                            ]
                            calcul_allocation_logement_dot_traitement_aide_finale_)
                           (log_variable_definition
                              [
                                "CalculAllocationLogement";
                                "traitement_aide_finale";
                                "input";
                              ]
                              embed_money param_))))
           with EmptyError ->
             raise
               (NoValueProvided
                  {
                    filename = "examples/aides_logement/prologue.catala_fr";
                    start_line = 1090;
                    start_column = 10;
                    end_line = 1090;
                    end_column = 32;
                    law_headings =
                      ["Calculette globale"; "Prologue : aides au logement"];
                  })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 1090;
                start_column = 10;
                end_line = 1090;
                end_column = 32;
                law_headings =
                  ["Calculette globale"; "Prologue : aides au logement"];
              }))
  in
  let aide_finale_formule_ : money =
    log_variable_definition
      ["CalculetteAidesAuLogement"; "aide_finale_formule"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename =
                   "examples/aides_logement/code_construction_legislatif.catala_fr";
                 start_line = 1092;
                 start_column = 14;
                 end_line = 1092;
                 end_column = 33;
                 law_headings =
                   [
                     "Article L841-2";
                     "Chapitre Ier : Champ d'application";
                     "Titre IV : Allocations de logement";
                     "Livre VIII : Aides personnelles au logement";
                     "Partie législative";
                     "Code de la construction et de l'habitation";
                   ];
               }
               true)
           (fun (_ : _) ->
             if not eligibilite_ then money_of_cents_string "0"
             else if
               eligibilite_aide_personnalisee_logement_dot_eligibilite_
               && not
                    (match
                       eligibilite_allocation_logement_dot_eligibilite_avec_condition_logement_
                     with
                    | EligibiliteAllocationLogement.PasEligible _ -> true
                    | EligibiliteAllocationLogement.AllocationLogementFamiliale
                        _ ->
                      false
                    | EligibiliteAllocationLogement.AllocationLogementSociale _
                      ->
                      false)
             then
               if
                 log_end_call
                   ["CalculAidePersonnaliséeLogement"; "traitement_aide_finale"]
                   (log_variable_definition
                      [
                        "CalculAidePersonnaliséeLogement";
                        "traitement_aide_finale";
                        "output";
                      ]
                      embed_money
                      ((log_begin_call
                          [
                            "CalculAidePersonnaliséeLogement";
                            "traitement_aide_finale";
                          ]
                          calcul_aide_personnalisee_logement_dot_traitement_aide_finale_)
                         (log_variable_definition
                            [
                              "CalculAidePersonnaliséeLogement";
                              "traitement_aide_finale";
                              "input";
                            ]
                            embed_money
                            calcul_aide_personnalisee_logement_dot_aide_finale_formule_)))
                 >$ log_end_call
                      ["CalculAllocationLogement"; "traitement_aide_finale"]
                      (log_variable_definition
                         [
                           "CalculAllocationLogement";
                           "traitement_aide_finale";
                           "output";
                         ]
                         embed_money
                         ((log_begin_call
                             [
                               "CalculAllocationLogement";
                               "traitement_aide_finale";
                             ]
                             calcul_allocation_logement_dot_traitement_aide_finale_)
                            (log_variable_definition
                               [
                                 "CalculAllocationLogement";
                                 "traitement_aide_finale";
                                 "input";
                               ]
                               embed_money
                               calcul_allocation_logement_dot_aide_finale_formule_)))
               then calcul_aide_personnalisee_logement_dot_aide_finale_formule_
               else calcul_allocation_logement_dot_aide_finale_formule_
             else if eligibilite_aide_personnalisee_logement_dot_eligibilite_
             then calcul_aide_personnalisee_logement_dot_aide_finale_formule_
             else calcul_allocation_logement_dot_aide_finale_formule_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 1089;
                start_column = 10;
                end_line = 1089;
                end_column = 29;
                law_headings =
                  ["Calculette globale"; "Prologue : aides au logement"];
              }))
  in
  {
    CalculetteAidesAuLogementOut.eligibilite_out = eligibilite_;
    CalculetteAidesAuLogementOut.aide_finale_formule_out = aide_finale_formule_;
    CalculetteAidesAuLogementOut.traitement_aide_finale_out =
      traitement_aide_finale_;
    CalculetteAidesAuLogementOut
    .coefficents_enfants_garde_alternee_pris_en_compte_out =
      coefficents_enfants_garde_alternee_pris_en_compte_;
  }

let calculette_aides_au_logement_garde_alternee
    (calculette_aides_au_logement_garde_alternee_in :
      CalculetteAidesAuLogementGardeAlterneeIn.t) :
    CalculetteAidesAuLogementGardeAlterneeOut.t =
  let menage_ : Menage.t =
    calculette_aides_au_logement_garde_alternee_in
      .CalculetteAidesAuLogementGardeAlterneeIn.menage_in
  in
  let demandeur_ : Demandeur.t =
    calculette_aides_au_logement_garde_alternee_in
      .CalculetteAidesAuLogementGardeAlterneeIn.demandeur_in
  in
  let informations_calcul_ : InformationsCalculAPL.t =
    calculette_aides_au_logement_garde_alternee_in
      .CalculetteAidesAuLogementGardeAlterneeIn.informations_calcul_in
  in
  let date_courante_ : date =
    calculette_aides_au_logement_garde_alternee_in
      .CalculetteAidesAuLogementGardeAlterneeIn.date_courante_in
  in
  let ressources_menage_prises_en_compte_ : money =
    calculette_aides_au_logement_garde_alternee_in
      .CalculetteAidesAuLogementGardeAlterneeIn
       .ressources_menage_prises_en_compte_in
  in
  let menage_sans_enfants_garde_alternee_ : Menage.t =
    log_variable_definition
      [
        "CalculetteAidesAuLogementGardeAlternée";
        "ménage_sans_enfants_garde_alternée";
      ]
      embed_menage
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1202;
                 start_column = 14;
                 end_line = 1202;
                 end_column = 48;
                 law_headings =
                   [
                     "Calculette avec garde alternée";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) ->
             {
               Menage.prestations_recues = menage_.Menage.prestations_recues;
               Menage.logement = menage_.Menage.logement;
               Menage.personnes_a_charge =
                 array_filter
                   (fun (personne_a_charge_ : _) ->
                     match personne_a_charge_ with
                     | PersonneACharge.EnfantACharge enfant_ -> (
                       match enfant_.EnfantACharge.situation_garde_alternee with
                       | SituationGardeAlternee.PasDeGardeAlternee _ -> true
                       | SituationGardeAlternee
                         .GardeAlterneeCoefficientPriseEnCharge _ ->
                         false)
                     | PersonneACharge.AutrePersonneACharge _ -> true)
                   menage_.Menage.personnes_a_charge;
               Menage.nombre_autres_occupants_logement =
                 menage_.Menage.nombre_autres_occupants_logement;
               Menage.situation_familiale = menage_.Menage.situation_familiale;
               Menage.condition_rattache_foyer_fiscal_parent_ifi =
                 menage_.Menage.condition_rattache_foyer_fiscal_parent_ifi;
               Menage.nombre_enfants_a_naitre_apres_troisieme_mois_grossesse =
                 menage_
                   .Menage
                    .nombre_enfants_a_naitre_apres_troisieme_mois_grossesse;
               Menage.enfant_a_naitre_apres_quatrieme_mois_grossesse =
                 menage_.Menage.enfant_a_naitre_apres_quatrieme_mois_grossesse;
               Menage.date_naissance_troisieme_enfant_ou_dernier_si_plus =
                 menage_
                   .Menage.date_naissance_troisieme_enfant_ou_dernier_si_plus;
             })
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 1166;
                start_column = 11;
                end_line = 1166;
                end_column = 45;
                law_headings =
                  [
                    "Calculette avec garde alternée";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let calculette_dot_menage_ : Menage.t =
    try
      log_variable_definition
        ["CalculetteAidesAuLogementGardeAlternée"; "calculette.ménage"]
        embed_menage
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1177;
                 start_column = 14;
                 end_line = 1177;
                 end_column = 31;
                 law_headings =
                   [
                     "Calculette avec garde alternée";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> menage_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 1066;
             start_column = 10;
             end_line = 1066;
             end_column = 16;
             law_headings =
               ["Calculette globale"; "Prologue : aides au logement"];
           })
  in
  let calculette_dot_demandeur_ : Demandeur.t =
    try
      log_variable_definition
        ["CalculetteAidesAuLogementGardeAlternée"; "calculette.demandeur"]
        embed_demandeur
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1179;
                 start_column = 14;
                 end_line = 1179;
                 end_column = 34;
                 law_headings =
                   [
                     "Calculette avec garde alternée";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> demandeur_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 1067;
             start_column = 10;
             end_line = 1067;
             end_column = 19;
             law_headings =
               ["Calculette globale"; "Prologue : aides au logement"];
           })
  in
  let calculette_dot_informations_calcul_ : InformationsCalculAPL.t =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogementGardeAlternée";
          "calculette.informations_calcul";
        ]
        embed_informations_calcul_a_p_l
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1181;
                 start_column = 14;
                 end_line = 1181;
                 end_column = 44;
                 law_headings =
                   [
                     "Calculette avec garde alternée";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> informations_calcul_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 1068;
             start_column = 10;
             end_line = 1068;
             end_column = 29;
             law_headings =
               ["Calculette globale"; "Prologue : aides au logement"];
           })
  in
  let calculette_dot_date_courante_ : date =
    try
      log_variable_definition
        ["CalculetteAidesAuLogementGardeAlternée"; "calculette.date_courante"]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1183;
                 start_column = 14;
                 end_line = 1183;
                 end_column = 38;
                 law_headings =
                   [
                     "Calculette avec garde alternée";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 1069;
             start_column = 10;
             end_line = 1069;
             end_column = 23;
             law_headings =
               ["Calculette globale"; "Prologue : aides au logement"];
           })
  in
  let calculette_dot_ressources_menage_prises_en_compte_ : money =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogementGardeAlternée";
          "calculette.ressources_ménage_prises_en_compte";
        ]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1185;
                 start_column = 14;
                 end_line = 1185;
                 end_column = 59;
                 law_headings =
                   [
                     "Calculette avec garde alternée";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> ressources_menage_prises_en_compte_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 1074;
             start_column = 10;
             end_line = 1074;
             end_column = 44;
             law_headings =
               ["Calculette globale"; "Prologue : aides au logement"];
           })
  in
  let result_ : CalculetteAidesAuLogementOut.t =
    log_end_call
      [
        "CalculetteAidesAuLogementGardeAlternée";
        "calculette";
        "CalculetteAidesAuLogement";
      ]
      ((log_begin_call
          [
            "CalculetteAidesAuLogementGardeAlternée";
            "calculette";
            "CalculetteAidesAuLogement";
          ]
          calculette_aides_au_logement)
         {
           CalculetteAidesAuLogementIn.menage_in = calculette_dot_menage_;
           CalculetteAidesAuLogementIn.demandeur_in = calculette_dot_demandeur_;
           CalculetteAidesAuLogementIn.informations_calcul_in =
             calculette_dot_informations_calcul_;
           CalculetteAidesAuLogementIn.date_courante_in =
             calculette_dot_date_courante_;
           CalculetteAidesAuLogementIn.ressources_menage_prises_en_compte_in =
             calculette_dot_ressources_menage_prises_en_compte_;
         })
  in
  let calculette_dot_eligibilite_ : bool =
    result_.CalculetteAidesAuLogementOut.eligibilite_out
  in
  let calculette_dot_aide_finale_formule_ : money =
    result_.CalculetteAidesAuLogementOut.aide_finale_formule_out
  in
  let calculette_dot_traitement_aide_finale_ : money -> money =
    result_.CalculetteAidesAuLogementOut.traitement_aide_finale_out
  in
  let calculette_dot_coefficents_enfants_garde_alternee_pris_en_compte_ :
      decimal array =
    result_
      .CalculetteAidesAuLogementOut
       .coefficents_enfants_garde_alternee_pris_en_compte_out
  in
  let calculette_sans_garde_alternee_dot_menage_ : Menage.t =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogementGardeAlternée";
          "calculette_sans_garde_alternée.ménage";
        ]
        embed_menage
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1187;
                 start_column = 14;
                 end_line = 1187;
                 end_column = 51;
                 law_headings =
                   [
                     "Calculette avec garde alternée";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> menage_sans_enfants_garde_alternee_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 1066;
             start_column = 10;
             end_line = 1066;
             end_column = 16;
             law_headings =
               ["Calculette globale"; "Prologue : aides au logement"];
           })
  in
  let calculette_sans_garde_alternee_dot_demandeur_ : Demandeur.t =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogementGardeAlternée";
          "calculette_sans_garde_alternée.demandeur";
        ]
        embed_demandeur
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1189;
                 start_column = 14;
                 end_line = 1189;
                 end_column = 54;
                 law_headings =
                   [
                     "Calculette avec garde alternée";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> demandeur_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 1067;
             start_column = 10;
             end_line = 1067;
             end_column = 19;
             law_headings =
               ["Calculette globale"; "Prologue : aides au logement"];
           })
  in
  let calculette_sans_garde_alternee_dot_informations_calcul_ :
      InformationsCalculAPL.t =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogementGardeAlternée";
          "calculette_sans_garde_alternée.informations_calcul";
        ]
        embed_informations_calcul_a_p_l
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1191;
                 start_column = 14;
                 end_line = 1191;
                 end_column = 64;
                 law_headings =
                   [
                     "Calculette avec garde alternée";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> informations_calcul_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 1068;
             start_column = 10;
             end_line = 1068;
             end_column = 29;
             law_headings =
               ["Calculette globale"; "Prologue : aides au logement"];
           })
  in
  let calculette_sans_garde_alternee_dot_date_courante_ : date =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogementGardeAlternée";
          "calculette_sans_garde_alternée.date_courante";
        ]
        embed_date
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1193;
                 start_column = 14;
                 end_line = 1193;
                 end_column = 58;
                 law_headings =
                   [
                     "Calculette avec garde alternée";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> date_courante_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 1069;
             start_column = 10;
             end_line = 1069;
             end_column = 23;
             law_headings =
               ["Calculette globale"; "Prologue : aides au logement"];
           })
  in
  let calculette_sans_garde_alternee_dot_ressources_menage_prises_en_compte_ :
      money =
    try
      log_variable_definition
        [
          "CalculetteAidesAuLogementGardeAlternée";
          "calculette_sans_garde_alternée.ressources_ménage_prises_en_compte";
        ]
        embed_money
        (handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1196;
                 start_column = 5;
                 end_line = 1196;
                 end_column = 70;
                 law_headings =
                   [
                     "Calculette avec garde alternée";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> ressources_menage_prises_en_compte_))
    with EmptyError ->
      raise
        (NoValueProvided
           {
             filename = "examples/aides_logement/prologue.catala_fr";
             start_line = 1074;
             start_column = 10;
             end_line = 1074;
             end_column = 44;
             law_headings =
               ["Calculette globale"; "Prologue : aides au logement"];
           })
  in
  let result_ : CalculetteAidesAuLogementOut.t =
    log_end_call
      [
        "CalculetteAidesAuLogementGardeAlternée";
        "calculette_sans_garde_alternée";
        "CalculetteAidesAuLogement";
      ]
      ((log_begin_call
          [
            "CalculetteAidesAuLogementGardeAlternée";
            "calculette_sans_garde_alternée";
            "CalculetteAidesAuLogement";
          ]
          calculette_aides_au_logement)
         {
           CalculetteAidesAuLogementIn.menage_in =
             calculette_sans_garde_alternee_dot_menage_;
           CalculetteAidesAuLogementIn.demandeur_in =
             calculette_sans_garde_alternee_dot_demandeur_;
           CalculetteAidesAuLogementIn.informations_calcul_in =
             calculette_sans_garde_alternee_dot_informations_calcul_;
           CalculetteAidesAuLogementIn.date_courante_in =
             calculette_sans_garde_alternee_dot_date_courante_;
           CalculetteAidesAuLogementIn.ressources_menage_prises_en_compte_in =
             calculette_sans_garde_alternee_dot_ressources_menage_prises_en_compte_;
         })
  in
  let calculette_sans_garde_alternee_dot_eligibilite_ : bool =
    result_.CalculetteAidesAuLogementOut.eligibilite_out
  in
  let calculette_sans_garde_alternee_dot_aide_finale_formule_ : money =
    result_.CalculetteAidesAuLogementOut.aide_finale_formule_out
  in
  let calculette_sans_garde_alternee_dot_traitement_aide_finale_ :
      money -> money =
    result_.CalculetteAidesAuLogementOut.traitement_aide_finale_out
  in
  let calculette_sans_garde_alternee_dot_coefficents_enfants_garde_alternee_pris_en_compte_
      : decimal array =
    result_
      .CalculetteAidesAuLogementOut
       .coefficents_enfants_garde_alternee_pris_en_compte_out
  in
  let eligibilite_ : bool =
    log_variable_definition
      ["CalculetteAidesAuLogementGardeAlternée"; "éligibilité"]
      embed_bool
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1233;
                 start_column = 14;
                 end_line = 1233;
                 end_column = 25;
                 law_headings =
                   [
                     "Calculette avec garde alternée";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) -> calculette_dot_eligibilite_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 1173;
                start_column = 10;
                end_line = 1173;
                end_column = 21;
                law_headings =
                  [
                    "Calculette avec garde alternée";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let coefficents_enfants_garde_alternee_pris_en_compte_ : decimal array =
    log_variable_definition
      [
        "CalculetteAidesAuLogementGardeAlternée";
        "coefficents_enfants_garde_alternée_pris_en_compte";
      ]
      (embed_array embed_decimal)
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/prologue.catala_fr";
                 start_line = 1200;
                 start_column = 14;
                 end_line = 1200;
                 end_column = 63;
                 law_headings =
                   [
                     "Calculette avec garde alternée";
                     "Prologue : aides au logement";
                   ];
               }
               true)
           (fun (_ : _) ->
             calculette_dot_coefficents_enfants_garde_alternee_pris_en_compte_)
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 1167;
                start_column = 11;
                end_line = 1167;
                end_column = 60;
                law_headings =
                  [
                    "Calculette avec garde alternée";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  let aide_finale_ : money =
    log_variable_definition
      ["CalculetteAidesAuLogementGardeAlternée"; "aide_finale"]
      embed_money
      (try
         handle_default [||]
           (fun (_ : _) ->
             log_decision_taken
               {
                 filename = "examples/aides_logement/autres_sources.catala_fr";
                 start_line = 235;
                 start_column = 14;
                 end_line = 235;
                 end_column = 25;
                 law_headings =
                   [
                     "Conseil d'État, 5ème - 4ème chambres réunies, \
                      21/07/2017, 398563";
                   ];
               }
               true)
           (fun (_ : _) ->
             log_end_call
               ["CalculetteAidesAuLogement"; "traitement_aide_finale"]
               (log_variable_definition
                  [
                    "CalculetteAidesAuLogement";
                    "traitement_aide_finale";
                    "output";
                  ]
                  embed_money
                  ((log_begin_call
                      ["CalculetteAidesAuLogement"; "traitement_aide_finale"]
                      calculette_dot_traitement_aide_finale_)
                     (log_variable_definition
                        [
                          "CalculetteAidesAuLogement";
                          "traitement_aide_finale";
                          "input";
                        ]
                        embed_money
                        (calculette_sans_garde_alternee_dot_aide_finale_formule_
                        +$
                        if
                          array_length
                            coefficents_enfants_garde_alternee_pris_en_compte_
                          = integer_of_string "0"
                        then money_of_cents_string "0"
                        else
                          (calculette_dot_aide_finale_formule_
                         -$ calculette_sans_garde_alternee_dot_aide_finale_formule_
                          )
                          *$ (Array.fold_left
                                (fun (acc_ : decimal) (coeff_ : _) ->
                                  acc_ +& coeff_)
                                (decimal_of_string "0.")
                                coefficents_enfants_garde_alternee_pris_en_compte_
                             /& decimal_of_integer
                                  (array_length
                                     coefficents_enfants_garde_alternee_pris_en_compte_)
                             ))))))
       with EmptyError ->
         raise
           (NoValueProvided
              {
                filename = "examples/aides_logement/prologue.catala_fr";
                start_line = 1174;
                start_column = 10;
                end_line = 1174;
                end_column = 21;
                law_headings =
                  [
                    "Calculette avec garde alternée";
                    "Prologue : aides au logement";
                  ];
              }))
  in
  {
    CalculetteAidesAuLogementGardeAlterneeOut.eligibilite_out = eligibilite_;
    CalculetteAidesAuLogementGardeAlterneeOut.aide_finale_out = aide_finale_;
  }
