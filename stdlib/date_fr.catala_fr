# Dates

> Module Date_fr

> Usage de Date_internal en tant que D

## Fonctions utilitaires

```catala-metadata
## Renvoie la plus ancienne des deux dates.
déclaration min
  contenu date
  dépend de
    d1 contenu date,
    d2 contenu date
  égal à
    si d1 <= d2 alors d1 sinon d2

## Renvoie la plus récente des deux dates.
déclaration max
  contenu date
  dépend de
    d1 contenu date,
    d2 contenu date
  égal à
    si d1 >= d2 alors d1 sinon d2
```

## Dates et années, mois et jours

```catala-metadata
## Construit une date à partir du numéro de l'année, du mois (à partir de 1)
## et du jour (à partir de 1).
déclaration depuis_année_mois_jour
  contenu date
  dépend de
    #[implicit_position_argument]
    pos contenu position_source,
    dannée contenu entier,
    dmois contenu entier,
    djour contenu entier
  égal à
    D.of_ymd de pos, dannée, dmois, djour

## Renvoie le numéro de l'année, du mois (1-12) et du jour (1-31) de la date
## passée en argument.
déclaration vers_année_mois_jour
  contenu (entier, entier, entier)
  dépend de d contenu date
  égal à
    D.to_ymd de d

## Renvoie le numéro de l'année d'une date.
déclaration accès_année
  contenu entier
  dépend de d contenu date
  égal à
    (vers_année_mois_jour de d).1

## Renvoie le numéro du mois (1-12) d'une date.
déclaration accès_mois
  contenu entier
  dépend de d contenu date
  égal à
    (vers_année_mois_jour de d).2

## Renvoie le numéro du jour (1-31) d'une date.
déclaration accès_jour
  contenu entier
  dépend de d contenu date
  égal à
    (vers_année_mois_jour de d).3
```

## Aller vers le passé ou le futur

```catala-metadata
## Renvoie le premier jour du mois de la date passée en argument.
## **Exemple:** `premier_jour_du_mois de |2024-01-21| = |2024-01-01|`.
déclaration premier_jour_du_mois
  contenu date
  dépend de d contenu date
  égal à
    soit ymd égal à vers_année_mois_jour de d dans
    depuis_année_mois_jour de (ymd.1, ymd.2, 1)

## Renvoie le dernier jour du mois de la date passée en argument.
## **Exemple:** `dernier_jour_du_mois de |2024-01-21| = |2024-01-31|`
déclaration dernier_jour_du_mois
  contenu date
  dépend de d contenu date
  égal à
    D.last_day_of_month de d

## Renvoie le premier jour de l'année de la date passée en argument.
## **Exemple:** `premier_jour_de_l_année de |2024-03-21| = |2024-01-01|`
déclaration premier_jour_de_l_année
  contenu date
  dépend de d contenu date
  égal à
    soit ymd égal à (vers_année_mois_jour de d) dans
    depuis_année_mois_jour de (ymd.1, (1), (1))

## Renvoie le dernier jour de l'année de la date passée en argument.
## **Exemple:** `dernier_jour_de_l_année de |2024-03-21| = |2024-12-31|`
déclaration dernier_jour_de_l_année
  contenu date
  dépend de d contenu date
  égal à
    soit ymd égal à vers_année_mois_jour de d dans
    depuis_année_mois_jour de (ymd.1, (12), (31))
```

## Mois nommés

```catala-metadata
déclaration énumération Mois:
  -- Janvier
  -- Février
  -- Mars
  -- Avril
  -- Mai
  -- Juin
  -- Juillet
  -- Août
  -- Septembre
  -- Octobre
  -- Novembre
  -- Décembre

## Renvoie le numéro de mois (1-12) associé à un mois nommé.
déclaration mois_vers_entier
  contenu entier
  dépend de m contenu Mois
  égal à
    selon m sous forme
    -- Janvier : 1
    -- Février : 2
    -- Mars : 3
    -- Avril : 4
    -- Mai : 5
    -- Juin : 6
    -- Juillet : 7
    -- Août : 8
    -- Septembre : 9
    -- Octobre : 10
    -- Novembre : 11
    -- Décembre : 12

## Renvoie le mois nommé correspondant au numéro de mois (1-12).
## **Aborts:** si l'argument n'est pas entre 1 et 12
déclaration mois_depuis_entier
  contenu Mois
  dépend de
    #[implicit_position_argument]
    pos contenu position_source,
    i contenu entier
  égal à
    si i = 1 alors Janvier
    sinon si i = 2 alors Février
    sinon si i = 3 alors Mars
    sinon si i = 4 alors Avril
    sinon si i = 5 alors Mai
    sinon si i = 6 alors Juin
    sinon si i = 7 alors Juillet
    sinon si i = 8 alors Août
    sinon si i = 9 alors Septembre
    sinon si i = 10 alors Octobre
    sinon si i = 11 alors Novembre
    sinon si i = 12 alors Décembre
    sinon soit erreur égal à D.of_ymd de (pos, -1, -1, -1) dans impossible
```

## Mois d'années spécifiques

```catala-metadata
déclaration structure MoisAnnée:
  donnée nom_mois contenu Mois
  donnée numéro_année contenu entier

## Extrait le mois d'année depuis une date en ignorant le jour.
déclaration vers_mois_année
  contenu MoisAnnée
  dépend de d contenu date
  égal à
    MoisAnnée {
      -- numéro_année: accès_année de d
      -- nom_mois: mois_depuis_entier de (accès_mois de d)
    }

## Transforme un `MoisAnnée` vers une `date` en choisissant
## le premier jour du mois.
déclaration vers_premier_jour_du_mois
  contenu date
  dépend de m contenu MoisAnnée
  égal à
    depuis_année_mois_jour de (m.numéro_année, (mois_vers_entier de m.nom_mois), 1)

## Transforme un `MoisAnnée` vers une `date` en choisissant
## le dernier jour du mois.
déclaration vers_dernier_jour_du_mois
  contenu date
  dépend de m contenu MoisAnnée
  égal à
    dernier_jour_du_mois de
      (depuis_année_mois_jour de (m.numéro_année, (mois_vers_entier de m.nom_mois), 1))

## Teste si la date survient strictement avant le mois concerné.
déclaration est_avant_le_mois
  contenu booléen
  dépend de m contenu MoisAnnée, d contenu date
  égal à
    d < vers_premier_jour_du_mois de m

## Teste si la date survient strictement après le mois concerné.
déclaration est_après_le_mois
  contenu booléen
  dépend de m contenu MoisAnnée, d contenu date
  égal à
    d > vers_dernier_jour_du_mois de m

## Teste si la date survient durant le mois concerné.
déclaration est_dans_le_mois
  contenu booléen
  dépend de m contenu MoisAnnée, d contenu date
  égal à
    (est_après_le_début_du_mois de m, d)
    et (est_avant_la_fin_du_mois de m, d)

## Teste si la date survient avant la fin du mois concerné (inclus).
## **Exemple:** `est_avant_la_fin_du_mois de mai_2025, |2025-04-13| = vrai`
## **Exemple:** `est_avant_la_fin_du_mois de mai_2025, |2025-05-31| = vrai`
## **Exemple:** `est_avant_la_fin_du_mois de mai_2025, |2025-06-01| = faux`
déclaration est_avant_la_fin_du_mois
  contenu booléen
  dépend de m contenu MoisAnnée, d contenu date
  égal à
    d <= vers_dernier_jour_du_mois de m

## Teste si la date survient après le début du mois concerné (inclus).
## **Exemple:** `est_après_le_début_du_mois de mai_2025, |2025-06-15| = vrai`
## **Exemple:** `est_après_le_début_du_mois de mai_2025, |2025-05-01| = vrai`
## **Exemple:** `est_après_le_début_du_mois de mai_2025, |2025-04-30| = faux`
déclaration est_après_le_début_du_mois
  contenu booléen
  dépend de m contenu MoisAnnée, d contenu date
  égal à
    d >= vers_premier_jour_du_mois de m
```

## Comparaisons de date

```catala-metadata
## Teste si `date_comparée` est après `date_de_référence + délai`.
## **Exemples:**
## - `est_après_date_plus_délai de |2024-06-15|, |2024-01-01|, 6 mois = vrai`
## - `est_après_date_plus_délai de |2024-05-15|, |2024-01-01|, 6 mois = faux`
déclaration est_après_date_plus_délai
  contenu booléen
  dépend de
    date_comparée contenu date,
    date_de_référence contenu date,
    délai contenu durée
  égal à
    date_comparée >= date_de_référence + délai

## Teste si une personne née à `date_de_naissance` est au moins âgée de
## `âge_cible` ans à la date `à_date`.
## **Exemple:**
## - `est_assez_âgé de |2024-06-15|, |2000-06-01|, 24 an = vrai`
## - `est_assez_âgé de |2024-05-15|, |2024-06-01|, 24 an = faux`
## **Échoue:** si la personne est née un 29 février
déclaration est_assez_âgé
  contenu booléen
  dépend de
    date_courante contenu date,
    date_de_naissance contenu date,
    âge_cible contenu durée
  égal à
    date_courante >= date_de_naissance + âge_cible

## `est_avant_date_plus_délai de date_comparée, date_de_référence, délai`
## vérifie si `date_comparée` est avant `date_de_référence + délai`.
## **Exemple:**
## - `est_avant_date_plus_délai de |2024-06-15|, |2024-01-01|, 6 mois = faux`
## - `est_avant_date_plus_délai de |2024-05-15|, |2024-01-01|, 6 mois = vrai`
déclaration est_avant_date_plus_délai
  contenu booléen
  dépend de
    date_comparée contenu date,
    date_de_référence contenu date,
    délai contenu durée
  égal à
    date_comparée <= date_de_référence + délai

## `est_assez_jeune de date_courante, date_de_naissance, âge_cible`
## vérifie si `date_courante` est avant `date_de_naissance + âge_cible`.
## **Exemple:**
## - `est_assez_jeune de |2024-06-15|, |2000-06-01|, 24 an = faux`
## - `est_assez_jeune de |2024-05-15|, |2024-06-01|, 24 an = vrai`
déclaration est_assez_jeune
  contenu booléen
  dépend de
    date_courante contenu date,
    date_de_naissance contenu date,
    target_age contenu durée
  égal à
    date_courante <= date_de_naissance + target_age
```
