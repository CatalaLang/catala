> Module Stdlib

```catala-metadata
# This file is part of the Catala compiler, a specification language for tax
# and social benefits computation rules. Copyright (C) 2020 Inria, contributor:
# Louis Gesbert <louis.gesbert@inria.fr>
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.
```

# Stdlib

This module contains common use functions for Catala programs. It is
automatically linked and always accessible.

**NOTE: work in progress, this is not the case yet**

## Periods of time

A period is a starting date and a duration. Therefore, it is a given amount of
time between two known dates.

```catala-metadata

## A period is a starting date and a duration. Here we prefer to encode it
## using a starting date, and an excluded end date.
declaration structure Period:
  data begin content date
  data end content date # The end date is excluded

declaration enumeration OptionalPeriod:
  -- Period content Period
  -- Empty

## Duration of a given period, in days
declaration get_duration content duration
  depends on p content Period

## Sorts the given periods by starting day
declaration sort_durations content list of Period
  depends on l content list of Period

## Splits the given period, returning one period per calendar month. The first
## and last elements may be non-whole months.
declaration split_by_month content list of Period
  depends on p content Period

## Splits the given period, returning one period per calendar year. The first
## and last elements may be non-whole years.
declaration split_by_year content list of Period
  depends on p content Period

## Two periods are adjacent if the second one starts when the first stops
declaration are_adjacent content boolean
  depends on p1 content Period,
             p2 content Period

## Assuming p1 and p2 are adjacent, returns the reunion of the periods
declaration join content Period
  depends on p1 content Period,
             p2 content Period

## Returns the period corresponding to the days that are both in p1 and p2
declaration intersection content OptionalPeriod
  depends on p1 content Period,
             p2 content Period

## Finds the first period in the given list l that contains the date d
declaration find_period content OptionalPeriod
  depends on l content list of Period,
             d content date
```
