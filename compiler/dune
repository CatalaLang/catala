(library
 (name driver)
 (public_name catala.driver)
 (libraries
  dynlink
  catala_utils
  surface
  desugared
  literate
  dcalc
  lcalc
  scalc
  catala.runtime_ocaml
  verification)
 (modules plugin driver))

(executable
 (name catala_web_interpreter)
 (modes byte js)
 (modules catala_web_interpreter)
 (preprocess
  (pps js_of_ocaml-ppx))
 (libraries catala.driver js_of_ocaml runtime runtime_jsoo))

(install
 (section bin)
 (package catala)
 (files
  (catala_web_interpreter.bc.js as catala_web_interpreter.js)))

(executable
 (name tests)
 (modules tests)
 (libraries catala.driver alcotest))

(install
 (section bin)
 (package catala)
 (files
  (catala.bc.js as catala.js)))

(rule
 (target custom_linking.sexp)
 (mode fallback)
 (action
  (with-stdout-to
   %{target}
   (echo "()"))))

(executable
 (name catala)
 (modes exe js)
 (flags
  (:standard
   (:include custom_linking.sexp)
   -linkall))
 (package catala)
 (modules catala)
 (public_name catala)
 (libraries catala.driver ocamlgraph))

(documentation
 (package catala)
 (mld_files index))

(alias
 (name catala)
 (deps %{bin:catala}))

(rule
 (alias runtest)
 (package catala)
 (action
  (run ./tests.exe)))

(include manpages.sexp)

(rule
 (mode promote)
 (action
  (with-stdout-to
   manpages.sexp
   (run
    sh
    -c
    "for page in '' $(%{bin:catala} 2>&1 | sed -n 's/.    *//p'); do\n        echo '(rule (alias man) (action (with-stdout-to catala'${page:+-$page}'.1 (run \%{bin:catala} '$page' --help=groff))))'\n      done"))))

(install
 (section man)
 (package catala)
 (files
  (glob_files
   (*.1 with_prefix man1))))
