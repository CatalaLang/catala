# This file has been generated by the Catala compiler, do not edit!

from catala_runtime import *
from typing import Any, List, Callable, Tuple
from enum import Enum


def prorata(amount:Money, weights:List[Money]):
    total_weight = reduce(lambda x,y: x+y, weights)
    result = [ amount * (w / total_weight) for w in weights ]
    remain = amount - reduce(lambda x,y: x+y, result)
    result[-1] = result[-1] + remain
    return result

def prorata2(amount:Money, weights:List[Money]):
    rem_weight = reduce(lambda x,y: x+y, weights)
    rem = amount
    result = []
    for w in weights:
        a = rem * (w / rem_weight)
        rem_weight = rem_weight - w
        rem = rem - a
        result.append(a)
    return result
