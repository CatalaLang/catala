## Article

```catala
declaration enumeration E:
  -- Case1

declaration enumeration F:
  -- Case1 content integer
  -- Case2

declaration scope A:
  context output e content E
  context output f content F
  context output x content integer

scope A:
  definition e equals E.Case1
  definition f equals F.Case1 content 2
  definition x equals match f with pattern
    -- F.Case1 of i : i
    -- Case2 : 3
```



```catala-test-inline
$ catala Typecheck --check_invariants
[RESULT]
Invariant Dcalc__Invariants.invariant_typing_defaults
   checked. result: [62/62]
[RESULT]
Invariant Dcalc__Invariants.invariant_match_inversion
   checked. result: [1/1]
[RESULT]
Invariant Dcalc__Invariants.invariant_app_inversion
   checked. result: [3/3]
[RESULT]
Invariant Dcalc__Invariants.invariant_no_return_a_function
   checked. result: [2/2]
[RESULT]
Invariant Dcalc__Invariants.invariant_no_partial_evaluation
   checked. result: [3/3]
[RESULT]
Invariant Dcalc__Invariants.invariant_default_no_arrow
   checked. result: [9/9]
[RESULT] Typechecking successful!
```

```catala-test-inline
$ catala Interpret -s A
[RESULT] Computation successful! Results:
[RESULT] e = Case1 ()
[RESULT] f = Case1 2
[RESULT] x = 2
```
```catala-test-inline
$ catala Interpret_Lcalc -s A --avoid_exceptions --optimize
[RESULT] Computation successful! Results:
[RESULT] e = Case1 ()
[RESULT] f = Case1 2
[RESULT] x = 2
```
