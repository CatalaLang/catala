```catala
declaration scope Toto:
  context bar content integer
  output foo content integer

scope Toto:
  definition bar equals 1
  definition foo equals 1212 + bar

declaration scope Titi:
  output fizz content Toto
  output fuzz content Toto
  toto scope Toto

scope Titi:
  definition toto.bar equals 44
  definition fizz equals output of Toto
  definition fuzz equals output of Toto with {--bar: 111}
```



```catala-test-inline
$ catala Typecheck --check_invariants
[RESULT]
Invariant Dcalc__Invariants.invariant_typing_defaults
   checked. result: [94/94]
[RESULT]
Invariant Dcalc__Invariants.invariant_match_inversion
   checked. result: [0/0]
[RESULT]
Invariant Dcalc__Invariants.invariant_app_inversion
   checked. result: [9/9]
[RESULT]
Invariant Dcalc__Invariants.invariant_no_return_a_function
   checked. result: [7/7]
[RESULT]
Invariant Dcalc__Invariants.invariant_no_partial_evaluation
   checked. result: [9/9]
[RESULT]
Invariant Dcalc__Invariants.invariant_default_no_arrow
   checked. result: [11/11]
[RESULT] Typechecking successful!
```

```catala-test-inline
$ catala Interpret -s Titi
[RESULT] Computation successful! Results:
[RESULT] fizz = Toto { -- foo: 1,213 }
[RESULT] fuzz = Toto { -- foo: 1,323 }
```
```catala-test-inline
$ catala Interpret_Lcalc -s Titi --avoid_exceptions --optimize
[RESULT] Computation successful! Results:
[RESULT] fizz = Toto { -- foo: 1,213 }
[RESULT] fuzz = Toto { -- foo: 1,323 }
```
