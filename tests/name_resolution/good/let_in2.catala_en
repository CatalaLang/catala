## Article

> Module Let_in2

```catala
#[test] declaration scope S:
  context output a content boolean

scope S:
   definition a equals
    let a equals false in
    let a equals a or true in
    a
```



```catala-test-cli
$ catala Typecheck --check-invariants
┌─[RESULT]─
│ All invariant checks passed
└─
┌─[RESULT]─
│ Typechecking successful!
└─
```

```catala-test-cli
$ catala test-scope S
┌─[RESULT]─ S ─
│ a = true
└─
```

```catala-test-cli
$ catala ocaml
(** This file has been generated by the Catala compiler, do not edit! *)

open Runtime_ocaml.Runtime

[@@@ocaml.warning "-4-26-27-32-41-42"]


module S = struct
  type t = {a: bool}
end

module S_in = struct
  type t = {a_in: ((bool * source_position)) Eoption.t}
end


(* Scope S *)
let s : S_in.t -> S.t = fun s_in ->
  let a: ((bool * source_position)) Eoption.t = s_in.S_in.a_in in
  let a__1: bool =
    match
      (match a
       with
       | Eoption.ENone _ ->
           (Eoption.ESome
              ((match
                  (Eoption.ESome
                     ((let a__2 : bool = false in
                       (let a__3 : bool = (a__2 || true) in a__3)),
                       ({filename="tests/name_resolution/good/let_in2.catala_en";
                         start_line=11; start_column=5;
                         end_line=13; end_column=6; law_headings=["Article"]})))
                with
                | Eoption.ENone _ -> (raise
                    (Runtime_ocaml.Runtime.Error (NoValue, [{filename="tests/name_resolution/good/let_in2.catala_en";
                                                             start_line=7; start_column=18;
                                                             end_line=7; end_column=19;
                                                             law_headings=
                                                             ["Article"]}])))
                | Eoption.ESome arg -> (let x, _ = arg in x)),
                ({filename="tests/name_resolution/good/let_in2.catala_en";
                  start_line=7; start_column=18; end_line=7; end_column=19;
                  law_headings=["Article"]})))
       | Eoption.ESome x -> (Eoption.ESome x))
    with
    | Eoption.ENone _ -> (raise
        (Runtime_ocaml.Runtime.Error (NoValue, [{filename="tests/name_resolution/good/let_in2.catala_en";
                                                 start_line=7; start_column=18;
                                                 end_line=7; end_column=19;
                                                 law_headings=["Article"]}])))
    | Eoption.ESome arg -> (let x, _ = arg in x) in
  {S.a = a__1}

let () =
  Runtime_ocaml.Runtime.register_module "Let_in2"
    [ "S", Obj.repr s ]
    "CMX|XXXXXXXX|XXXXXXXX|XXXXXXXX"
```

```catala
#[test] declaration scope Stest:
  output s scope S
```
