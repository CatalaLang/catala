# Test the refactored metatdata markup

```catala-metadata
declaration enumeration E:
  -- A
  -- B

declaration scope S:
  context output a content E
```

Some law text...

```catala-metadata
declaration scope S2:
  context output b content E
```

## PROGRAM

```catala
scope S:
  definition a equals A
```

```catala
scope S2:
  definition b equals B
```



```catala-test-inline
$ catala Typecheck --check_invariants
[RESULT]
Invariant Dcalc__Invariants.invariant_typing_defaults
   checked. result: [40/40]
[RESULT]
Invariant Dcalc__Invariants.invariant_match_inversion
   checked. result: [0/0]
[RESULT]
Invariant Dcalc__Invariants.invariant_app_inversion
   checked. result: [2/2]
[RESULT]
Invariant Dcalc__Invariants.invariant_no_return_a_function
   checked. result: [0/0]
[RESULT]
Invariant Dcalc__Invariants.invariant_no_partial_evaluation
   checked. result: [2/2]
[RESULT]
Invariant Dcalc__Invariants.invariant_default_no_arrow
   checked. result: [6/6]
[RESULT] Typechecking successful!
```

```catala-test-inline
$ catala Interpret -s S2
[RESULT] Computation successful! Results:
[RESULT] b = B ()
```

```catala-test-inline
$ catala Interpret -s S
[RESULT] Computation successful! Results:
[RESULT] a = A ()
```
```catala-test-inline
$ catala Interpret_Lcalc -s S2 --avoid_exceptions --optimize
[RESULT] Computation successful! Results:
[RESULT] b = B ()
```
```catala-test-inline
$ catala Interpret_Lcalc -s S --avoid_exceptions --optimize
[RESULT] Computation successful! Results:
[RESULT] a = A ()
```
