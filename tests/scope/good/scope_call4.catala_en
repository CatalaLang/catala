```catala
#[test] declaration scope HousingComputation:
  output f1 content integer depends on (x content integer)
  output f2 content integer depends on (x content integer)
  output result1 content integer
  output result2 content integer

scope HousingComputation:
  definition f1 of x equals (output of RentComputation).f1 of x
  definition f2 of x equals (output of RentComputation).f2 of x
  definition result1 equals f1 of 1
  definition result2 equals f2 of 1

#[test] declaration scope RentComputation:
  internal g content integer depends on (x content integer)
  output f1 content integer depends on (x content integer)
  output f2 content integer depends on (x content integer)

scope RentComputation:
  definition g of x equals x + 1
  definition f1 of x equals g of (x + 1)
  definition f2 of x equals g of (x + 1)
```




```catala-test-cli
$ catala Typecheck --check-invariants
┌─[RESULT]─
│ All invariant checks passed
└─
┌─[RESULT]─
│ Typechecking successful!
└─
```

```catala-test-cli
$ catala interpret -s RentComputation --debug
[DEBUG] = INIT =
[DEBUG] = SURFACE =
[DEBUG] Parsing "tests/scope/good/scope_call4.catala_en"
[DEBUG] Loading module interfaces...
[DEBUG] Parsing "libcatala/stdlib_en.catala_en"
[DEBUG] Parsing "libcatala/date_en.catala_en"
[DEBUG] Parsing "libcatala/date_internal.catala_en"
[DEBUG] Parsing "libcatala/period_en.catala_en"
[DEBUG] Parsing "libcatala/period_internal.catala_en"
[DEBUG] Parsing "libcatala/money_en.catala_en"
[DEBUG] Parsing "libcatala/integer_en.catala_en"
[DEBUG] Parsing "libcatala/decimal_en.catala_en"
[DEBUG] = DESUGARED =
[DEBUG] Name resolution...
[DEBUG] Desugaring...
[DEBUG] Disambiguating...
[DEBUG] Linting...
[DEBUG] = SCOPELANG =
[DEBUG] = DCALC =
[DEBUG] Typechecking...
[DEBUG] Translating to default calculus...
[DEBUG] Typechecking again...
[DEBUG] Loading shared modules... Date_internal Date_en Period_internal
  Period_en Money_en Integer_en Decimal_en Stdlib_en
[DEBUG] Starting interpretation...
[DEBUG] End of interpretation
┌─[RESULT]─ RentComputation ─
│ f1 = λ (x: integer) →
│   error_empty
│     ⟨ ⟨true
│        ⊢ ⟨let x1 : integer = x + 1 in
│           error_empty ⟨ ⟨true ⊢ ⟨x1 + 1⟩⟩ | false ⊢ ∅ ⟩⟩⟩
│     | false ⊢ ∅ ⟩
│ f2 = λ (x: integer) →
│   error_empty
│     ⟨ ⟨true
│        ⊢ ⟨let x1 : integer = x + 1 in
│           error_empty ⟨ ⟨true ⊢ ⟨x1 + 1⟩⟩ | false ⊢ ∅ ⟩⟩⟩
│     | false ⊢ ∅ ⟩
└─
```

```catala-test-cli
$ catala Interpret --lcalc -s RentComputation --optimize --debug
[DEBUG] = INIT =
[DEBUG] = SURFACE =
[DEBUG] Parsing "tests/scope/good/scope_call4.catala_en"
[DEBUG] Loading module interfaces...
[DEBUG] Parsing "libcatala/stdlib_en.catala_en"
[DEBUG] Parsing "libcatala/date_en.catala_en"
[DEBUG] Parsing "libcatala/date_internal.catala_en"
[DEBUG] Parsing "libcatala/period_en.catala_en"
[DEBUG] Parsing "libcatala/period_internal.catala_en"
[DEBUG] Parsing "libcatala/money_en.catala_en"
[DEBUG] Parsing "libcatala/integer_en.catala_en"
[DEBUG] Parsing "libcatala/decimal_en.catala_en"
[DEBUG] = DESUGARED =
[DEBUG] Name resolution...
[DEBUG] Desugaring...
[DEBUG] Disambiguating...
[DEBUG] Linting...
[DEBUG] = SCOPELANG =
[DEBUG] = DCALC =
[DEBUG] Typechecking...
[DEBUG] Translating to default calculus...
[DEBUG] Optimizing default calculus...
[DEBUG] Typechecking again...
[DEBUG] = LCALC =
[DEBUG] Optimizing lambda calculus...
[DEBUG] Retyping lambda calculus...
[DEBUG] Loading shared modules... Date_internal Date_en Period_internal
  Period_en Money_en Integer_en Decimal_en Stdlib_en
[DEBUG] Starting interpretation...
[DEBUG] End of interpretation
┌─[RESULT]─ RentComputation ─
│ f1 = λ (x: integer) → let x1 : integer = x + 1 in
│                       ((x1 + 1))
│ f2 = λ (x: integer) → let x1 : integer = x + 1 in
│                       ((x1 + 1))
└─
```
