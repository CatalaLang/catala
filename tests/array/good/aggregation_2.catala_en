## Article

```catala-metadata
declaration structure S:
  data id content integer
  data income content money

#[test] declaration scope A:
   context output x content list of S

scope A:
   definition x equals [
      S { -- id: 0 -- income: $0 };
      S { -- id: 1 -- income: $4 + $5 };
      S { -- id: 2 -- income: $8 * 0.65 }
   ]

#[test] declaration scope B:
   a scope A
   output argmax content S
   output argmin content S

scope B:
   definition argmax equals
     (content of m among a.x such that m.income * 2.0 is maximum
      or if list empty then S { -- id: -1 --income: $0 })
   definition argmin equals
     (content of m among a.x such that m.income + $5 is minimum
      or if list empty then S { -- id: -1 --income: $20 })
```



```catala-test-cli
$ catala Typecheck --check-invariants
┌─[RESULT]─
│ All invariant checks passed
└─
┌─[RESULT]─
│ Typechecking successful!
└─
```

```catala-test-cli
$ catala test-scope A
┌─[RESULT]─ A ─
│ x =
│   [
│     S { -- id: 0 -- income: $0.00 }; S { -- id: 1 -- income: $9.00 };
│     S { -- id: 2 -- income: $5.20 }
│   ]
└─
```

```catala-test-cli
$ catala test-scope B
┌─[RESULT]─ B ─
│ argmax = S { -- id: 1 -- income: $9.00 }
│ argmin = S { -- id: 0 -- income: $0.00 }
└─
```
