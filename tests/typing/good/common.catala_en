```catala-metadata
declaration enumeration Enum:
  -- Int content integer
  -- Dec content decimal
  -- Dat content date

declaration structure Structure:
  data i content integer
  data e content Enum

declaration scope S:
  input x content integer
  input output y content Enum
  output z content list of Structure
  output a content decimal
```



```catala-test-inline
$ catala Typecheck --check-invariants
┌─[WARNING]─
│
│  In scope "S", the variable "z" is declared but never defined;
│  did you forget something?
│
├─➤ tests/typing/good/common.catala_en:14.10-14.11:
│    │
│ 14 │   output z content list of Structure
│    │          ‾
└─
┌─[WARNING]─
│
│  In scope "S", the variable "a" is declared but never defined;
│  did you forget something?
│
├─➤ tests/typing/good/common.catala_en:15.10-15.11:
│    │
│ 15 │   output a content decimal
│    │          ‾
└─
┌─[WARNING]─
│
│  Unused variable: x does not contribute to computing any of scope S
│  outputs. Did you forget something?
│
├─➤ tests/typing/good/common.catala_en:12.9-12.10:
│    │
│ 12 │   input x content integer
│    │         ‾
└─
┌─[WARNING]─
│
│  The structure "Structure" is never used; maybe it's unnecessary?
│
├─➤ tests/typing/good/common.catala_en:7.23-7.32:
│   │
│ 7 │ declaration structure Structure:
│   │                       ‾‾‾‾‾‾‾‾‾
└─
┌─[WARNING]─
│
│  The enumeration "Enum" is never used; maybe it's unnecessary?
│
├─➤ tests/typing/good/common.catala_en:2.25-2.29:
│   │
│ 2 │ declaration enumeration Enum:
│   │                         ‾‾‾‾
└─
┌─[RESULT]─
│ All invariant checks passed
└─
┌─[RESULT]─
│ Typechecking successful!
└─
```

```catala-test-inline
$ catala Typecheck --disable-warning
┌─[RESULT]─
│ Typechecking successful!
└─
```
