> Include: common.catala_en

```catala
scope S:
  definition z equals [ Int content x ]
  definition a equals number of (z ++ z) / 2
```

Should be "catala Typecheck", see test err3

```catala-test-inline
$ catala ocaml
┌─[WARNING]─
│
│  The structure "Structure" is never used; maybe it's unnecessary?
│
├─➤ tests/typing/bad/common.catala_en:7.23-7.32:
│   │
│ 7 │ declaration structure Structure:
│   │                       ‾‾‾‾‾‾‾‾‾
└─
┌─[WARNING]─
│
│  The constructor "Dec" of enumeration "Enum" is never used;
│  maybe it's unnecessary?
│
├─➤ tests/typing/bad/common.catala_en:4.6-4.9:
│   │
│ 4 │   -- Dec content decimal
│   │      ‾‾‾
└─
┌─[WARNING]─
│
│  The constructor "Dat" of enumeration "Enum" is never used;
│  maybe it's unnecessary?
│
├─➤ tests/typing/bad/common.catala_en:5.6-5.9:
│   │
│ 5 │   -- Dat content date
│   │      ‾‾‾
└─
┌─[ERROR]─
│
│  Error during typechecking, incompatible types:
│  ─➤ Enum
│  ─➤ Structure
│
│ This expression has type Enum:
├─➤ tests/typing/bad/err4.catala_en:5.25-5.38:
│   │
│ 5 │   definition z equals [ Int content x ]
│   │                         ‾‾‾‾‾‾‾‾‾‾‾‾‾
│
│ Expected type Structure coming from expression:
├─➤ tests/typing/bad/common.catala_en:14.28-14.37:
│    │
│ 14 │   output z content list of Structure
│    │                            ‾‾‾‾‾‾‾‾‾
└─
#return code 123#
```
