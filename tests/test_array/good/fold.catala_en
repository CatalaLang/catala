## Article

```catala
declaration structure S:
  data id content integer
  data income content money

declaration scope A:
   context output x content collection S

scope A:
   definition x equals [
      S { -- id: 0 -- income: $0 };
      S { -- id: 1 -- income: $4 + $5 };
      S { -- id: 2 -- income: $8 * 0.65 }
   ]

declaration scope B:
   a scope A
   output argmax content S
   output argmin content S

scope B:
   definition argmax equals
     (m among a.x such that m.income * 2.0 is maximum
      or if collection empty then S { -- id: -1 --income: $0 })
   definition argmin equals
     (m among a.x such that m.income + $5 is minimum
      or if collection empty then S { -- id: -1 --income: $20 })
```



```catala-test-inline
$ catala Typecheck --check_invariants
[RESULT]
Invariant Dcalc__Invariants.invariant_typing_defaults
   checked. result: [115/115]
[RESULT]
Invariant Dcalc__Invariants.invariant_match_inversion
   checked. result: [0/0]
[RESULT]
Invariant Dcalc__Invariants.invariant_app_inversion
   checked. result: [16/16]
[RESULT]
Invariant Dcalc__Invariants.invariant_no_return_a_function
   checked. result: [7/7]
[RESULT]
Invariant Dcalc__Invariants.invariant_no_partial_evaluation
   checked. result: [16/16]
[RESULT]
Invariant Dcalc__Invariants.invariant_default_no_arrow
   checked. result: [7/7]
[RESULT] Typechecking successful!
```

```catala-test-inline
$ catala Interpret -s A
[RESULT] Computation successful! Results:
[RESULT]
x =
  [
    S { -- id: 0 -- income: $0.00 }; S { -- id: 1 -- income: $9.00 };
    S { -- id: 2 -- income: $5.20 }
  ]
```

```catala-test-inline
$ catala Interpret -s B
[RESULT] Computation successful! Results:
[RESULT] argmax = S { -- id: 1 -- income: $9.00 }
[RESULT] argmin = S { -- id: 0 -- income: $0.00 }
```
```catala-test-inline
$ catala Interpret_Lcalc -s A --avoid_exceptions --optimize
[RESULT] Computation successful! Results:
[RESULT]
x =
  [
    S { -- id: 0 -- income: $0.00 }; S { -- id: 1 -- income: $9.00 };
    S { -- id: 2 -- income: $5.20 }
  ]
```
```catala-test-inline
$ catala Interpret_Lcalc -s B --avoid_exceptions --optimize
[RESULT] Computation successful! Results:
[RESULT] argmax = S { -- id: 1 -- income: $9.00 }
[RESULT] argmin = S { -- id: 0 -- income: $0.00 }
```
