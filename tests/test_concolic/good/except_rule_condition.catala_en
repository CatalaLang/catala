## Article

```catala
declaration scope A:
    input x content integer
    output b condition

scope A:
    rule b under condition x=42 consequence fulfilled
```

```catala-test-inline
$ catala DCalc -s A
let scope A (A_in: A_in {x_in: integer}): A {b: bool} =
  let get x : integer = A_in.x_in in
  let set b : bool =
    error_empty
      ⟨ ⟨ ⟨x = 42 ⊢ ⟨true⟩⟩ | false ⊢ ∅ ⟩
      | true ⊢ ⟨ ⟨true ⊢ ⟨false⟩⟩ | false ⊢ ∅ ⟩ ⟩
  in
  return { A b = b; }
```

```catala-test-inline
$ catala Concolic -s A
[RESULT] 
[RESULT] Evaluating with inputs:
[RESULT] . x_in = 42
[RESULT] Output of scope after evaluation:
[RESULT] . b = true
[RESULT] 
[RESULT] Evaluating with inputs:
[RESULT] . x_in = 43
[RESULT] Output of scope after evaluation:
[RESULT] . b = false
[RESULT] 
[RESULT] Concolic interpreter done
[RESULT] Computation successful!
```

