## Article

```catala
declaration scope A:
    input b content boolean
    internal x content integer
    output o content integer

scope A:
    definition x under condition b consequence equals 0
    definition x under condition not b consequence equals 1
    definition o under condition x=0 consequence equals 10
    definition o under condition x=1 consequence equals 11
```

```catala-test-inline
$ catala DCalc -s A
let scope A (A_in: A_in {b_in: bool}): A {o: integer} =
  let get b : bool = A_in.b_in in
  let set x : integer =
    error_empty ⟨true ⊢ ⟨ ⟨b ⊢ 0⟩, ⟨~ b ⊢ 1⟩ | false ⊢ ∅ ⟩⟩
  in
  let set o : integer =
    error_empty ⟨true ⊢ ⟨ ⟨x = 0 ⊢ 10⟩, ⟨x = 1 ⊢ 11⟩ | false ⊢ ∅ ⟩⟩
  in
  return { A o = o; }
```

```catala-test-inline
$ catala Concolic -s A
[RESULT] Constraints:
true
b_in
b_in
true
true
true

[RESULT] Computation successful! Results:
[RESULT] o = 10
```

