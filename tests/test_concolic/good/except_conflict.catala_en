## Article

```catala
declaration scope A:
    input x content integer
    input y content integer
    output o content integer

scope A:
    definition o equals 0
    exception definition o under condition x=1 consequence equals 1
    exception definition o under condition y=2 consequence equals 2
```

```catala-test-inline
$ catala DCalc -s A
let scope A (A_in: A_in {x_in: integer; y_in: integer}): A {o: integer} =
  let get x : integer = A_in.x_in in
  let get y : integer = A_in.y_in in
  let set o : integer =
    error_empty
      ⟨ ⟨ ⟨x = 1 ⊢ ⟨1⟩⟩, ⟨y = 2 ⊢ ⟨2⟩⟩ | false ⊢ ∅ ⟩
      | true ⊢ ⟨ ⟨true ⊢ ⟨0⟩⟩ | false ⊢ ∅ ⟩ ⟩
  in
  return { A o = o; }
```

```catala-test-inline
$ catala Concolic -s A
[RESULT] 
[RESULT] Evaluating with inputs:
[RESULT] . x_in = 42
[RESULT] . y_in = 42
[RESULT] Output of scope after evaluation:
[RESULT] . o = 0
[RESULT] 
[RESULT] Evaluating with inputs:
[RESULT] . x_in = 0
[RESULT] . y_in = 2
[RESULT] Output of scope after evaluation:
[RESULT] . o = 2
[RESULT] 
[RESULT] Evaluating with inputs:
[RESULT] . x_in = 1
[RESULT] . y_in = 42
[RESULT] Output of scope after evaluation:
[RESULT] . o = 1
[RESULT] 
[RESULT] Evaluating with inputs:
[RESULT] . x_in = 1
[RESULT] . y_in = 2
[RESULT] Output of scope after evaluation:
[RESULT]
Found error ↯Conflict(tests/test_concolic/good/except_conflict.catala_en:12.67-12.68,tests/test_concolic/good/except_conflict.catala_en:11.67-11.68,)↯ at tests/test_concolic/good/except_conflict.catala_en:7.12-7.13
[RESULT] 
[RESULT] Concolic interpreter done
[RESULT] Computation successful!
```

