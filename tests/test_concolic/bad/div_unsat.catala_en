## Article

```catala
declaration scope A:
  input x content integer
  input y content integer
  output o content integer

scope A:
  definition o equals 0
  exception definition o under condition y != 0 and x/y = 0.5 consequence equals 1
```

Here we see that even if there is a `y!=0` condition, the engine tries an input
with y=0. This happens because the Z3 condition that ensures the branch where
the denominator is zero is taken, is treated after the condition in the
default. I think this is expected.
TODO try with an assert beforehand instead.

In order, the constraints sent to the solver are (simplified debug output):
```
[no constraints]
=> Sat: input x=42, y=42
=> output o=0

NEGATE (y!=0 and x/y = 0.5)
       (y!=0)
=> Sat: input x=1, y=1
=> output: o=1

NEGATE (y!=0)
=> Sat: x=42, y=0
=> output: division by zero error
```

```catala-test-inline
$ catala Concolic -s A
[RESULT] 
[RESULT] Evaluating with inputs:
[RESULT] . x_in = 42
[RESULT] . y_in = 42
[RESULT] Output of scope after evaluation:
[RESULT] . o = 0
[RESULT] 
[RESULT] Evaluating with inputs:
[RESULT] . x_in = 1
[RESULT] . y_in = 2
[RESULT] Output of scope after evaluation:
[RESULT] . o = 1
[RESULT] 
[RESULT] Evaluating with inputs:
[RESULT] . x_in = 42
[RESULT] . y_in = 0
[RESULT] Output of scope after evaluation:
[RESULT]
Found error ↯DivisionByZero(tests/test_concolic/bad/div_unsat.catala_en:11.55-11.56,tests/test_concolic/bad/div_unsat.catala_en:11.53-11.56,)↯
[RESULT] 
[RESULT] Concolic interpreter done
[RESULT] Computation successful!
```

FIXME
```catala
declaration scope B:
  input x content integer
  input y content integer
  output o content integer

scope B:
    definition o equals 0
    exception definition o under condition y != 0 consequence equals 1
    exception definition o under condition x/y = 0.5 consequence equals 2
```

FIXME this does not behave properly because of the order of constraints:

```catala-test-inline
$ catala Concolic -s B
[RESULT] 
[RESULT] Evaluating with inputs:
[RESULT] . x_in = 42
[RESULT] . y_in = 42
[RESULT] Output of scope after evaluation:
[RESULT] . o = 1
[RESULT] 
[RESULT] Evaluating with inputs:
[RESULT] . x_in = 1
[RESULT] . y_in = 2
[RESULT] Output of scope after evaluation:
[RESULT]
Found error ↯Conflict(tests/test_concolic/bad/div_unsat.catala_en:72.73-72.74,tests/test_concolic/bad/div_unsat.catala_en:71.70-71.71,)↯
[RESULT] 
[RESULT] Evaluating with inputs:
[RESULT] . x_in = 42
[RESULT] . y_in = 0
[RESULT] Output of scope after evaluation:
[RESULT]
Found error ↯DivisionByZero(tests/test_concolic/bad/div_unsat.catala_en:72.46-72.47,tests/test_concolic/bad/div_unsat.catala_en:72.44-72.47,)↯
[ERROR]
Unexpected error: Failure("[compare_paths] the negated condition lead to the same path")
#return code 125#
```

