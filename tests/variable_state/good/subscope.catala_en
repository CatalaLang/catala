## Test

```catala-metadata
#[test] declaration scope A:
  context output foo content integer
    state bar
    state baz
    state fizz

#[test] declaration scope B:
  output foofoo content integer
    state bar
    state baz
  b scope A
  output foofoofoo content integer


scope A:
  definition foo state bar equals 1

  definition foo state baz equals foo + 1

  definition foo state fizz equals foo + 1


scope B:
  definition foofoo state bar equals 3
  definition foofoo state baz equals foofoo + 1
  definition b.foo equals foofoo
  definition foofoofoo equals b.foo
```



```catala-test-cli
$ catala Typecheck --check-invariants
┌─[RESULT]─
│ All invariant checks passed
└─
┌─[RESULT]─
│ Typechecking successful!
└─
```

```catala-test-cli
$ catala Scopelang -s A
#[test]
let scope A
    (foo#bar: ⟨integer⟩|context)
    (foo#baz: integer|internal)
    (foo#fizz: integer|internal|output)
  =
  let foo#bar : integer = reentrant or by default
    error_empty ⟨ ⟨true ⊢ ⟨1⟩⟩ | false ⊢ ∅ ⟩;
  let foo#baz : integer =
    error_empty ⟨ ⟨true ⊢ ⟨foo#bar + 1⟩⟩ | false ⊢ ∅ ⟩;
  let foo#fizz : integer =
    error_empty ⟨ ⟨true ⊢ ⟨foo#baz + 1⟩⟩ | false ⊢ ∅ ⟩
```

```catala-test-cli
$ catala test-scope B
┌─[RESULT]─ B ─
│ foofoo = 4
│ foofoofoo = 6
└─
```
