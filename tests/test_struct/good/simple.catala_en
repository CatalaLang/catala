## Article

```catala
declaration structure S:
  data x content integer
  data y content integer

declaration scope A:
  context output s content S
  context output z content integer

scope A:
  definition s equals S {
    -- x : 1
    -- y : 2
  }
  definition z equals s.x + s.y
```



```catala-test-inline
$ catala Typecheck --check_invariants
[RESULT]
Invariant Dcalc__Invariants.invariant_typing_defaults
   checked. result: [44/44]
[RESULT]
Invariant Dcalc__Invariants.invariant_match_inversion
   checked. result: [0/0]
[RESULT]
Invariant Dcalc__Invariants.invariant_app_inversion
   checked. result: [3/3]
[RESULT]
Invariant Dcalc__Invariants.invariant_no_return_a_function
   checked. result: [0/0]
[RESULT]
Invariant Dcalc__Invariants.invariant_no_partial_evaluation
   checked. result: [3/3]
[RESULT]
Invariant Dcalc__Invariants.invariant_default_no_arrow
   checked. result: [6/6]
[RESULT] Typechecking successful!
```

```catala-test-inline
$ catala Interpret -s A
[RESULT] Computation successful! Results:
[RESULT] s = S { -- x: 1 -- y: 2 }
[RESULT] z = 3
```
```catala-test-inline
$ catala Interpret_Lcalc -s A --avoid_exceptions --optimize
[RESULT] Computation successful! Results:
[RESULT] s = S { -- x: 1 -- y: 2 }
[RESULT] z = 3
```
