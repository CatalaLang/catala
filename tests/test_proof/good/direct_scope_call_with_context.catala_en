```catala
declaration scope SubFoo:
  context x content integer
  output y content integer

declaration scope Foo:
  output z content integer

scope SubFoo:
  definition x equals 1
  definition y equals x + x

scope Foo:
  definition z equals
     (output of SubFoo with {}).y
```



```catala-test-inline
$ catala Typecheck --check_invariants
[RESULT]
Invariant Dcalc__Invariants.invariant_typing_defaults
   checked. result: [56/56]
[RESULT]
Invariant Dcalc__Invariants.invariant_match_inversion
   checked. result: [0/0]
[RESULT]
Invariant Dcalc__Invariants.invariant_app_inversion
   checked. result: [5/5]
[RESULT]
Invariant Dcalc__Invariants.invariant_no_return_a_function
   checked. result: [3/3]
[RESULT]
Invariant Dcalc__Invariants.invariant_no_partial_evaluation
   checked. result: [5/5]
[RESULT]
Invariant Dcalc__Invariants.invariant_default_no_arrow
   checked. result: [7/7]
[RESULT] Typechecking successful!
```

```catala-test-inline
$ catala Proof -s Foo
[RESULT] No errors found during the proof mode run.
```
